{"version":3,"file":"beepbox_editor.js","sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../editor/BarScrollBar.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/filtering.ts","../synth/synth.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/FilterEditor.ts","../editor/CustomFilterPrompt.ts","../editor/InstrumentExportPrompt.ts","../editor/InstrumentImportPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/Layout.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/ChannelRow.ts","../editor/LayoutPrompt.ts","../editor/EnvelopeEditor.ts","../editor/FadeInOutEditor.ts","../editor/LimiterPrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/MidiInput.ts","../editor/KeyboardLayout.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SustainPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/RecordingSetupPrompt.ts","../editor/SpectrumEditor.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../editor/SongEditor.ts","../editor/SongPerformance.ts","../editor/Selection.ts","../editor/Preferences.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"sourcesContent":["/*!\r\nCopyright (c) 2012-2022 John Nesky and contributing authors\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\nexport interface Dictionary<T> {\r\n    [K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n    dictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum FilterType {\r\n    lowPass,\r\n    highPass,\r\n    peak,\r\n    length,\r\n}\r\n\r\nexport const enum SustainType {\r\n\tbright,\r\n\tacoustic,\r\n\tlength,\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n    noteSize,\r\n    none,\r\n    punch,\r\n    flare,\r\n    twang,\r\n    swell,\r\n    tremolo,\r\n    tremolo2,\r\n    decay,\r\n    blip,\r\n    spike,\r\n    clap,\r\n    blippy\r\n}\r\n\r\nexport const enum InstrumentType {\r\n    chip,\r\n    fm,\r\n    noise,\r\n    spectrum,\r\n    drumset,\r\n    harmonics,\r\n    pwm,\r\n    pickedString,\r\n    supersaw,\r\n    customChipWave,\r\n    mod,\r\n    length,\r\n}\r\n\r\nexport const enum DropdownID {\r\n    Vibrato = 0,\r\n    Pan = 1,\r\n    Chord = 2,\r\n    Transition = 3,\r\n    FM = 4,\r\n    Envelope = 5,\r\n\r\n}\r\n\r\nexport const enum EffectType {\r\n    reverb,\r\n    chorus,\r\n    panning,\r\n    distortion,\r\n    bitcrusher,\r\n    noteFilter,\r\n    echo,\r\n    pitchShift,\r\n    detune,\r\n    vibrato,\r\n    transition,\r\n    chord,\r\n    noteRange,\r\n    invertWave,\r\n    length,\r\n}\r\n\r\nexport const enum EnvelopeComputeIndex {\r\n    noteVolume,\r\n    noteFilterAllFreqs,\r\n    pulseWidth,\r\n    stringSustain,\r\n    unison,\r\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3,\r\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3,\r\n    feedbackAmplitude,\r\n    pitchShift,\r\n    detune,\r\n    vibratoDepth,\r\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\r\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\r\n    supersawDynamism,\r\n\tsupersawSpread,\r\n\tsupersawShape,\r\n    //operatorHzOffset0, operatorHzOffset1, operatorHzOffset2, operatorHzOffset3, // FOR 1.4.1\r\n    //operatorInversion0, operatorInversion1, operatorInversion2, operatorInversion3, // FOR 1.4.1\r\n    length,\r\n}\r\n\r\nexport const enum CustomEnvelopeEndType {\r\n    stay,\r\n    repeat,\r\n    pingPong,\r\n    decay\r\n}\r\n\r\n/*\r\nexport const enum InstrumentAutomationIndex {\r\n    mixVolume,\r\n    eqFilterAllFreqs,\r\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\r\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\r\n    distortion,\r\n    bitcrusherQuantization,\r\n    bitcrusherFrequency,\r\n    panning,\r\n    chorus,\r\n    echoSustain,\r\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\r\n    reverb,\r\n    length,\r\n}\r\n*/\r\n\r\nexport interface BeepBoxOption {\r\n    readonly index: number;\r\n    readonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n    readonly flags: ReadonlyArray<boolean>;\r\n    readonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n    readonly isWhiteKey: boolean;\r\n    readonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n    readonly stepsPerBeat: number;\r\n    readonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n    readonly expression: number;\r\n    samples: Float32Array;\r\n}\r\n\r\nexport interface OperatorWave extends BeepBoxOption {\r\n    samples: Float32Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n    readonly expression: number;\r\n    readonly basePitch: number;\r\n    readonly pitchFilterMult: number;\r\n    readonly isSoft: boolean;\r\n    samples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n    readonly isSeamless: boolean;\r\n    readonly continues: boolean;\r\n    readonly slides: boolean;\r\n    readonly slideTicks: number;\r\n    readonly includeAdjacentPatterns: boolean;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n    readonly amplitude: number;\r\n    readonly type: number;\r\n    readonly delayTicks: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n    readonly periodsSeconds: number[];\r\n    readonly period: number;\r\n}\r\n\r\nexport interface Unison extends BeepBoxOption {\r\n    readonly voices: number;\r\n    readonly spread: number;\r\n    readonly offset: number;\r\n    readonly expression: number;\r\n    readonly sign: number;\r\n}\r\n\r\nexport interface Modulator extends BeepBoxOption {\r\n    readonly name: string; // name that shows up in song editor UI\r\n    readonly pianoName: string; // short name that shows up in mod piano UI\r\n    readonly maxRawVol: number; // raw\r\n    readonly newNoteVol: number; // raw\r\n    readonly forSong: boolean; // true - setting is song scope\r\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\r\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\r\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\r\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\r\n\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n    readonly customInterval: boolean;\r\n    readonly arpeggiates: boolean;\r\n    readonly strumParts: number;\r\n    readonly singleTone: boolean;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n    readonly carrierCount: number;\r\n    readonly associatedCarrier: ReadonlyArray<number>;\r\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n    readonly mult: number;\r\n    readonly hzOffset: number;\r\n    readonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n    readonly type: EnvelopeType;\r\n    readonly speed: number;\r\n}\r\n\r\nexport interface CustomEnvelope extends BeepBoxOption {\r\n    readonly data: number[];\r\n    readonly endType: CustomEnvelopeEndType;\r\n    readonly stretchWithBeats: boolean;\r\n    readonly interpolate: boolean;\r\n    readonly mult: number;\r\n    readonly speed: number;\r\n}\r\n\r\nexport interface AutomationTarget extends BeepBoxOption {\r\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\r\n    readonly displayName: string;\r\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\r\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\r\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\r\n\t//readonly range: number | null; // set if automation is allowed.\r\n    readonly maxCount: number;\r\n    readonly effect: EffectType | null;\r\n    readonly compatibleInstruments: InstrumentType[] | null;\r\n}\r\n\r\nexport class Config {\r\n    // Params for post-processing compressor\r\n    public static thresholdVal: number = -10;\r\n    public static kneeVal: number = 40;\r\n    public static ratioVal: number = 12;\r\n    public static attackVal: number = 0;\r\n    public static releaseVal: number = 0.25;\r\n\r\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n        //   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n        { name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n\r\n\r\n    ]);\r\n    public static readonly keys: DictionaryArray<Key> = toNameMap([\r\n        { name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n        { name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n        { name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n        { name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n        { name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n        { name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n        { name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n        { name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n        { name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n        { name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n        { name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n    ]);\r\n    public static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n    public static readonly tempoMin: number = 30;\r\n    public static readonly tempoMax: number = 320;\r\n    public static readonly echoDelayRange: number = 24;\r\n    public static readonly echoDelayStepTicks: number = 4;\r\n    public static readonly echoSustainRange: number = 8;\r\n    public static readonly echoShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\r\n    public static readonly echoShelfGain: number = Math.pow(2.0, -0.5);\r\n    public static readonly reverbShelfHz: number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\r\n    public static readonly reverbShelfGain: number = Math.pow(2.0, -1.5);\r\n    public static readonly reverbRange: number = 32;\r\n    public static readonly reverbDelayBufferSize: number = 16384; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly reverbDelayBufferMask: number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly beatsPerBarMin: number = 3;\r\n    public static readonly beatsPerBarMax: number = 16;\r\n    public static readonly barCountMin: number = 1;\r\n    public static readonly barCountMax: number = 256;\r\n    public static readonly instrumentCountMin: number = 1;\r\n    public static readonly layeredInstrumentCountMax: number = 11;\r\n    public static readonly patternInstrumentCountMax: number = 11;\r\n    public static readonly partsPerBeat: number = 24;\r\n    public static readonly ticksPerPart: number = 2;\r\n    public static readonly ticksPerArpeggio: number = 3;\r\n    public static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\r\n    public static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n        { name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n        { name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n        { name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n        { name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n        { name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n    ]);\r\n\r\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\"];\r\n    public static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false];\r\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\r\n    public static readonly fmBaseExpression: number = 0.03;\r\n    public static readonly noiseBaseExpression: number = 0.19;\r\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\r\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\r\n    public static readonly harmonicsBaseExpression: number = 0.025;\r\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\r\n    public static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\r\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\r\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\r\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\r\n\r\n    public static readonly rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\r\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n    ]);\r\n    public static readonly chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\r\n    // Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n    public static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n        { name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n        // The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n        { name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n        { name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n        { name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n    ]);\r\n\r\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\r\n    public static readonly filterFreqRange: number = 34;\r\n    public static readonly filterFreqReferenceSetting: number = 28;\r\n    public static readonly filterFreqReferenceHz: number = 8000.0;\r\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\r\n    public static readonly filterFreqMinHz: number = 8.0;\r\n    public static readonly filterGainRange: number = 15;\r\n    public static readonly filterGainCenter: number = 7;\r\n    public static readonly filterGainStep: number = 1.0 / 2.0;\r\n    public static readonly filterMaxPoints: number = 12;\r\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\r\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\r\n\r\n    public static readonly filterSimpleCutRange: number = 11;\r\n    public static readonly filterSimplePeakRange: number = 8;\r\n\r\n    public static readonly fadeInRange: number = 10;\r\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\r\n    public static readonly fadeOutNeutral: number = 4;\r\n    public static readonly drumsetFadeOutTicks: number = 48;\r\n    public static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\r\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false },\r\n    ]);\r\n    public static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\r\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\r\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\r\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\r\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\r\n    ]);\r\n    public static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n        { name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n        { name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n    ]);\r\n    // This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n    //                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n    public static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\r\n    public static readonly unisons: DictionaryArray<Unison> = toNameMap([\r\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\r\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\r\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\r\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 }\r\n    ]);\r\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"note range\", \"invert wave\"];\r\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb, EffectType.noteRange, EffectType.invertWave];\r\n    public static readonly noteSizeMax: number = 6;\r\n    public static readonly volumeRange: number = 50;\r\n    // Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n    // given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\t\r\n    public static readonly volumeLogScale: number = 0.1428;\r\n    public static readonly panCenter: number = 50;\r\n    public static readonly panMax: number = Config.panCenter * 2;\r\n    public static readonly panDelaySecondsMax: number = 0.001;\r\n    public static readonly chorusRange: number = 8;\r\n    public static readonly chorusPeriodSeconds: number = 2.0;\r\n    public static readonly chorusDelayRange: number = 0.0034;\r\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\r\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\r\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\r\n    public static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\r\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\r\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\r\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\r\n    ]);\r\n    public static readonly maxChordSize: number = 9;\r\n    public static readonly operatorCount: number = 4;\r\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount);\r\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n    ]);\r\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n    public static readonly operatorAmplitudeMax: number = 15;\r\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([ //this will still be useful for backwards compat\r\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        \r\n        { name: \"-1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: 1.0 },\r\n        { name: \"-2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: 1.0 },\r\n        { name: \"-3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n        { name: \"-20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: -1.0 },\r\n    ]);\r\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\r\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\r\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"blip 1\", type: EnvelopeType.blip, speed: 6.0 },\r\n        { name: \"blip 2\", type: EnvelopeType.blip, speed: 16.0 },\r\n        { name: \"blip 3\", type: EnvelopeType.blip, speed: 32.0 },\r\n        { name: \"spike 1\", type: EnvelopeType.spike, speed: 32.0 },\r\n        { name: \"spike 2\", type: EnvelopeType.spike, speed: 8.0 },\r\n        { name: \"spike 3\", type: EnvelopeType.spike, speed: 2.0 },\r\n        { name: \"clap 1\", type: EnvelopeType.clap, speed: 128.0 },\r\n        { name: \"clap 2\", type: EnvelopeType.clap, speed: 64.0 },\r\n        { name: \"clap 3\", type: EnvelopeType.clap, speed: 32.0 },\r\n        { name: \"blippy 1\", type: EnvelopeType.blippy, speed: 32.0 },\r\n        { name: \"blippy 2\", type: EnvelopeType.blippy, speed: 16.0 },\r\n        { name: \"blippy 3\", type: EnvelopeType.blippy, speed: 8.0 },\r\n        { name: \"blippy 4\", type: EnvelopeType.blippy, speed: 4.0 },\r\n        { name: \"blippy 5\", type: EnvelopeType.blippy, speed: 2.0 },\r\n        { name: \"blippy 6\", type: EnvelopeType.blippy, speed: 1.0 },\r\n        \r\n    ]);\r\n    public static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n        { name: \"1⟲\", indices: [[1], [], [], []] },\r\n        { name: \"2⟲\", indices: [[], [2], [], []] },\r\n        { name: \"3⟲\", indices: [[], [], [3], []] },\r\n        { name: \"4⟲\", indices: [[], [], [], [4]] },\r\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n        { name: \"1→2\", indices: [[], [1], [], []] },\r\n        { name: \"1→3\", indices: [[], [], [1], []] },\r\n        { name: \"1→4\", indices: [[], [], [], [1]] },\r\n        { name: \"2→3\", indices: [[], [], [2], []] },\r\n        { name: \"2→4\", indices: [[], [], [], [2]] },\r\n        { name: \"3→4\", indices: [[], [], [], [3]] },\r\n        { name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n        { name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n    ]);\r\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumBasePitch: number = 24;\r\n    public static readonly spectrumControlPoints: number = 30;\r\n    public static readonly spectrumControlPointsPerOctave: number = 7;\r\n    public static readonly spectrumControlPointBits: number = 3;\r\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n    public static readonly harmonicsControlPoints: number = 28;\r\n    public static readonly harmonicsRendered: number = 64;\r\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\r\n    public static readonly harmonicsControlPointBits: number = 3;\r\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n    public static readonly pulseWidthRange: number = 50;\r\n    public static readonly pulseWidthStepPower: number = 0.5;\r\n    public static readonly supersawVoiceCount: number = 7;\r\n\tpublic static readonly supersawDynamismMax: number = 6;\r\n\tpublic static readonly supersawSpreadMax: number = 12;\r\n\tpublic static readonly supersawShapeMax: number = 6;\r\n    public static readonly pitchChannelCountMin: number = 1;\r\n    public static readonly pitchChannelCountMax: number = 40;\r\n    public static readonly noiseChannelCountMin: number = 0;\r\n    public static readonly noiseChannelCountMax: number = 32;\r\n    public static readonly modChannelCountMin: number = 0;\r\n    public static readonly modChannelCountMax: number = 28;\r\n    public static readonly noiseInterval: number = 6;\r\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n    public static readonly drumCount: number = 12;\r\n    public static readonly pitchOctaves: number = 10;\r\n    public static readonly modCount: number = 6;\r\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\r\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\r\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\r\n    public static readonly detuneCenter: number = 200;\r\n    public static readonly detuneMax: number = 400;\r\n    public static readonly detuneMin: number = 0;\r\n    public static readonly songDetuneMin: number = 0;\r\n    public static readonly songDetuneMax: number = 500;\r\n    public static readonly sineWaveLength: number = 1 << 8; // 256\r\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n    public static readonly sineWave: Float32Array = generateSineWave();\r\n\r\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\r\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\r\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\r\n\r\n    public static readonly distortionRange: number = 8;\r\n    public static readonly stringSustainRange: number = 15;\r\n    public static readonly stringDecayRate: number = 0.12;\r\n    public static readonly enableAcousticSustain: boolean = false;\r\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\r\n\t\r\n    public static readonly bitcrusherFreqRange: number = 14;\r\n    public static readonly bitcrusherOctaveStep: number = 0.5;\r\n    public static readonly bitcrusherQuantizationRange: number = 8;\r\n\r\n    public static readonly maxEnvelopeCount: number = 12;\r\n    public static readonly defaultAutomationRange: number = 13;\r\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\r\n        { name: \"none\", computeIndex: null, displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1, effect: null, compatibleInstruments: null },\r\n        { name: \"noteVolume\", computeIndex: EnvelopeComputeIndex.noteVolume, displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1, effect: null, compatibleInstruments: null },\r\n        { name: \"pulseWidth\", computeIndex: EnvelopeComputeIndex.pulseWidth, displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\r\n        { name: \"stringSustain\", computeIndex: EnvelopeComputeIndex.stringSustain, displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pickedString] },\r\n        { name: \"unison\", computeIndex: EnvelopeComputeIndex.unison, displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString] },\r\n        { name: \"operatorFrequency\", computeIndex: EnvelopeComputeIndex.operatorFrequency0, displayName: \"fm# freq\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount, effect: null, compatibleInstruments: [InstrumentType.fm] },\r\n        { name: \"operatorAmplitude\", computeIndex: EnvelopeComputeIndex.operatorAmplitude0, displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount, effect: null, compatibleInstruments: [InstrumentType.fm] },\r\n        { name: \"feedbackAmplitude\", computeIndex: EnvelopeComputeIndex.feedbackAmplitude, displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.fm] },\r\n        { name: \"pitchShift\", computeIndex: EnvelopeComputeIndex.pitchShift, displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1, effect: EffectType.pitchShift, compatibleInstruments: null },\r\n        { name: \"detune\", computeIndex: EnvelopeComputeIndex.detune, displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1, effect: EffectType.detune, compatibleInstruments: null },\r\n        { name: \"vibratoDepth\", computeIndex: EnvelopeComputeIndex.vibratoDepth, displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: EffectType.vibrato, compatibleInstruments: null },\r\n        { name: \"noteFilterAllFreqs\", computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs, displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter: true, /*range: null,                           */    maxCount: 1, effect: EffectType.noteFilter, compatibleInstruments: null },\r\n        {name: \"noteFilterFreq\",         computeIndex:       EnvelopeComputeIndex.noteFilterFreq0,        displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter:  true, /*range: Config.filterFreqRange, */    maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\r\n\t\t// Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for envelopes.\r\n        // Hm maybe i should re-enable this?\r\n\t\t{name: \"noteFilterGain\",         computeIndex:                           null,                    displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, /*range: Config.filterGainRange,         */    maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\r\n\t\t{name: \"supersawDynamism\",       computeIndex:       EnvelopeComputeIndex.supersawDynamism,       displayName: \"dynamism\",         /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawDynamismMax + 1, */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\r\n\t\t{name: \"supersawSpread\",         computeIndex:       EnvelopeComputeIndex.supersawSpread,         displayName: \"spread\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawSpreadMax + 1,   */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\r\n\t\t{name: \"supersawShape\",          computeIndex:       EnvelopeComputeIndex.supersawShape,          displayName: \"saw↔pulse\",        /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawShapeMax + 1,    */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\r\n        //{ name: \"operatorHzOffset\", computeIndex: EnvelopeComputeIndex.operatorHzOffset0, displayName: \"fm# hz\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount, effect: null, compatibleInstruments: [InstrumentType.fm] }, // FOR 1.4.1\r\n        //{ name: \"operatorInversion\", computeIndex: EnvelopeComputeIndex.operatorInversion0, displayName: \"fm# invert\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount, effect: null, compatibleInstruments: [InstrumentType.fm] }, // FOR 1.4.1\r\n\t\t// Ooh these too.\r\n        /*\r\n        {name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\r\n        {name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\r\n        {name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\r\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\r\n        {name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\r\n        {name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\r\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\r\n        {name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\r\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\r\n        */\r\n    ]);\r\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"sine\", samples: Config.sineWave },\r\n        { name: \"triangle\", samples: generateTriWave() },\r\n        { name: \"sawtooth\", samples: generateSawWave() },\r\n        { name: \"pulse width\", samples: generateSquareWave() },\r\n        { name: \"ramp\", samples: generateSawWave(true) },\r\n        { name: \"trapezoid\", samples: generateTrapezoidWave(2) },\r\n        { name: \"white noise\", samples: getDrumWave(1, null, null) },\r\n    ]);\r\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"1%\", samples: generateSquareWave(0.01) },\r\n        { name: \"5%\", samples: generateSquareWave(0.05) },\r\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\r\n        { name: \"25%\", samples: generateSquareWave(0.25) },\r\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\r\n        { name: \"50%\", samples: generateSquareWave(0.5) },\r\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\r\n        { name: \"75%\", samples: generateSquareWave(0.75) },\r\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\r\n        { name: \"95%\", samples: generateSquareWave(0.95) },\r\n        { name: \"99%\", samples: generateSquareWave(0.99) },\r\n    ]);\r\n\r\n\r\n    // Height of the small editor column for inserting/deleting rows, in pixels.\r\n    public static readonly barEditorHeight: number = 10;\r\n\r\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\r\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\r\n        { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"No Mod Setting\", promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\r\n        { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Song Volume\", promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\r\n            promptName: \"Song Tempo\", promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\r\n        { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Reverb\", promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Go To Next Bar\", promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\r\n        { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Note Volume\", promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"pan\", pianoName: \"Pan\", maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Instrument Panning\", promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\r\n        { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\r\n            promptName: \"Instrument Reverb\", promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\r\n            promptName: \"Instrument Distortion\", promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 1\", promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm feedback\", pianoName: \"FM Feedback\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\r\n        { name: \"detune\", pianoName: \"Detune\", maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\r\n            promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\r\n        { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\r\n        { name: \"song detune\", pianoName: \"Detune\", maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\r\n            promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\r\n        { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\r\n        { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\r\n        { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo\", pianoName: \"Echo\", maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\r\n            promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\r\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\r\n        { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: Config.chorusRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\r\n            promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\r\n            promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\r\n        { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\r\n        { name: \"envelope speed\", pianoName: \"EnvelopeSpd\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Envelope Speed\", promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"dynamism\", pianoName: \"Dynamism\", maxRawVol: Config.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Dynamism\", promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"spread\", pianoName: \"Spread\", maxRawVol: Config.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Spread\", promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"saw shape\", pianoName: \"Saw Shape\", maxRawVol: Config.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Shape\", promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm frequency 1\", pianoName: \"FM Freq. 1\", maxRawVol: 499, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length, // 499 since 0 is treated as 1 and so on\r\n            promptName: \"FM Frequency 1\", promptDesc: [ \"This setting affects the frequency of the first FM operator, just like the corresponding input box on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound very high pitched.\", \"For the full range of control with this mod, set the frequency to 1 or 2.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm frequency 2\", pianoName: \"FM Freq. 2\", maxRawVol: 499, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Frequency 2\", promptDesc: [\"This setting affects the frequency of the second FM operator, just like the corresponding input box on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound very high pitched.\", \"For the full range of control with this mod, set the frequency to 1 or 2.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm frequency 3\", pianoName: \"FM Freq. 3\", maxRawVol: 499, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Frequency 3\", promptDesc: [\"This setting affects the frequency of the third FM operator, just like the corresponding input box on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound very high pitched.\", \"For the full range of control with this mod, set the frequency to 1 or 2.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm frequency 4\", pianoName: \"FM Freq. 4\", maxRawVol: 499, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Frequency 4\", promptDesc: [\"This setting affects the frequency of the fourth FM operator, just like the corresponding input box on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound very high pitched.\", \"For the full range of control with this mod, set the frequency to 1 or 2.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm hz offset 1\", pianoName: \"FM Hz. 1\", maxRawVol: 400, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Hz Offset 1\", promptDesc: [ \"This setting affects the hz offset of the first FM operator, just like the corresponding input box on your instrument.\", \"It works in a overwriting way, so using this mod will be like directly setting the hz offset.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm hz offset 2\", pianoName: \"FM Hz. 2\", maxRawVol: 400, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Hz Offset 2\", promptDesc: [ \"This setting affects the hz offset of the second FM operator, just like the corresponding input box on your instrument.\", \"It works in a overwriting way, so using this mod will be like directly setting the hz offset.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm hz offset 3\", pianoName: \"FM Hz. 3\", maxRawVol: 400, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Hz Offset 3\", promptDesc: [ \"This setting affects the hz offset of the third FM operator, just like the corresponding input box on your instrument.\", \"It works in a overwriting way, so using this mod will be like directly setting the hz offset.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm hz offset 4\", pianoName: \"FM Hz. 4\", maxRawVol: 400, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Hz Offset 4\", promptDesc: [ \"This setting affects the hz offset of the fourth FM operator, just like the corresponding input box on your instrument.\", \"It works in a overwriting way, so using this mod will be like directly setting the hz offset.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm invert 1\", pianoName: \"FM Inv. 1\", maxRawVol: 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Invert 1\", promptDesc: [ \"This setting affects the inversion of the first FM operator, just like the corresponding check box on your instrument.\", \"It works in a overwriting way, so using this mod will be like checking the box, 1 for true, 0 for false, this is rounded.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm invert 2\", pianoName: \"FM Inv. 2\", maxRawVol: 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Invert 2\", promptDesc: [ \"This setting affects the inversion of the second FM operator, just like the corresponding check box on your instrument.\", \"It works in a overwriting way, so using this mod will be like checking the box, 1 for true, 0 for false, this is rounded.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm invert 3\", pianoName: \"FM Inv. 3\", maxRawVol: 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Invert 3\", promptDesc: [ \"This setting affects the inversion of the third FM operator, just like the corresponding check box on your instrument.\", \"It works in a overwriting way, so using this mod will be like checking the box, 1 for true, 0 for false, this is rounded.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"fm invert 4\", pianoName: \"FM Inv. 4\", maxRawVol: 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Invert 4\", promptDesc: [ \"This setting affects the inversion of the fourth FM operator, just like the corresponding check box on your instrument.\", \"It works in a overwriting way, so using this mod will be like checking the box, 1 for true, 0 for false, this is rounded.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n    ]);\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float32Array {\r\n    let sum: number = 0.0;\r\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\r\n    const average: number = sum / wave.length;\r\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\r\n    performIntegral(wave);\r\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n    wave.push(0);\r\n    return new Float32Array(wave);\r\n}\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\r\n    let magn: number = 0.0;\r\n\r\n    centerWave(wave);\r\n\r\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        magn += Math.abs(wave[i]);\r\n    }\r\n    const magnAvg: number = magn / (wave.length - 1);\r\n\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        wave[i] = wave[i] / magnAvg;\r\n    }\r\n\r\n    return new Float32Array(wave);\r\n\r\n}\r\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\r\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\r\n    let cumulative: number = 0.0;\r\n    let newWave: Float32Array = new Float32Array(wave.length);\r\n    for (let i: number = 0; i < wave.length; i++) {\r\n        newWave[i] = cumulative;\r\n        cumulative += wave[i];\r\n    }\r\n\r\n    return newWave;\r\n}\r\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\r\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\r\n\tlet cumulative: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tconst temp = wave[i];\r\n\t\twave[i] = cumulative;\r\n\t\tcumulative += temp;\r\n\t}\r\n}\r\n\r\nexport function getPulseWidthRatio(pulseWidth: number): number {\r\n    // BeepBox formula for reference\r\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\r\n\r\n    return pulseWidth / (Config.pulseWidthRange * 2);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\r\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\r\n    if (wave == null) {\r\n        wave = new Float32Array(Config.chipNoiseLength + 1);\r\n        Config.chipNoises[index].samples = wave;\r\n\r\n        if (index == 0) {\r\n            // The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 1 << 14;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 1) {\r\n            // White noise is just random values for each sample.\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = Math.random() * 2.0 - 1.0;\r\n            }\r\n        } else if (index == 2) {\r\n            // The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 2 << 14;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 3) {\r\n            // The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 10 << 2;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 4) {\r\n            // \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\r\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\r\n            inverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n            scaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n        } else if (index == 5) {\r\n            // \"Shine\" drums from modbox!\r\n            var drumBuffer = 1;\r\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n                var newBuffer = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 10 << 2;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 6) {\r\n            // \"Deep\" drums from modbox!\r\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\r\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\r\n            inverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n            scaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n        } else if (index == 7) {\r\n            // \"Cutter\" drums from modbox!\r\n            var drumBuffer = 1;\r\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\r\n                var newBuffer = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 15 << 2;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 8) {\r\n            // \"Metallic\" drums from modbox!\r\n            var drumBuffer = 1;\r\n            for (var i = 0; i < 32768; i++) {\r\n                wave[i] = (drumBuffer & 1) / 2.0 - 0.5;\r\n                var newBuffer = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer -= 10 << 2;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized drum index: \" + index);\r\n        }\r\n\r\n        wave[Config.chipNoiseLength] = wave[0];\r\n    }\r\n\r\n    return wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n    const referenceOctave: number = 11;\r\n    const referenceIndex: number = 1 << referenceOctave;\r\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\r\n    const retroWave: Float32Array = getDrumWave(0, null, null);\r\n    let combinedAmplitude: number = 0.0;\r\n    for (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\r\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\r\n\r\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n        combinedAmplitude += amplitude;\r\n\r\n        // Add two different sources of psuedo-randomness to the noise\r\n        // (individually they aren't random enough) but in a deterministic\r\n        // way so that live spectrum editing doesn't result in audible pops.\r\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\r\n        // LFSR retro wave (effectively random), and also rotate the phase\r\n        // of each sine wave based on the golden angle to disrupt the symmetry.\r\n        amplitude *= retroWave[i];\r\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n        wave[i] = Math.cos(radians) * amplitude;\r\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\r\n    }\r\n\r\n    return combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTriWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    const centerPoint: number = Config.sineWaveLength / 4;\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\r\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(inverse: boolean = false): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n        wave[i] = inverse ? -wave[i] : wave[i];\r\n    }\r\n    return wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n    if (arpeggioPattern != null) {\r\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n            arpeggioPattern = [0, 0, 1, 1];\r\n        }\r\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n    } else {\r\n        return arpeggio % pitchCount;\r\n    }\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n    const dictionary: Dictionary<T> = {};\r\n    for (let i: number = 0; i < array.length; i++) {\r\n        const value: any = array[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <T>value;\r\n    }\r\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}\r\n\r\nexport function effectsIncludeTransition(effects: number): boolean {\r\n    return (effects & (1 << EffectType.transition)) != 0;\r\n}\r\nexport function effectsIncludeChord(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chord)) != 0;\r\n}\r\nexport function effectsIncludePitchShift(effects: number): boolean {\r\n    return (effects & (1 << EffectType.pitchShift)) != 0;\r\n}\r\nexport function effectsIncludeDetune(effects: number): boolean {\r\n    return (effects & (1 << EffectType.detune)) != 0;\r\n}\r\nexport function effectsIncludeVibrato(effects: number): boolean {\r\n    return (effects & (1 << EffectType.vibrato)) != 0;\r\n}\r\nexport function effectsIncludeNoteFilter(effects: number): boolean {\r\n    return (effects & (1 << EffectType.noteFilter)) != 0;\r\n}\r\nexport function effectsIncludeDistortion(effects: number): boolean {\r\n    return (effects & (1 << EffectType.distortion)) != 0;\r\n}\r\nexport function effectsIncludeBitcrusher(effects: number): boolean {\r\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\r\n}\r\nexport function effectsIncludePanning(effects: number): boolean {\r\n    return (effects & (1 << EffectType.panning)) != 0;\r\n}\r\nexport function effectsIncludeChorus(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chorus)) != 0;\r\n}\r\nexport function effectsIncludeEcho(effects: number): boolean {\r\n    return (effects & (1 << EffectType.echo)) != 0;\r\n}\r\nexport function effectsIncludeReverb(effects: number): boolean {\r\n    return (effects & (1 << EffectType.reverb)) != 0;\r\n}\r\nexport function effectsIncludeNoteRange(effects: number): boolean {\r\n    return (effects & (1 << EffectType.noteRange)) != 0;\r\n}\r\nexport function effectsIncludeInvertWave(effects: number): boolean {\r\n    return (effects & (1 << EffectType.invertWave)) != 0;\r\n}\r\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\r\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\r\n    const dictionary: Dictionary<ChipWave> = {};\r\n    for (let i: number = 0; i < newArray.length; i++) {\r\n        newArray[i] = Object.assign([], raw[i]);\r\n        const value: any = newArray[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <ChipWave>value;\r\n    }\r\n    for (let key in dictionary) {\r\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\r\n    }\r\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\nexport interface PresetCategory extends BeepBoxOption {\r\n    readonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n    readonly isNoise?: boolean;\r\n    readonly isMod?: boolean;\r\n    readonly generalMidi?: boolean;\r\n    readonly midiProgram?: number;\r\n    readonly midiSubharmonicOctaves?: number;\r\n    readonly customType?: InstrumentType;\r\n    readonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n    public static readonly version: string = \"1.4.0\"; // Not using patch versions in display right now, maybe someday.\r\n    public static readonly versionDisplayName: string = \"Dogebox2 \" + EditorConfig.version;\r\n\r\n    public static readonly releaseNotesURL: string = \"https://dogeiscut.github.io/dogebox2/patch_notes/\" + EditorConfig.version + \".html\";\r\n\r\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\r\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\r\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\r\n\r\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n        {\r\n        // The order of this array needs to line up with the order of the InstrumentType declarations in SynthConfig.ts. (changes.ts' random instrument generation relies on this, for one.)\r\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"chip wave\", customType: InstrumentType.chip },\r\n                { name: \"FM (expert)\", customType: InstrumentType.fm },\r\n                { name: \"basic noise\", customType: InstrumentType.noise },\r\n                { name: \"spectrum\", customType: InstrumentType.spectrum },\r\n                { name: \"drumset\", customType: InstrumentType.drumset },\r\n                { name: \"harmonics\", customType: InstrumentType.harmonics },\r\n                { name: \"pulse width\", customType: InstrumentType.pwm },\r\n                { name: \"picked string\", customType: InstrumentType.pickedString },\r\n                { name: \"supersaw\", customType: InstrumentType.supersaw },\r\n                { name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\r\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\r\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\r\n                { name: \"supersaw lead\",    midiProgram:  81, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":2}],\"effects\":[\"reverb\"],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\r\n                { name: \"FM sine\", midiProgram: 32, settings: {\"type\":\"FM\",\"volume\":0,\"eqFilter\":[],\"eqFilterType\":true,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"effects\":[\"panning\"],\"pan\":0,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"none\",\"envelope\":\"note size\"}]}}\r\n            ])\r\n        },\r\n        {\r\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\r\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\r\n                { name: \"grand piano 3\",      midiProgram:   0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":4},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":4},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884}],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":86,\"stringSustainType\":\"acoustic\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1}]}},\r\n\t\t\t\r\n            ])\r\n        },\r\n        {\r\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\r\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\r\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\r\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\r\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\r\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\r\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n                { name: \"supersaw string\",  midiProgram:  41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":500,\"linearGain\":0.1768}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":6,\"pulseWidth\":35.35534,\"dynamism\":83,\"spread\":8,\"shape\":50,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]}},\r\n                { name: \"supersaw string 2\", midiProgram: 41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"effects\":[\"note filter\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"chorus\":57,\"reverb\":42,\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":67,\"spread\":58,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"pulseWidth\",\"envelope\":\"flare 2\"}]}},\r\n            ])\r\n        },\r\n        {\r\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\r\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\r\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\r\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\r\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"supersaw pad\",     midiProgram:  93, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768}],\"effects\":[\"reverb\"],\"reverb\":100,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":24,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\r\n            ])\r\n        },\r\n        {\r\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\r\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"synth kick 2\", midiProgram: 47, isNoise: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\r\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\r\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\r\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\r\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Dogebox2 Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"wibble bass\", midiProgram: 36, settings: {\"type\":\"chip\",\"volume\":1,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"chord type\",\"vibrato\",\"note filter\",\"reverb\"],\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"vibrato\":\"heavy\",\"vibratoDepth\":0.45,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":7,\"noteSimplePeak\":2,\"noteFilter\":[],\"pan\":0,\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"wave\":\"1/4 pulse\",\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"}]}},\r\n                { name: \"square bell\", midiProgram: 36, settings: {\"type\":\"chip\",\"volume\":4,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"vibrato\",\"note filter\",\"reverb\"],\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":4,\"noteSimplePeak\":3,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1027.59,\"linearGain\":1}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":1027.59,\"linearGain\":1}],\"pan\":0,\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"wave\":\"square\",\"unison\":\"hum\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]}},\r\n                { name: \"scratcher\", midiProgram: 36, settings: {\"type\":\"chip\",\"volume\":4,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"vibrato\",\"note filter\",\"reverb\"],\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":7,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"pan\":0,\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":-3,\"wave\":\"sawtooth\",\"unison\":\"bowed\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"}]}},\r\n                { name: \"scratcher backer\", midiProgram: 36, settings: {\"type\":\"PWM\",\"volume\":0,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.5}],\"effects\":[\"panning\",\"note filter\",\"bitcrusher\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1}],\"bitcrusherOctave\":5,\"bitcrusherQuantization\":57,\"pan\":0,\"panDelay\":10,\"reverb\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":-6,\"pulseWidth\":45,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"}]}},\r\n                { name: \"scratcher reverberator\", midiProgram: 36, settings: {\"type\":\"PWM\",\"volume\":3,\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":2}],\"effects\":[\"panning\",\"chorus\",\"reverb\"],\"pan\":0,\"panDelay\":10,\"chorus\":57,\"reverb\":55,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"pulseWidth\":47,\"envelopes\":[]}},\r\n                { name: \"superchared eletric guitar\", midiProgram: 29, settings: {\"type\":\"noise\",\"volume\":14,\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"panning\",\"chord type\",\"pitch shift\",\"note filter\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":6,\"noteFilterType\":true,\"noteSimpleCut\":5,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768}],\"distortion\":86,\"aliases\":false,\"pan\":0,\"panDelay\":10,\"chorus\":100,\"echoSustain\":29,\"echoDelayBeats\":1,\"reverb\":35,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"wave\":\"buzz\",\"unison\":\"fifth\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]}}\r\n            ])\r\n        }\r\n    ]);\r\n\r\n    public static valueToPreset(presetValue: number): Preset | null {\r\n        const categoryIndex: number = presetValue >> 6;\r\n        const presetIndex: number = presetValue & 0x3F;\r\n        return EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n    }\r\n\r\n    public static midiProgramToPresetValue(program: number): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static nameToPresetValue(presetName: string): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport interface ChannelColors extends BeepBoxOption {\r\n    readonly secondaryChannel: string;\r\n    readonly primaryChannel: string;\r\n    readonly secondaryNote: string;\r\n    readonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\tpublic static usesColorFormula: boolean = false;\r\n    public static readonly themes: { [name: string]: string } = {\r\n        \"dark classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"light classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t--editor-background: white;\r\n\t\t\t\t--hover-preview: black;\r\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t--primary-text: black;\r\n\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t--inverted-text: white;\r\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\r\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t--noise4-secondary-note:    #B290CC;\r\n\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\r\n\t\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t\t--noise5-secondary-note:    #ABC183;\r\n\t\t\t\t--noise5-primary-note:      #68784C;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #666;\r\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t`,\r\n        \"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\r\n\t\t\t\t\t--disabled-note-secondary:  #395440;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #515164;\r\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #555955;\r\n\t\t\t--fifth-note: #1a1818;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary:    #66a;\r\n\t\t\t--disabled-note-secondary:  #447;\r\n\t\t}\r\n\t`,\r\n        \"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #868;\r\n\t\t\t\t\t--disabled-note-secondary:  #767;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\r\n\t\t\"beachcombing\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #010121;\r\n\t\t\t--editor-background: #020222;\r\n\t\t\t--hover-preview: #f3ffff;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #c1f1ff;\r\n\t\t\t--secondary-text: #546775;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #3e0028;\r\n\t\t\t--loop-accent: #5a00ff;\r\n\t\t\t--link-accent: #ff00c8fc;\r\n\t\t\t--ui-widget-background: #1f2b52;\r\n\t\t\t--ui-widget-focus: #384e91;\r\n\t\t\t--pitch-background: #2c3155;\r\n\t\t\t--tonic: #a32f6e;\r\n\t\t\t--fifth-note: #0044a0;\r\n\t\t\t--white-piano-key: #fff;\r\n\t\t\t--black-piano-key: #202d42;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #34406c;\r\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t--track-editor-bg-noise: #562e3b;\r\n\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t--track-editor-bg-mod: #372e66;\r\n\t\t\t--track-editor-bg-mod-dim: #2a1640;\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #ff67c2;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #7ce1ff;\r\n\t\t\t--mute-button-mod: #db519d;\r\n\t\t\t--pitch1-secondary-channel: #329b70;\r\n\t\t\t--pitch1-primary-channel: #53ffb8;\r\n\t\t\t--pitch1-secondary-note: #4cb98c;\r\n\t\t\t--pitch1-primary-note: #98ffd4;\r\n\t\t\t--pitch2-secondary-channel: #8e8632;\r\n\t\t\t--pitch2-primary-channel: #fff36a;\r\n\t\t\t--pitch2-secondary-note: #afaf22;\r\n\t\t\t--pitch2-primary-note: #f9f93f;\r\n\t\t\t--pitch3-secondary-channel: #018e8e;\r\n\t\t\t--pitch3-primary-channel: #00ffff;\r\n\t\t\t--pitch3-secondary-note: #24b7b7;\r\n\t\t\t--pitch3-primary-note: #a7ffff;\r\n\t\t\t--pitch4-secondary-channel: #6c003d;\r\n\t\t\t--pitch4-primary-channel: #ff0090;\r\n\t\t\t--pitch4-secondary-note: #a73c78;\r\n\t\t\t--pitch4-primary-note: #ff98d2;\r\n\t\t\t--pitch5-secondary-channel: #0e8153;\r\n\t\t\t--pitch5-primary-channel: #59ffbd;\r\n\t\t\t--pitch5-secondary-note: #489979;\r\n\t\t\t--pitch5-primary-note: #b0ffe0;\r\n\t\t\t--pitch6-secondary-channel: #185aab;\r\n\t\t\t--pitch6-primary-channel: #4e7ce5;\r\n\t\t\t--pitch6-secondary-note: #3e99d9;\r\n\t\t\t--pitch6-primary-note: #b3e3ff;\r\n\t\t\t--pitch7-secondary-channel: #4f007d;\r\n\t\t\t--pitch7-primary-channel: #a200ff;\r\n\t\t\t--pitch7-secondary-note: #9741c9;\r\n\t\t\t--pitch7-primary-note: #d386ff;\r\n\t\t\t--pitch8-secondary-channel: #101c8d;\r\n\t\t\t--pitch8-primary-channel: #1c5df1;\r\n\t\t\t--pitch8-secondary-note: #FF4E63;\r\n\t\t\t--pitch8-primary-note: #FFB2BB;\r\n\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t--pitch9-primary-channel: #50FFC9;\r\n\t\t\t--pitch9-secondary-note: #00C78A;\r\n\t\t\t--pitch9-primary-note: #83FFD9;\r\n\t\t\t--pitch10-secondary-channel: #A11FFF;\r\n\t\t\t--pitch10-primary-channel: #CE8BFF;\r\n\t\t\t--pitch10-secondary-note: #B757FF;\r\n\t\t\t--pitch10-primary-note: #DFACFF;\r\n\t\t\t--noise1-secondary-channel: #635070;\r\n\t\t\t--noise1-primary-channel: #9071db;\r\n\t\t\t--noise1-secondary-note: #915dc1;\r\n\t\t\t--noise1-primary-note: #c5a5ff;\r\n\t\t\t--noise2-secondary-channel: #993367;\r\n\t\t\t--noise2-primary-channel: #dd777c;\r\n\t\t\t--noise2-secondary-note: #cc6695;\r\n\t\t\t--noise2-primary-note: #f0bbd1;\r\n\t\t\t--noise3-secondary-channel: #4a8c8f;\r\n\t\t\t--noise3-primary-channel: #77c5dd;\r\n\t\t\t--noise3-secondary-note: #6fb4cf;\r\n\t\t\t--noise3-primary-note: #bbf2ff;\r\n\t\t\t--noise4-secondary-channel: #8e3e7d;\r\n\t\t\t--noise4-primary-channel: #c682d2;\r\n\t\t\t--noise4-secondary-note: #b871c1;\r\n\t\t\t--noise4-primary-note: #ffb8f0;\r\n\t\t\t--noise5-secondary-channel: #785e37;\r\n\t\t\t--noise5-primary-channel: #bb9d77;\r\n\t\t\t--noise5-secondary-note: #aa8c66;\r\n\t\t\t--noise5-primary-note: #e2d1b2;\r\n\t\t\t--mod1-secondary-channel: #4e8397;\r\n\t\t\t--mod1-primary-channel: #92e6f3;\r\n\t\t\t--mod1-secondary-note: #76b9d9;\r\n\t\t\t--mod1-primary-note: #cde3ff;\r\n\t\t\t--mod2-secondary-channel: #ad5774;\r\n\t\t\t--mod2-primary-channel: #eba4ae;\r\n\t\t\t--mod2-secondary-note: #c9719b;\r\n\t\t\t--mod2-primary-note: #fdcee7;\r\n\t\t\t--mod3-secondary-channel: #6f579f;\r\n\t\t\t--mod3-primary-channel: #b192f7;\r\n\t\t\t--mod3-secondary-note: #a778e1;\r\n\t\t\t--mod3-primary-note: #f8ddff;\r\n\t\t\t--mod4-secondary-channel: #a88a36;\r\n\t\t\t--mod4-primary-channel: #bec825;\r\n\t\t\t--mod4-secondary-note: #aecb57;\r\n\t\t\t--mod4-primary-note: #dee9bd;\r\n\t\t\t--mod-label-primary: #2c2c56;\r\n\t\t\t--mod-label-secondary-text: rgb(71,69,147);\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t--disabled-note-secondary: #6a677a;\r\n\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\t\"roe\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #050000;\r\n\t\t\t--editor-background: #050000;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #b8cee0;\r\n\t\t\t--secondary-text: #cb3434;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\r\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\r\n\t\t\t--loop-accent: #7744FF;\r\n\t\t\t--link-accent: #FF2A2A;\r\n\t\t\t--ui-widget-background: #1a2642;\r\n\t\t\t--ui-widget-focus: #2c3f6d;\r\n\t\t\t--pitch-background: #15111a;\r\n\t\t\t--tonic: #1b3041;\r\n\t\t\t--fifth-note: #381818;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #302938;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #800000;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #299eff;\r\n\t\t\t--mute-button-mod: #165a93;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #4281FF;\r\n\t\t\t--noise1-primary-channel: #96b9ff;\r\n\t\t\t--noise1-secondary-note: #4281FF;\r\n\t\t\t--noise1-primary-note: #96b9ff;\r\n\t\t\t--noise2-secondary-channel: #7347FF;\r\n\t\t\t--noise2-primary-channel: #c3b0ff;\r\n\t\t\t--noise2-secondary-note: #7347FF;\r\n\t\t\t--noise2-primary-note: #c3b0ff;\r\n\t\t\t--noise3-secondary-channel: #9F3CBF;\r\n\t\t\t--noise3-primary-channel: #e29cf9;\r\n\t\t\t--noise3-secondary-note: #9F3CBF;\r\n\t\t\t--noise3-primary-note: #e29cf9;\r\n\t\t\t--noise4-secondary-channel: #D3326F;\r\n\t\t\t--noise4-primary-channel: #fb9bbf;\r\n\t\t\t--noise4-secondary-note: #D3326F;\r\n\t\t\t--noise4-primary-note: #fb9bbf;\r\n\t\t\t--noise5-secondary-channel: #FF2A2A;\r\n\t\t\t--noise5-primary-channel: #ffa2a2;\r\n\t\t\t--noise5-secondary-note: #FF2A2A;\r\n\t\t\t--noise5-primary-note: #ffa2a2;\r\n\t\t\t--mod1-secondary-channel: #47587a;\r\n\t\t\t--mod1-primary-channel: #96b9ff;\r\n\t\t\t--mod1-secondary-note: #47587a;\r\n\t\t\t--mod1-primary-note: #96b9ff;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #c3b0ff;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #c3b0ff;\r\n\t\t\t--mod3-secondary-channel: #6f4c7b;\r\n\t\t\t--mod3-primary-channel: #e29cf9;\r\n\t\t\t--mod3-secondary-note: #6f4c7b;\r\n\t\t\t--mod3-primary-note: #e29cf9;\r\n\t\t\t--mod4-secondary-channel: #9e6279;\r\n\t\t\t--mod4-primary-channel: #fb9bbf;\r\n\t\t\t--mod4-secondary-note: #9e6279;\r\n\t\t\t--mod4-primary-note: #fb9bbf;\r\n\t\t\t--mod-label-primary: #15111a;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\t\t}`,\r\n\r\n\t\t\"moonlight\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #020514;\r\n\t\t\t--editor-background: #020514;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #D4DCE9;\r\n\t\t\t--secondary-text: #3E87DA;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #03599bd9;\r\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\r\n\t\t\t--loop-accent: #639BD6;\r\n\t\t\t--link-accent: #A8C6E8;\r\n\t\t\t--ui-widget-background: #1e2940;\r\n\t\t\t--ui-widget-focus: #324b81;\r\n\t\t\t--pitch-background: #223849;\r\n\t\t\t--tonic: #33536c;\r\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\r\n\t\t\t--white-piano-key: #c1bfe9;\r\n\t\t\t--black-piano-key: #454354;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #25568d80;\r\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\r\n\t\t\t--track-editor-bg-noise: #25568d80;\r\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\r\n\t\t\t--track-editor-bg-mod: #25568d80;\r\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\r\n\t\t\t--multiplicative-mod-slider: #0476cd;\r\n\t\t\t--overwriting-mod-slider: #035899;\r\n\t\t\t--indicator-primary: #57a1f4;\r\n\t\t\t--indicator-secondary: #2e5684;\r\n\t\t\t--select2-opt-group: #24355c;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #6ebffc;\r\n\t\t\t--mute-button-mod: #0a92fa;\r\n\t\t\t--pitch1-secondary-channel: #47425c;\r\n\t\t\t--pitch1-primary-channel: #918bac;\r\n\t\t\t--pitch1-secondary-note: #6b6489;\r\n\t\t\t--pitch1-primary-note: #a8a3bf;\r\n\t\t\t--pitch2-secondary-channel: #626493;\r\n\t\t\t--pitch2-primary-channel: #bdbed3;\r\n\t\t\t--pitch2-secondary-note: #626493;\r\n\t\t\t--pitch2-primary-note: #bdbed3;\r\n\t\t\t--pitch3-secondary-channel: #6e89b4;\r\n\t\t\t--pitch3-primary-channel: #d4dce9;\r\n\t\t\t--pitch3-secondary-note: #6e89b4;\r\n\t\t\t--pitch3-primary-note: #d4dce9;\r\n\t\t\t--pitch4-secondary-channel: #4c77a9;\r\n\t\t\t--pitch4-primary-channel: #a8c6e8;\r\n\t\t\t--pitch4-secondary-note: #4c77a9;\r\n\t\t\t--pitch4-primary-note: #a8c6e8;\r\n\t\t\t--pitch5-secondary-channel: #314e6d;\r\n\t\t\t--pitch5-primary-channel: #639bd6;\r\n\t\t\t--pitch5-secondary-note: #46698f;\r\n\t\t\t--pitch5-primary-note: #639bd6;\r\n\t\t\t--pitch6-secondary-channel: #143d6b;\r\n\t\t\t--pitch6-primary-channel: #3e87da;\r\n\t\t\t--pitch6-secondary-note: #143d6b;\r\n\t\t\t--pitch6-primary-note: #3e87da;\r\n\t\t\t--pitch7-secondary-channel: #314e6d;\r\n\t\t\t--pitch7-primary-channel: #639bd6;\r\n\t\t\t--pitch7-secondary-note: #314e6d;\r\n\t\t\t--pitch7-primary-note: #639bd6;\r\n\t\t\t--pitch8-secondary-channel: #4c77a9;\r\n\t\t\t--pitch8-primary-channel: #a8c6e8;\r\n\t\t\t--pitch8-secondary-note: #4c77a9;\r\n\t\t\t--pitch8-primary-note: #a8c6e8;\r\n\t\t\t--pitch9-secondary-channel: #6e89b4;\r\n\t\t\t--pitch9-primary-channel: #d4dce9;\r\n\t\t\t--pitch9-secondary-note: #6e89b4;\r\n\t\t\t--pitch9-primary-note: #d4dce9;\r\n\t\t\t--pitch10-secondary-channel: #626493;\r\n\t\t\t--pitch10-primary-channel: #bdbed3;\r\n\t\t\t--pitch10-secondary-note: #626493;\r\n\t\t\t--pitch10-primary-note: #bdbed3;\r\n\t\t\t--noise1-secondary-channel: #4b4a55;\r\n\t\t\t--noise1-primary-channel: #9795a3;\r\n\t\t\t--noise1-secondary-note: #4b4a55;\r\n\t\t\t--noise1-primary-note: #9795a3;\r\n\t\t\t--noise2-secondary-channel: #858e9d;\r\n\t\t\t--noise2-primary-channel: #d7dce5;\r\n\t\t\t--noise2-secondary-note: #858e9d;\r\n\t\t\t--noise2-primary-note: #d7dce5;\r\n\t\t\t--noise3-secondary-channel: #394e65;\r\n\t\t\t--noise3-primary-channel: #809bb7;\r\n\t\t\t--noise3-secondary-note: #394e65;\r\n\t\t\t--noise3-primary-note: #809bb7;\r\n\t\t\t--noise4-secondary-channel: #37577b;\r\n\t\t\t--noise4-primary-channel: #6189b8;\r\n\t\t\t--noise4-secondary-note: #37577b;\r\n\t\t\t--noise4-primary-note: #6189b8;\r\n\t\t\t--noise5-secondary-channel: #223849;\r\n\t\t\t--noise5-primary-channel: #5588af;\r\n\t\t\t--noise5-secondary-note: #223849;\r\n\t\t\t--noise5-primary-note: #5588af;\r\n\t\t\t--mod1-secondary-channel: #3e336c;\r\n\t\t\t--mod1-primary-channel: #6d60a4;\r\n\t\t\t--mod1-secondary-note: #3e336c;\r\n\t\t\t--mod1-primary-note: #6d60a4;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #bdbed3;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #bdbed3;\r\n\t\t\t--mod3-secondary-channel: #6b91bd;\r\n\t\t\t--mod3-primary-channel: #4b8fdd;\r\n\t\t\t--mod3-secondary-note: #597ca7;\r\n\t\t\t--mod3-primary-note: #7eade3;\r\n\t\t\t--mod4-secondary-channel: #14559f;\r\n\t\t\t--mod4-primary-channel: #3386e6;\r\n\t\t\t--mod4-secondary-note: #14559f;\r\n\t\t\t--mod4-primary-note: #3386e6;\r\n\t\t\t--mod-label-primary: #1e2940;\r\n\t\t\t--mod-label-secondary-text: #748ebe;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #828282;\r\n\t\t\t--disabled-note-secondary: #4f4f4f;\r\n\t\t\t}`,\r\n\r\n\t\t\"autumn\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #060304;\r\n\t\t\t--editor-background: #060304;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 80 76);\r\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\r\n\t\t\t--loop-accent: #834A69;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #2a2523;\r\n\t\t\t--ui-widget-focus: #4e4c44;\r\n\t\t\t--pitch-background: #121212;\r\n\t\t\t--tonic: #4f4f4f;\r\n\t\t\t--fifth-note: #222;\r\n\t\t\t--white-piano-key: #b59b9b;\r\n\t\t\t--black-piano-key: #231e1e;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #352f38;\r\n\t\t\t--track-editor-bg-pitch-dim: #232025;\r\n\t\t\t--track-editor-bg-noise: #3c3029;\r\n\t\t\t--track-editor-bg-noise-dim: #251d19;\r\n\t\t\t--track-editor-bg-mod: #202623;\r\n\t\t\t--track-editor-bg-mod-dim: #131715;\r\n\t\t\t--multiplicative-mod-slider: #D9D16E;\r\n\t\t\t--overwriting-mod-slider: #2D826F;\r\n\t\t\t--indicator-primary: #D9D16E;\r\n\t\t\t--indicator-secondary: #444226;\r\n\t\t\t--select2-opt-group: #20191c;\r\n\t\t\t--input-box-outline: #20191c;\r\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\r\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\r\n\t\t\t--pitch1-secondary-channel: #704a34;\r\n\t\t\t--pitch1-primary-channel: #D9895A;\r\n\t\t\t--pitch1-secondary-note: #704a34;\r\n\t\t\t--pitch1-primary-note: #D9895A;\r\n\t\t\t--pitch2-secondary-channel: #5f3538;\r\n\t\t\t--pitch2-primary-channel: #AE4951;\r\n\t\t\t--pitch2-secondary-note: #5f3538;\r\n\t\t\t--pitch2-primary-note: #AE4951;\r\n\t\t\t--pitch3-secondary-channel: #5c4336;\r\n\t\t\t--pitch3-primary-channel: #CA9A81;\r\n\t\t\t--pitch3-secondary-note: #5c4336;\r\n\t\t\t--pitch3-primary-note: #CA9A81;\r\n\t\t\t--pitch4-secondary-channel: #1d3143;\r\n\t\t\t--pitch4-primary-channel: #386995;\r\n\t\t\t--pitch4-secondary-note: #1d3143;\r\n\t\t\t--pitch4-primary-note: #386995;\r\n\t\t\t--pitch5-secondary-channel: #9c8a58;\r\n\t\t\t--pitch5-primary-channel: #D9D16E;\r\n\t\t\t--pitch5-secondary-note: #7c783f;\r\n\t\t\t--pitch5-primary-note: #D9D16E;\r\n\t\t\t--pitch6-secondary-channel: #886562;\r\n\t\t\t--pitch6-primary-channel: #D3A9A5;\r\n\t\t\t--pitch6-secondary-note: #886562;\r\n\t\t\t--pitch6-primary-note: #D3A9A5;\r\n\t\t\t--pitch7-secondary-channel: #1c3f37;\r\n\t\t\t--pitch7-primary-channel: #2D826F;\r\n\t\t\t--pitch7-secondary-note: #1c3f37;\r\n\t\t\t--pitch7-primary-note: #2D826F;\r\n\t\t\t--pitch8-secondary-channel: #442e2d;\r\n\t\t\t--pitch8-primary-channel: #815150;\r\n\t\t\t--pitch8-secondary-note: #442e2d;\r\n\t\t\t--pitch8-primary-note: #815150;\r\n\t\t\t--pitch9-secondary-channel: #8e6f60;\r\n\t\t\t--pitch9-primary-channel: #E5B8A1;\r\n\t\t\t--pitch9-secondary-note: #8e6f60;\r\n\t\t\t--pitch9-primary-note: #E5B8A1;\r\n\t\t\t--pitch10-secondary-channel: #4f3142;\r\n\t\t\t--pitch10-primary-channel: #834A69;\r\n\t\t\t--pitch10-secondary-note: #4f3142;\r\n\t\t\t--pitch10-primary-note: #834A69;\r\n\t\t\t--noise1-secondary-channel: #6b5346;\r\n\t\t\t--noise1-primary-channel: #b99c89;\r\n\t\t\t--noise1-secondary-note: #6b5346;\r\n\t\t\t--noise1-primary-note: #F0D0BB;\r\n\t\t\t--noise2-secondary-channel: #4a3839;\r\n\t\t\t--noise2-primary-channel: #9c6b6e;\r\n\t\t\t--noise2-secondary-note: #4a3839;\r\n\t\t\t--noise2-primary-note: #c18b8f;\r\n\t\t\t--noise3-secondary-channel: #2d3c4a;\r\n\t\t\t--noise3-primary-channel: #536e86;\r\n\t\t\t--noise3-secondary-note: #2d3c4a;\r\n\t\t\t--noise3-primary-note: #8fa8c0;\r\n\t\t\t--noise4-secondary-channel: #273f3a;\r\n\t\t\t--noise4-primary-channel: #4e8377;\r\n\t\t\t--noise4-secondary-note: #273f3a;\r\n\t\t\t--noise4-primary-note: #87baae;\r\n\t\t\t--noise5-secondary-channel: #372730;\r\n\t\t\t--noise5-primary-channel: #7f5e70;\r\n\t\t\t--noise5-secondary-note: #372730;\r\n\t\t\t--noise5-primary-note: #cc96b3;\r\n\t\t\t--mod1-secondary-channel: #783f1f;\r\n\t\t\t--mod1-primary-channel: #dc6d2c;\r\n\t\t\t--mod1-secondary-note: #783f1f;\r\n\t\t\t--mod1-primary-note: #dc6d2c;\r\n\t\t\t--mod2-secondary-channel: #0b3153;\r\n\t\t\t--mod2-primary-channel: #1464ac;\r\n\t\t\t--mod2-secondary-note: #0b3153;\r\n\t\t\t--mod2-primary-note: #1464ac;\r\n\t\t\t--mod3-secondary-channel: #075040;\r\n\t\t\t--mod3-primary-channel: #08a17f;\r\n\t\t\t--mod3-secondary-note: #075040;\r\n\t\t\t--mod3-primary-note: #08a17f;\r\n\t\t\t--mod4-secondary-channel: #631640;\r\n\t\t\t--mod4-primary-channel: #b4186d;\r\n\t\t\t--mod4-secondary-note: #631640;\r\n\t\t\t--mod4-primary-note: #b4186d;\r\n\t\t\t--mod-label-primary: #000;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n\r\n\t\t\"fruit\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040507;\r\n\t\t\t--editor-background: #040507;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 103 76);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #22222c;\r\n\t\t\t--ui-widget-focus: #39394c;\r\n\t\t\t--pitch-background: #101010;\r\n\t\t\t--tonic: #2c2d34;\r\n\t\t\t--fifth-note: #191a20;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #2b2d40;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #3c3644;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #322a2a;\r\n\t\t\t--track-editor-bg-mod-dim: #191515;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #EAAC9D;\r\n\t\t\t--indicator-secondary: #5e413a;\r\n\t\t\t--select2-opt-group: #191920;\r\n\t\t\t--input-box-outline: #191920;\r\n\t\t\t--mute-button-normal: #798FA7;\r\n\t\t\t--mute-button-mod: #354457;\r\n\t\t\t--pitch1-secondary-channel: #91655a;\r\n\t\t\t--pitch1-primary-channel: #EAAC9D;\r\n\t\t\t--pitch1-secondary-note: #91655a;\r\n\t\t\t--pitch1-primary-note: #EAAC9D;\r\n\t\t\t--pitch2-secondary-channel: #8f6513;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #8f6513;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #212f46;\r\n\t\t\t--pitch3-primary-channel: #34558B;\r\n\t\t\t--pitch3-secondary-note: #212f46;\r\n\t\t\t--pitch3-primary-note: #34558B;\r\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #2e6b5b;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #555D46;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #555D46;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #A2553B;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #A2553B;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #7b4021;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #7b4021;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #847753;\r\n\t\t\t--pitch8-primary-channel: #EFDAA3;\r\n\t\t\t--pitch8-secondary-note: #847753;\r\n\t\t\t--pitch8-primary-note: #EFDAA3;\r\n\t\t\t--pitch9-secondary-channel: #2c3642;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #2c3642;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #0d4453;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #0d4453;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #3B3D4A;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #3B3D4A;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #625f5e;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #625f5e;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n\r\n\t\t\"sunset\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040300;\r\n\t\t\t--editor-background: #040300;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(94 0 157);\r\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #241b24;\r\n\t\t\t--ui-widget-focus: #3a2e39;\r\n\t\t\t--pitch-background: #141414;\r\n\t\t\t--tonic: #2C212B;\r\n\t\t\t--fifth-note: #2E2A15;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #2d2e42;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #393340;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #232a2c;\r\n\t\t\t--track-editor-bg-mod-dim: #151819;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #F28891;\r\n\t\t\t--indicator-secondary: #601d23;\r\n\t\t\t--select2-opt-group: #151015;\r\n\t\t\t--input-box-outline: #151015;\r\n\t\t\t--mute-button-normal: #E4739D;\r\n\t\t\t--mute-button-mod: #9650A6;\r\n\t\t\t--pitch1-secondary-channel: #7F7721;\r\n\t\t\t--pitch1-primary-channel: #F3E79A;\r\n\t\t\t--pitch1-secondary-note: #7F7721;\r\n\t\t\t--pitch1-primary-note: #F3E79A;\r\n\t\t\t--pitch2-secondary-channel: #785E20;\r\n\t\t\t--pitch2-primary-channel: #F7D086;\r\n\t\t\t--pitch2-secondary-note: #785E20;\r\n\t\t\t--pitch2-primary-note: #F7D086;\r\n\t\t\t--pitch3-secondary-channel: #6E4219;\r\n\t\t\t--pitch3-primary-channel: #F9B881;\r\n\t\t\t--pitch3-secondary-note: #6E4219;\r\n\t\t\t--pitch3-primary-note: #F9B881;\r\n\t\t\t--pitch4-secondary-channel: #79351F;\r\n\t\t\t--pitch4-primary-channel: #F7A086;\r\n\t\t\t--pitch4-secondary-note: #79351F;\r\n\t\t\t--pitch4-primary-note: #F7A086;\r\n\t\t\t--pitch5-secondary-channel: #81272F;\r\n\t\t\t--pitch5-primary-channel: #F28891;\r\n\t\t\t--pitch5-secondary-note: #81272F;\r\n\t\t\t--pitch5-primary-note: #F28891;\r\n\t\t\t--pitch6-secondary-channel: #8F224D;\r\n\t\t\t--pitch6-primary-channel: #E4739D;\r\n\t\t\t--pitch6-secondary-note: #8F224D;\r\n\t\t\t--pitch6-primary-note: #E4739D;\r\n\t\t\t--pitch7-secondary-channel: #611548;\r\n\t\t\t--pitch7-primary-channel: #CF63A6;\r\n\t\t\t--pitch7-secondary-note: #611548;\r\n\t\t\t--pitch7-primary-note: #CF63A6;\r\n\t\t\t--pitch8-secondary-channel: #561253;\r\n\t\t\t--pitch8-primary-channel: #B557A9;\r\n\t\t\t--pitch8-secondary-note: #4D104A;\r\n\t\t\t--pitch8-primary-note: #B557A9;\r\n\t\t\t--pitch9-secondary-channel: #4c1260;\r\n\t\t\t--pitch9-primary-channel: #9650A6;\r\n\t\t\t--pitch9-secondary-note: #3C0F4C;\r\n\t\t\t--pitch9-primary-note: #9650A6;\r\n\t\t\t--pitch10-secondary-channel: #3e1d78;\r\n\t\t\t--pitch10-primary-channel: #704D9E;\r\n\t\t\t--pitch10-secondary-note: #27124C;\r\n\t\t\t--pitch10-primary-note: #704D9E;\r\n\t\t\t--noise1-secondary-channel: #A7A578;\r\n\t\t\t--noise1-primary-channel: #EFE9AC;\r\n\t\t\t--noise1-secondary-note: #A7A578;\r\n\t\t\t--noise1-primary-note: #EFE9AC;\r\n\t\t\t--noise2-secondary-channel: #947A5F;\r\n\t\t\t--noise2-primary-channel: #FBCEA8;\r\n\t\t\t--noise2-secondary-note: #947A5F;\r\n\t\t\t--noise2-primary-note: #FBCEA8;\r\n\t\t\t--noise3-secondary-channel: #A3635D;\r\n\t\t\t--noise3-primary-channel: #F4A5AB;\r\n\t\t\t--noise3-secondary-note: #A3635D;\r\n\t\t\t--noise3-primary-note: #F4A5AB;\r\n\t\t\t--noise4-secondary-channel: #724D60;\r\n\t\t\t--noise4-primary-channel: #CD90B6;\r\n\t\t\t--noise4-secondary-note: #724D60;\r\n\t\t\t--noise4-primary-note: #CD90B6;\r\n\t\t\t--noise5-secondary-channel: #503F5C;\r\n\t\t\t--noise5-primary-channel: #7C6A9E;\r\n\t\t\t--noise5-secondary-note: #503F5C;\r\n\t\t\t--noise5-primary-note: #7C6A9E;\r\n\t\t\t--mod1-secondary-channel: #371883;\r\n\t\t\t--mod1-primary-channel: #6416C6;\r\n\t\t\t--mod1-secondary-note: #1F0A52;\r\n\t\t\t--mod1-primary-note: #6416C6;\r\n\t\t\t--mod2-secondary-channel: #690645;\r\n\t\t\t--mod2-primary-channel: #E52FA2;\r\n\t\t\t--mod2-secondary-note: #690645;\r\n\t\t\t--mod2-primary-note: #E52FA2;\r\n\t\t\t--mod3-secondary-channel: #943618;\r\n\t\t\t--mod3-primary-channel: #eb5b2c;\r\n\t\t\t--mod3-secondary-note: #943618;\r\n\t\t\t--mod3-primary-note: #eb5b2c;\r\n\t\t\t--mod4-secondary-channel: #928409;\r\n\t\t\t--mod4-primary-channel: #ecd50e;\r\n\t\t\t--mod4-secondary-note: #928409;\r\n\t\t\t--mod4-primary-note: #ecd50e;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n\r\n\t\t\"toxic\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #010003;\r\n\t\t\t--editor-background: #010003;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(147 195 0);\r\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\r\n\t\t\t--loop-accent: #BCDE2C;\r\n\t\t\t--link-accent: #edff9f;\r\n\t\t\t--ui-widget-background: #261e2e;\r\n\t\t\t--ui-widget-focus: #322042;\r\n\t\t\t--pitch-background: #141c15;\r\n\t\t\t--tonic: #282c21;\r\n\t\t\t--fifth-note: #18221a;\r\n\t\t\t--white-piano-key: #e3e3e3;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #38293e;\r\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\r\n\t\t\t--track-editor-bg-noise: #2c304c;\r\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\r\n\t\t\t--track-editor-bg-mod: #311b32;\r\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #aae9ff;\r\n\t\t\t--indicator-secondary: #253e46;\r\n\t\t\t--select2-opt-group: #110d15;\r\n\t\t\t--input-box-outline: #110d15;\r\n\t\t\t--mute-button-normal: #8f5ad1;\r\n\t\t\t--mute-button-mod: #482574;\r\n\t\t\t--pitch1-secondary-channel: #6b7f19;\r\n\t\t\t--pitch1-primary-channel: #BCDE2C;\r\n\t\t\t--pitch1-secondary-note: #6b7f19;\r\n\t\t\t--pitch1-primary-note: #BCDE2C;\r\n\t\t\t--pitch2-secondary-channel: #497a31;\r\n\t\t\t--pitch2-primary-channel: #7BD152;\r\n\t\t\t--pitch2-secondary-note: #497a31;\r\n\t\t\t--pitch2-primary-note: #7BD152;\r\n\t\t\t--pitch3-secondary-channel: #286b40;\r\n\t\t\t--pitch3-primary-channel: #45BE71;\r\n\t\t\t--pitch3-secondary-note: #286b40;\r\n\t\t\t--pitch3-primary-note: #45BE71;\r\n\t\t\t--pitch4-secondary-channel: #125140;\r\n\t\t\t--pitch4-primary-channel: #25A884;\r\n\t\t\t--pitch4-secondary-note: #125140;\r\n\t\t\t--pitch4-primary-note: #25A884;\r\n\t\t\t--pitch5-secondary-channel: #114c49;\r\n\t\t\t--pitch5-primary-channel: #21908C;\r\n\t\t\t--pitch5-secondary-note: #114c49;\r\n\t\t\t--pitch5-primary-note: #21908C;\r\n\t\t\t--pitch6-secondary-channel: #143843;\r\n\t\t\t--pitch6-primary-channel: #2B788E;\r\n\t\t\t--pitch6-secondary-note: #143843;\r\n\t\t\t--pitch6-primary-note: #2B788E;\r\n\t\t\t--pitch7-secondary-channel: #1d354e;\r\n\t\t\t--pitch7-primary-channel: #355F8D;\r\n\t\t\t--pitch7-secondary-note: #1a2f46;\r\n\t\t\t--pitch7-primary-note: #355F8D;\r\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\r\n\t\t\t--pitch8-primary-channel: #414486;\r\n\t\t\t--pitch8-secondary-note: #1e1f3d;\r\n\t\t\t--pitch8-primary-note: #414486;\r\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\r\n\t\t\t--pitch9-primary-channel: #5e3b89;\r\n\t\t\t--pitch9-secondary-note: #25133b;\r\n\t\t\t--pitch9-primary-note: #5e3b89;\r\n\t\t\t--pitch10-secondary-channel: #510264;\r\n\t\t\t--pitch10-primary-channel: #720d8a;\r\n\t\t\t--pitch10-secondary-note: #440154;\r\n\t\t\t--pitch10-primary-note: #720d8a;\r\n\t\t\t--noise1-secondary-channel: #BCDE2C;\r\n\t\t\t--noise1-primary-channel: #edff9f;\r\n\t\t\t--noise1-secondary-note: #BCDE2C;\r\n\t\t\t--noise1-primary-note: #edff9f;\r\n\t\t\t--noise2-secondary-channel: #45BE71;\r\n\t\t\t--noise2-primary-channel: #89ffb4;\r\n\t\t\t--noise2-secondary-note: #45BE71;\r\n\t\t\t--noise2-primary-note: #89ffb4;\r\n\t\t\t--noise3-secondary-channel: #21908C;\r\n\t\t\t--noise3-primary-channel: #72fffa;\r\n\t\t\t--noise3-secondary-note: #21908C;\r\n\t\t\t--noise3-primary-note: #72fffa;\r\n\t\t\t--noise4-secondary-channel: #355F8D;\r\n\t\t\t--noise4-primary-channel: #7cb6f5;\r\n\t\t\t--noise4-secondary-note: #355F8D;\r\n\t\t\t--noise4-primary-note: #7cb6f5;\r\n\t\t\t--noise5-secondary-channel: #482574;\r\n\t\t\t--noise5-primary-channel: #8f5ad1;\r\n\t\t\t--noise5-secondary-note: #48257A;\r\n\t\t\t--noise5-primary-note: #8f5ad1;\r\n\t\t\t--mod1-secondary-channel: #815a16;\r\n\t\t\t--mod1-primary-channel: #F5AB29;\r\n\t\t\t--mod1-secondary-note: #815a16;\r\n\t\t\t--mod1-primary-note: #F5AB29;\r\n\t\t\t--mod2-secondary-channel: #4d341a;\r\n\t\t\t--mod2-primary-channel: #C98540;\r\n\t\t\t--mod2-secondary-note: #4d341a;\r\n\t\t\t--mod2-primary-note: #C98540;\r\n\t\t\t--mod3-secondary-channel: #643734;\r\n\t\t\t--mod3-primary-channel: #A75D58;\r\n\t\t\t--mod3-secondary-note: #643734;\r\n\t\t\t--mod3-primary-note: #A75D58;\r\n\t\t\t--mod4-secondary-channel: #461430;\r\n\t\t\t--mod4-primary-channel: #812359;\r\n\t\t\t--mod4-secondary-note: #3f112b;\r\n\t\t\t--mod4-primary-note: #812359;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\t\t}`,\r\n\r\n\t\t\"violet verdant\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #0e031a;\r\n\t\t\t--editor-background: #0e031a;\r\n\t\t\t--hover-preview: #e5ffea;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #f0e0ff;\r\n\t\t\t--secondary-text: #706087;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #225835;\r\n\t\t\t--loop-accent: #8f00fb;\r\n\t\t\t--link-accent: #82dd5d;\r\n\t\t\t--ui-widget-background: #303c66;\r\n\t\t\t--ui-widget-focus: #62559b;\r\n\t\t\t--pitch-background: #293b52;\r\n\t\t\t--tonic: #5b46ad;\r\n\t\t\t--fifth-note: #42604d;\r\n\t\t\t--white-piano-key: #f6e8ff;\r\n\t\t\t--black-piano-key: #5a4972;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #392a46;\r\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t--track-editor-bg-noise: #403150;\r\n\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t--track-editor-bg-mod: #253c25;\r\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #403150;\r\n\t\t\t--mute-button-normal: #82dd5d;\r\n\t\t\t--mute-button-mod: #945de5;\r\n\t\t\t--mod-label-primary: #312840;\r\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\r\n\t\t\t--mod-label-primary-text: #82dd5d;\r\n\t\t\t--pitch-secondary-channel-hue: 64;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-channel-sat: 63.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 64;\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 32;\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-note-sat: 87.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 64;\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 192;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 45;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 32;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 192;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 43.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 45;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 192;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 132;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 132;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 100;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 132;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t--disabled-note-secondary: #6a677a;\r\n\t\t}`,\r\n\r\n\t\t\"portal\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #04081a;\r\n\t\t\t--editor-background: #04081a;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: rgb(0 72 181);\r\n\t\t\t--loop-accent: #44d4ff;\r\n\t\t\t--link-accent: #ffa500;\r\n\t\t\t--ui-widget-background: #212c4a;\r\n\t\t\t--ui-widget-focus: #121f42;\r\n\t\t\t--pitch-background: #1b263e;\r\n\t\t\t--tonic: #995d00;\r\n\t\t\t--fifth-note: #0898a1;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #516d7a;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #213352;\r\n\t\t\t--track-editor-bg-pitch-dim: #152032;\r\n\t\t\t--track-editor-bg-noise: #403524;\r\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\r\n\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #5490ff;\r\n\t\t\t--indicator-secondary: #444;\r\n\t\t\t--select2-opt-group: #585858;\r\n\t\t\t--input-box-outline: #333;\r\n\t\t\t--mute-button-normal: #3372ff;\r\n\t\t\t--mute-button-mod: #dd872f;\r\n\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t--pitch1-primary-channel: #77f7ff;\r\n\t\t\t--pitch1-secondary-note: #00BDC7;\r\n\t\t\t--pitch1-primary-note: #92F9FF;\r\n\t\t\t--pitch2-secondary-channel: #0083a1;\r\n\t\t\t--pitch2-primary-channel: #35d9ff;\r\n\t\t\t--pitch2-secondary-note: #0083a1;\r\n\t\t\t--pitch2-primary-note: #a4eeff;\r\n\t\t\t--pitch3-secondary-channel: #0074c7;\r\n\t\t\t--pitch3-primary-channel: #3caeff;\r\n\t\t\t--pitch3-secondary-note: #00477a;\r\n\t\t\t--pitch3-primary-note: #aadcff;\r\n\t\t\t--pitch4-secondary-channel: #0039a1;\r\n\t\t\t--pitch4-primary-channel: #2673ff;\r\n\t\t\t--pitch4-secondary-note: #001f56;\r\n\t\t\t--pitch4-primary-note: #9bbeff;\r\n\t\t\t--pitch5-secondary-channel: #31148b;\r\n\t\t\t--pitch5-primary-channel: #7042ff;\r\n\t\t\t--pitch5-secondary-note: #190656;\r\n\t\t\t--pitch5-primary-note: #b79fff;\r\n\t\t\t--pitch6-secondary-channel: #979934;\r\n\t\t\t--pitch6-primary-channel: #fbff2f;\r\n\t\t\t--pitch6-secondary-note: #5d5e0a;\r\n\t\t\t--pitch6-primary-note: #fdff9a;\r\n\t\t\t--pitch7-secondary-channel: #b78f00;\r\n\t\t\t--pitch7-primary-channel: #ffd747;\r\n\t\t\t--pitch7-secondary-note: #5e3d00;\r\n\t\t\t--pitch7-primary-note: #ffe381;\r\n\t\t\t--pitch8-secondary-channel: #9d6500;\r\n\t\t\t--pitch8-primary-channel: #ffa400;\r\n\t\t\t--pitch8-secondary-note: #583900;\r\n\t\t\t--pitch8-primary-note: #ffd07c;\r\n\t\t\t--pitch9-secondary-channel: #744203;\r\n\t\t\t--pitch9-primary-channel: #ff8e00;\r\n\t\t\t--pitch9-secondary-note: #502d00;\r\n\t\t\t--pitch9-primary-note: #ffcb89;\r\n\t\t\t--pitch10-secondary-channel: #a32d00;\r\n\t\t\t--pitch10-primary-channel: #ff885b;\r\n\t\t\t--pitch10-secondary-note: #521700;\r\n\t\t\t--pitch10-primary-note: #ffb397;\r\n\t\t\t--noise1-secondary-channel: #6e2210;\r\n\t\t\t--noise1-primary-channel: #ff4600;\r\n\t\t\t--noise1-secondary-note: #4c1a08;\r\n\t\t\t--noise1-primary-note: #ffc9b4;\r\n\t\t\t--noise2-secondary-channel: #6a3110;\r\n\t\t\t--noise2-primary-channel: #ff782a;\r\n\t\t\t--noise2-secondary-note: #4c1f05;\r\n\t\t\t--noise2-primary-note: #ffb488;\r\n\t\t\t--noise3-secondary-channel: #72460e;\r\n\t\t\t--noise3-primary-channel: #d9871f;\r\n\t\t\t--noise3-secondary-note: #442905;\r\n\t\t\t--noise3-primary-note: #ffdcae;\r\n\t\t\t--noise4-secondary-channel: #837a0f;\r\n\t\t\t--noise4-primary-channel: #f7ea55;\r\n\t\t\t--noise4-secondary-note: #605906;\r\n\t\t\t--noise4-primary-note: #fff9ab;\r\n\t\t\t--noise5-secondary-channel: #8c8f00;\r\n\t\t\t--noise5-primary-channel: #fdff90;\r\n\t\t\t--noise5-secondary-note: #606200;\r\n\t\t\t--noise5-primary-note: #feffbc;\r\n\t\t\t--mod1-secondary-channel: #561b97;\r\n\t\t\t--mod1-primary-channel: #aa66f5;\r\n\t\t\t--mod1-secondary-note: #30075c;\r\n\t\t\t--mod1-primary-note: #cd9fff;\r\n\t\t\t--mod2-secondary-channel: #5116df;\r\n\t\t\t--mod2-primary-channel: #6b2dff;\r\n\t\t\t--mod2-secondary-note: #36138b;\r\n\t\t\t--mod2-primary-note: #bea3ff;\r\n\t\t\t--mod3-secondary-channel: #2535a1;\r\n\t\t\t--mod3-primary-channel: #3f57ff;\r\n\t\t\t--mod3-secondary-note: #0e185c;\r\n\t\t\t--mod3-primary-note: #8494ff;\r\n\t\t\t--mod4-secondary-channel: #1b5883;\r\n\t\t\t--mod4-primary-channel: #5eb7f5;\r\n\t\t\t--mod4-secondary-note: #072f4a;\r\n\t\t\t--mod4-primary-note: #63beff;\r\n\t\t\t--mod-label-primary: #24293a;\r\n\t\t\t--mod-label-secondary-text: #454d4e;\r\n\t\t\t--mod-label-primary-text: #7bd4ff;\r\n\t\t\t--disabled-note-primary: #072f4a;\r\n\t\t\t--disabled-note-secondary: #6585a7;\r\n\t\t}`,\r\n\r\n\t\t\"fusion\":\r\n\t\t`:root {\r\n\t\t\t--page-margin: #0c0306;\r\n\t\t\t--editor-background: #0c0306;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #26d9cd;\r\n\t\t\t--secondary-text: #ff6666;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ffffff;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #ff6666;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\r\n\t\t\t--tonic: #66a3ff40;\r\n\t\t\t--fifth-note: #ff666640;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #404040bf;\r\n\t\t\t--track-editor-bg-pitch-dim: #151515;\r\n\t\t\t--track-editor-bg-noise: #404040bf;\r\n\t\t\t--track-editor-bg-noise-dim: #151515;\r\n\t\t\t--track-editor-bg-mod: #404040bf;\r\n\t\t\t--track-editor-bg-mod-dim: #151515;\r\n\t\t\t--multiplicative-mod-slider: #ef7692;\r\n\t\t\t--overwriting-mod-slider: #f43e69;\r\n\t\t\t--indicator-primary: #26d9cd;\r\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #26d9cd;\r\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\r\n\t\t\t--pitch1-secondary-channel: #bf4040;\r\n\t\t\t--pitch1-primary-channel: #ff6666;\r\n\t\t\t--pitch1-secondary-note: #bf4040;\r\n\t\t\t--pitch1-primary-note: #ff6666;\r\n\t\t\t--pitch2-secondary-channel: #bf5b40;\r\n\t\t\t--pitch2-primary-channel: #ff8766;\r\n\t\t\t--pitch2-secondary-note: #bf5b40;\r\n\t\t\t--pitch2-primary-note: #ff8766;\r\n\t\t\t--pitch3-secondary-channel: #bf7940;\r\n\t\t\t--pitch3-primary-channel: #ffab66;\r\n\t\t\t--pitch3-secondary-note: #bf7940;\r\n\t\t\t--pitch3-primary-note: #ffab66;\r\n\t\t\t--pitch4-secondary-channel: #bf9b40;\r\n\t\t\t--pitch4-primary-channel: #ffd466;\r\n\t\t\t--pitch4-secondary-note: #bf9b40;\r\n\t\t\t--pitch4-primary-note: #ffd466;\r\n\t\t\t--pitch5-secondary-channel: #bdbf40;\r\n\t\t\t--pitch5-primary-channel: #fcff66;\r\n\t\t\t--pitch5-secondary-note: #bdbf40;\r\n\t\t\t--pitch5-primary-note: #fcff66;\r\n\t\t\t--pitch6-secondary-channel: #9dbf40;\r\n\t\t\t--pitch6-primary-channel: #d6ff66;\r\n\t\t\t--pitch6-secondary-note: #9dbf40;\r\n\t\t\t--pitch6-primary-note: #d6ff66;\r\n\t\t\t--pitch7-secondary-channel: #9dbf40;\r\n\t\t\t--pitch7-primary-channel: #fcff66;\r\n\t\t\t--pitch7-secondary-note: #9dbf40;\r\n\t\t\t--pitch7-primary-note: #fcff66;\r\n\t\t\t--pitch8-secondary-channel: #bf9b40;\r\n\t\t\t--pitch8-primary-channel: #ffd466;\r\n\t\t\t--pitch8-secondary-note: #bf9b40;\r\n\t\t\t--pitch8-primary-note: #ffd466;\r\n\t\t\t--pitch9-secondary-channel: #bf5b40;\r\n\t\t\t--pitch9-primary-channel: #ffab66;\r\n\t\t\t--pitch9-secondary-note: #bf5b40;\r\n\t\t\t--pitch9-primary-note: #ffab66;\r\n\t\t\t--pitch10-secondary-channel: #d15a1f;\r\n\t\t\t--pitch10-primary-channel: #ff8766;\r\n\t\t\t--pitch10-secondary-note: #d15a1f;\r\n\t\t\t--pitch10-primary-note: #ff8766;\r\n\t\t\t--noise1-secondary-channel: #4073bf;\r\n\t\t\t--noise1-primary-channel: #66a3ff;\r\n\t\t\t--noise1-secondary-note: #4073bf;\r\n\t\t\t--noise1-primary-note: #66a3ff;\r\n\t\t\t--noise2-secondary-channel: #405dbf;\r\n\t\t\t--noise2-primary-channel: #668aff;\r\n\t\t\t--noise2-secondary-note: #405dbf;\r\n\t\t\t--noise2-primary-note: #668aff;\r\n\t\t\t--noise3-secondary-channel: #4f40bf;\r\n\t\t\t--noise3-primary-channel: #7866ff;\r\n\t\t\t--noise3-secondary-note: #4f40bf;\r\n\t\t\t--noise3-primary-note: #7866ff;\r\n\t\t\t--noise4-secondary-channel: #8840bf;\r\n\t\t\t--noise4-primary-channel: #bd66ff;\r\n\t\t\t--noise4-secondary-note: #8840bf;\r\n\t\t\t--noise4-primary-note: #bd66ff;\r\n\t\t\t--noise5-secondary-channel: #bf40b5;\r\n\t\t\t--noise5-primary-channel: #ff66f2;\r\n\t\t\t--noise5-secondary-note: #bf40b5;\r\n\t\t\t--noise5-primary-note: #ff66f2;\r\n\t\t\t--mod1-secondary-channel: #cc6666;\r\n\t\t\t--mod1-primary-channel: #ff9999;\r\n\t\t\t--mod1-secondary-note: #cc6666;\r\n\t\t\t--mod1-primary-note: #ff9999;\r\n\t\t\t--mod2-secondary-channel: #cc7766;\r\n\t\t\t--mod2-primary-channel: #ffaa99;\r\n\t\t\t--mod2-secondary-note: #bf5540;\r\n\t\t\t--mod2-primary-note: #ffaa99;\r\n\t\t\t--mod3-secondary-channel: #cc8866;\r\n\t\t\t--mod3-primary-channel: #ffbb99;\r\n\t\t\t--mod3-secondary-note: #cc8866;\r\n\t\t\t--mod3-primary-note: #ffbb99;\r\n\t\t\t--mod4-secondary-channel: #cc9966;\r\n\t\t\t--mod4-primary-channel: #ffcc99;\r\n\t\t\t--mod4-secondary-note: #cc9966;\r\n\t\t\t--mod4-primary-note: #ffcc99;\r\n\t\t\t--mod-label-primary: #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #696969;\r\n\t\t\t--disabled-note-secondary: #232323;\r\n\t\t}`,\r\n\r\n\t\t\"inverse\":\r\n\t\t\t`:root {\r\n\t\t\t--page-margin: #c4c8e3;\r\n\t\t\t--editor-background: #c4c8e3;\r\n\t\t\t--hover-preview: #000000;\r\n\t\t\t--playhead: #243953;\r\n\t\t\t--primary-text: black;\r\n\t\t\t--secondary-text: #855b95;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(132 125 255);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #4e00c8;\r\n\t\t\t--ui-widget-background: #e7e7ff;\r\n\t\t\t--ui-widget-focus: #d0d3e9;\r\n\t\t\t--pitch-background: #ffffff;\r\n\t\t\t--tonic: #bbbbbb;\r\n\t\t\t--fifth-note: #dcdcdc;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #615f66;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #e9ebff;\r\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\r\n\t\t\t--track-editor-bg-noise: #fdf2fe;\r\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\r\n\t\t\t--track-editor-bg-mod: #dbdefe;\r\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\r\n\t\t\t--multiplicative-mod-slider: #6900b3;\r\n\t\t\t--overwriting-mod-slider: #004b9d;\r\n\t\t\t--indicator-primary: #ff633d;\r\n\t\t\t--indicator-secondary: #933822;\r\n\t\t\t--select2-opt-group: #e7e7ff;\r\n\t\t\t--input-box-outline: #e7e7ff;\r\n\t\t\t--mute-button-normal: #0072ef;\r\n\t\t\t--mute-button-mod: #002e67;\r\n\t\t\t--pitch1-secondary-channel: #b77d6e;\r\n\t\t\t--pitch1-primary-channel: #ff9d85;\r\n\t\t\t--pitch1-secondary-note: #b77d6e;\r\n\t\t\t--pitch1-primary-note: #ff9d85;\r\n\t\t\t--pitch2-secondary-channel: #be8821;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #be8821;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #3a62a4;\r\n\t\t\t--pitch3-primary-channel: #528ae6;\r\n\t\t\t--pitch3-secondary-note: #3a62a4;\r\n\t\t\t--pitch3-primary-note: #528ae6;\r\n\t\t\t--pitch4-secondary-channel: #3e8d78;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #3e8d78;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #84906d;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #84906d;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #bd6345;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #bd6345;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #aa592f;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #aa592f;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #b2a171;\r\n\t\t\t--pitch8-primary-channel: #ffd76d;\r\n\t\t\t--pitch8-secondary-note: #b2a171;\r\n\t\t\t--pitch8-primary-note: #ffd76d;\r\n\t\t\t--pitch9-secondary-channel: #4f6177;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #4f6177;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #165162;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #165162;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #4a4c5b;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #4a4c5b;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #817c7b;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #817c7b;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #e9e9e9;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #959595;\r\n\t\t\t--disabled-note-secondary: #6e6e6e;\r\n\t\t\t}`,\r\n\r\n\t\t\"nebula\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040410;\r\n\t\t\t--editor-background: #150e1f;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #8C849A;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(141,79,201,0.99);\r\n\t\t\t--box-selection-fill: #311E44;\r\n\t\t\t--loop-accent: #CC688C;\r\n\t\t\t--link-accent: #817DC9;\r\n\t\t\t--ui-widget-background: #44394F;\r\n\t\t\t--ui-widget-focus: #7A6386;\r\n\t\t\t--pitch-background: #393e4f40;\r\n\t\t\t--tonic: #7D5C9EC0;\r\n\t\t\t--fifth-note: #ab77bd50;\r\n\t\t\t--white-piano-key: #EEEEEE;\r\n\t\t\t--black-piano-key: #5F5566;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #46374C;\r\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\r\n\t\t\t--track-editor-bg-noise: #3D353B;\r\n\t\t\t--track-editor-bg-noise-dim: #16131550;\r\n\t\t\t--track-editor-bg-mod: #623F4C;\r\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\r\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\r\n\t\t\t--overwriting-mod-slider: #A664B5;\r\n\t\t\t--indicator-primary: #CC6B8E;\r\n\t\t\t--indicator-secondary: #44394F;\r\n\t\t\t--select2-opt-group: #6A576F;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #BF91DC;\r\n\t\t\t--mute-button-mod: #DC8C9A;\r\n\t\t\t--mod-label-primary: #3A2840;\r\n\t\t\t--mod-label-secondary-text: #62485E;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--pitch-secondary-channel-hue: -96;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-channel-sat: 50.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: -96;\r\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-channel-sat: 70;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: -96;\r\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-note-sat: 70.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: -96;\r\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 16;\r\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 16;\r\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 12;\r\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 12;\r\n\t\t\t--noise-primary-note-hue-scale: -1.33;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 12;\r\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\r\n\t\t\t--mod-secondary-channel-sat: 50;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 12;\r\n\t\t\t--mod-primary-channel-hue-scale: -.75;\r\n\t\t\t--mod-primary-channel-sat: 70;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 12;\r\n\t\t\t--mod-secondary-note-hue-scale: -.75;\r\n\t\t\t--mod-secondary-note-sat: 75;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 12;\r\n\t\t\t--mod-primary-note-hue-scale: -.75;\r\n\t\t\t--mod-primary-note-sat: 85;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #aaa;\r\n\t\t\t--disabled-note-secondary: #666;\r\n\t\t}`,\r\n\r\n\t\t\"roe light\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #fff5f5;\r\n\t\t\t--editor-background: #fff5f5;\r\n\t\t\t--hover-preview: #0e8bf1;\r\n\t\t\t--playhead: 000;\r\n\t\t\t--primary-text: #0e8bf1;\r\n\t\t\t--secondary-text: #f10e0e;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ff4444fc;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #9a75ff;\r\n\t\t\t--link-accent: #ff7070;\r\n\t\t\t--ui-widget-background: #bdc9e5;\r\n\t\t\t--ui-widget-focus: #a3b7e5;\r\n\t\t\t--pitch-background: #d0c7db;\r\n\t\t\t--tonic: #bed3e4;\r\n\t\t\t--fifth-note: #e7c6c6;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\r\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\r\n\t\t\t--track-editor-bg-noise: #e0ddee;\r\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\r\n\t\t\t--track-editor-bg-mod: #d8e6f3;\r\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\r\n\t\t\t--multiplicative-mod-slider: #8097cb;\r\n\t\t\t--overwriting-mod-slider: #8097cb;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #92a6d3;\r\n\t\t\t--select2-opt-group: #b6c4e2;\r\n\t\t\t--input-box-outline: #bdc9e5;\r\n\t\t\t--mute-button-normal: #66baff;\r\n\t\t\t--mute-button-mod: #1a98ff;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #336bdb;\r\n\t\t\t--noise1-primary-channel: #4281FF;\r\n\t\t\t--noise1-secondary-note: #336bdb;\r\n\t\t\t--noise1-primary-note: #4281FF;\r\n\t\t\t--noise2-secondary-channel: #5e38dc;\r\n\t\t\t--noise2-primary-channel: #7347FF;\r\n\t\t\t--noise2-secondary-note: #5e38dc;\r\n\t\t\t--noise2-primary-note: #7347FF;\r\n\t\t\t--noise3-secondary-channel: #7d3097;\r\n\t\t\t--noise3-primary-channel: #9F3CBF;\r\n\t\t\t--noise3-secondary-note: #7d3097;\r\n\t\t\t--noise3-primary-note: #9F3CBF;\r\n\t\t\t--noise4-secondary-channel: #ad2559;\r\n\t\t\t--noise4-primary-channel: #D3326F;\r\n\t\t\t--noise4-secondary-note: #ad2559;\r\n\t\t\t--noise4-primary-note: #D3326F;\r\n\t\t\t--noise5-secondary-channel: #d02525;\r\n\t\t\t--noise5-primary-channel: #FF2A2A;\r\n\t\t\t--noise5-secondary-note: #d02525;\r\n\t\t\t--noise5-primary-note: #FF2A2A;\r\n\t\t\t--mod1-secondary-channel: #35415a;\r\n\t\t\t--mod1-primary-channel: #47587a;\r\n\t\t\t--mod1-secondary-note: #35415a;\r\n\t\t\t--mod1-primary-note: #47587a;\r\n\t\t\t--mod2-secondary-channel: #5a5374;\r\n\t\t\t--mod2-primary-channel: #716791;\r\n\t\t\t--mod2-secondary-note: #5a5374;\r\n\t\t\t--mod2-primary-note: #716791;\r\n\t\t\t--mod3-secondary-channel: #53385c;\r\n\t\t\t--mod3-primary-channel: #6f4c7b;\r\n\t\t\t--mod3-secondary-note: #53385c;\r\n\t\t\t--mod3-primary-note: #6f4c7b;\r\n\t\t\t--mod4-secondary-channel: #7e4e60;\r\n\t\t\t--mod4-primary-channel: #9e6279;\r\n\t\t\t--mod4-secondary-note: #7e4e60;\r\n\t\t\t--mod4-primary-note: #9e6279;\r\n\t\t\t--mod-label-primary: #d0c7db;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #616161;\r\n\t\t\t--disabled-note-secondary: #474747;\r\n\t\t}`,\r\n\r\n\t\t\"energized\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000a08;\r\n\t\t\t--editor-background: #000a08;\r\n\t\t\t--hover-preview: #ffffcc;\r\n\t\t\t--playhead: #ccfff5;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #d9d98c;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #ffff6659;\r\n\t\t\t--box-selection-fill: #ffffff33;\r\n\t\t\t--loop-accent: #ffff00;\r\n\t\t\t--link-accent: #00ffcc;\r\n\t\t\t--ui-widget-background: #141f1d;\r\n\t\t\t--ui-widget-focus: #24423d;\r\n\t\t\t--pitch-background: #001410;\r\n\t\t\t--tonic: #00241d;\r\n\t\t\t--fifth-note: #ffff6633;\r\n\t\t\t--white-piano-key: #66998f;\r\n\t\t\t--black-piano-key: #141f1d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #66998f40;\r\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\r\n\t\t\t--track-editor-bg-noise: #66998f40;\r\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\r\n\t\t\t--track-editor-bg-mod: #99996640;\r\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\r\n\t\t\t--multiplicative-mod-slider: #ffff00;\r\n\t\t\t--overwriting-mod-slider: #00ffcc;\r\n\t\t\t--indicator-primary: #ffff00;\r\n\t\t\t--indicator-secondary: #141f1d;\r\n\t\t\t--select2-opt-group: #1b312e;\r\n\t\t\t--input-box-outline: #141f1d;\r\n\t\t\t--mute-button-normal: #00ffcc;\r\n\t\t\t--mute-button-mod: #00997a;\r\n\t\t\t--pitch1-secondary-channel: #bfbf40;\r\n\t\t\t--pitch1-primary-channel: #ffff64;\r\n\t\t\t--pitch1-secondary-note: #bfbf40;\r\n\t\t\t--pitch1-primary-note: #ffff64;\r\n\t\t\t--pitch2-secondary-channel: #a2bf40;\r\n\t\t\t--pitch2-primary-channel: #e0ff7d;\r\n\t\t\t--pitch2-secondary-note: #a2bf40;\r\n\t\t\t--pitch2-primary-note: #e0ff7d;\r\n\t\t\t--pitch3-secondary-channel: #75bf40;\r\n\t\t\t--pitch3-primary-channel: #c1ff96;\r\n\t\t\t--pitch3-secondary-note: #75bf40;\r\n\t\t\t--pitch3-primary-note: #c1ff96;\r\n\t\t\t--pitch4-secondary-channel: #40bf51;\r\n\t\t\t--pitch4-primary-channel: #a2ffaf;\r\n\t\t\t--pitch4-secondary-note: #40bf51;\r\n\t\t\t--pitch4-primary-note: #a2ffaf;\r\n\t\t\t--pitch5-secondary-channel: #40bf86;\r\n\t\t\t--pitch5-primary-channel: #83ffc8;\r\n\t\t\t--pitch5-secondary-note: #40bf86;\r\n\t\t\t--pitch5-primary-note: #83ffc8;\r\n\t\t\t--pitch6-secondary-channel: #40bfa6;\r\n\t\t\t--pitch6-primary-channel: #64ffe1;\r\n\t\t\t--pitch6-secondary-note: #40bfa6;\r\n\t\t\t--pitch6-primary-note: #64ffe1;\r\n\t\t\t--pitch7-secondary-channel: #40bf86;\r\n\t\t\t--pitch7-primary-channel: #83ffc8;\r\n\t\t\t--pitch7-secondary-note: #40bf86;\r\n\t\t\t--pitch7-primary-note: #83ffc8;\r\n\t\t\t--pitch8-secondary-channel: #40bf51;\r\n\t\t\t--pitch8-primary-channel: #a2ffaf;\r\n\t\t\t--pitch8-secondary-note: #40bf51;\r\n\t\t\t--pitch8-primary-note: #a2ffaf;\r\n\t\t\t--pitch9-secondary-channel: #75bf40;\r\n\t\t\t--pitch9-primary-channel: #c1ff96;\r\n\t\t\t--pitch9-secondary-note: #75bf40;\r\n\t\t\t--pitch9-primary-note: #c1ff96;\r\n\t\t\t--pitch10-secondary-channel: #a2bf40;\r\n\t\t\t--pitch10-primary-channel: #e0ff7d;\r\n\t\t\t--pitch10-secondary-note: #a2bf40;\r\n\t\t\t--pitch10-primary-note: #e0ff7d;\r\n\t\t\t--noise1-secondary-channel: #a6a659;\r\n\t\t\t--noise1-primary-channel: #ffffcc;\r\n\t\t\t--noise1-secondary-note: #a6a659;\r\n\t\t\t--noise1-primary-note: #ffffcc;\r\n\t\t\t--noise2-secondary-channel: #94a659;\r\n\t\t\t--noise2-primary-channel: #f3ffcc;\r\n\t\t\t--noise2-secondary-note: #94a659;\r\n\t\t\t--noise2-primary-note: #f3ffcc;\r\n\t\t\t--noise3-secondary-channel: #79a659;\r\n\t\t\t--noise3-primary-channel: #e1ffcc;\r\n\t\t\t--noise3-secondary-note: #79a659;\r\n\t\t\t--noise3-primary-note: #e1ffcc;\r\n\t\t\t--noise4-secondary-channel: #94a659;\r\n\t\t\t--noise4-primary-channel: #f3ffcc;\r\n\t\t\t--noise4-secondary-note: #94a659;\r\n\t\t\t--noise4-primary-note: #f3ffcc;\r\n\t\t\t--noise5-secondary-channel: #a6a659;\r\n\t\t\t--noise5-primary-channel: #ffffcc;\r\n\t\t\t--noise5-secondary-note: #a6a659;\r\n\t\t\t--noise5-primary-note: #ffffcc;\r\n\t\t\t--mod1-secondary-channel: #a3a329;\r\n\t\t\t--mod1-primary-channel: #ffff00;\r\n\t\t\t--mod1-secondary-note: #a3a329;\r\n\t\t\t--mod1-primary-note: #ffff00;\r\n\t\t\t--mod2-secondary-channel: #a38529;\r\n\t\t\t--mod2-primary-channel: #ffbf00;\r\n\t\t\t--mod2-secondary-note: #a38529;\r\n\t\t\t--mod2-primary-note: #ffbf00;\r\n\t\t\t--mod3-secondary-channel: #a36629;\r\n\t\t\t--mod3-primary-channel: #ff7f00;\r\n\t\t\t--mod3-secondary-note: #a36629;\r\n\t\t\t--mod3-primary-note: #ff7f00;\r\n\t\t\t--mod4-secondary-channel: #a38529;\r\n\t\t\t--mod4-primary-channel: #ffbf00;\r\n\t\t\t--mod4-secondary-note: #a38529;\r\n\t\t\t--mod4-primary-note: #ffbf00;\r\n\t\t\t--mod-label-primary: #141f1d;\r\n\t\t\t--mod-label-secondary-text: #d9d98c;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #808080;\r\n\t\t\t--disabled-note-secondary: #666666;\r\n\t\t}`,\r\n\r\n\t\t\"neapolitan\":\r\n\t\t`:root {\r\n\t\t\t--page-margin: #120807;\r\n\t\t\t--editor-background: #120807;\r\n\t\t\t--hover-preview: #e79a82;\r\n\t\t\t--playhead: #e79a82;\r\n\t\t\t--primary-text: #decdbf;\r\n\t\t\t--secondary-text: #fa99bb;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #990036;\r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t--loop-accent: #f6377a;\r\n\t\t\t--link-accent: #f6377a;\r\n\t\t\t--ui-widget-background: #24160f;\r\n\t\t\t--ui-widget-focus: #362217;\r\n\t\t\t--pitch-background: #1e1106;\r\n\t\t\t--tonic: #382414;\r\n\t\t\t--fifth-note: #41240c;\r\n\t\t\t--white-piano-key: #e1c5b7;\r\n\t\t\t--black-piano-key: #482c1e;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #4d2a19;\r\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\r\n\t\t\t--track-editor-bg-noise: #4d2a19;\r\n\t\t\t--track-editor-bg-noise-dim: #27150c;\r\n\t\t\t--track-editor-bg-mod: #4d2a19;\r\n\t\t\t--track-editor-bg-mod-dim: #27150c;\r\n\t\t\t--multiplicative-mod-slider: #decdbf;\r\n\t\t\t--overwriting-mod-slider: #decdbf;\r\n\t\t\t--indicator-primary: #decdbf;\r\n\t\t\t--indicator-secondary: #362217;\r\n\t\t\t--select2-opt-group: #24160f;\r\n\t\t\t--input-box-outline: #24160f;\r\n\t\t\t--mute-button-normal: #ff66a1;\r\n\t\t\t--mute-button-mod: #e61968;\r\n\t\t\t--pitch1-secondary-channel: #680029;\r\n\t\t\t--pitch1-primary-channel: #cc0052;\r\n\t\t\t--pitch1-secondary-note: #660029;\r\n\t\t\t--pitch1-primary-note: #cc0052;\r\n\t\t\t--pitch2-secondary-channel: #7e1b43;\r\n\t\t\t--pitch2-primary-channel: #d32e71;\r\n\t\t\t--pitch2-secondary-note: #7e1b43;\r\n\t\t\t--pitch2-primary-note: #d32e71;\r\n\t\t\t--pitch3-secondary-channel: #aa275e;\r\n\t\t\t--pitch3-primary-channel: #da5d91;\r\n\t\t\t--pitch3-secondary-note: #aa275e;\r\n\t\t\t--pitch3-primary-note: #da5d91;\r\n\t\t\t--pitch4-secondary-channel: #cc3878;\r\n\t\t\t--pitch4-primary-channel: #e18bb0;\r\n\t\t\t--pitch4-secondary-note: #cc3878;\r\n\t\t\t--pitch4-primary-note: #e18bb0;\r\n\t\t\t--pitch5-secondary-channel: #d06c9b;\r\n\t\t\t--pitch5-primary-channel: #e9bad0;\r\n\t\t\t--pitch5-secondary-note: #d06c9b;\r\n\t\t\t--pitch5-primary-note: #e9bad0;\r\n\t\t\t--pitch6-secondary-channel: #c9acc5;\r\n\t\t\t--pitch6-primary-channel: #f0e8ef;\r\n\t\t\t--pitch6-secondary-note: #c9acc5;\r\n\t\t\t--pitch6-primary-note: #f0e8ef;\r\n\t\t\t--pitch7-secondary-channel: #d06c9b;\r\n\t\t\t--pitch7-primary-channel: #e9bad0;\r\n\t\t\t--pitch7-secondary-note: #d06c9b;\r\n\t\t\t--pitch7-primary-note: #e9bad0;\r\n\t\t\t--pitch8-secondary-channel: #cc3878;\r\n\t\t\t--pitch8-primary-channel: #e18bb0;\r\n\t\t\t--pitch8-secondary-note: #cc3878;\r\n\t\t\t--pitch8-primary-note: #e18bb0;\r\n\t\t\t--pitch9-secondary-channel: #aa275e;\r\n\t\t\t--pitch9-primary-channel: #da5d91;\r\n\t\t\t--pitch9-secondary-note: #aa275e;\r\n\t\t\t--pitch9-primary-note: #da5d91;\r\n\t\t\t--pitch10-secondary-channel: #7e1b43;\r\n\t\t\t--pitch10-primary-channel: #d32e71;\r\n\t\t\t--pitch10-secondary-note: #7e1b43;\r\n\t\t\t--pitch10-primary-note: #d32e71;\r\n\t\t\t--noise1-secondary-channel: #683a37;\r\n\t\t\t--noise1-primary-channel: #A85F5A;\r\n\t\t\t--noise1-secondary-note: #683a37;\r\n\t\t\t--noise1-primary-note: #A85F5A;\r\n\t\t\t--noise2-secondary-channel: #7c4a41;\r\n\t\t\t--noise2-primary-channel: #B47A70;\r\n\t\t\t--noise2-secondary-note: #7c4a41;\r\n\t\t\t--noise2-primary-note: #B47A70;\r\n\t\t\t--noise3-secondary-channel: #935f4d;\r\n\t\t\t--noise3-primary-channel: #c09587;\r\n\t\t\t--noise3-secondary-note: #935f4d;\r\n\t\t\t--noise3-primary-note: #C09587;\r\n\t\t\t--noise4-secondary-channel: #aa795a;\r\n\t\t\t--noise4-primary-channel: #cdb09d;\r\n\t\t\t--noise4-secondary-note: #aa795a;\r\n\t\t\t--noise4-primary-note: #CDAF9D;\r\n\t\t\t--noise5-secondary-channel: #bb987c;\r\n\t\t\t--noise5-primary-channel: #decdbf;\r\n\t\t\t--noise5-secondary-note: #bb987c;\r\n\t\t\t--noise5-primary-note: #decdbf;\r\n\t\t\t--mod1-secondary-channel: #6ca784;\r\n\t\t\t--mod1-primary-channel: #accdb9;\r\n\t\t\t--mod1-secondary-note: #6ca784;\r\n\t\t\t--mod1-primary-note: #accdb9;\r\n\t\t\t--mod2-secondary-channel: #7daa9f;\r\n\t\t\t--mod2-primary-channel: #bbd3cd;\r\n\t\t\t--mod2-secondary-note: #7daa9f;\r\n\t\t\t--mod2-primary-note: #bbd3cd;\r\n\t\t\t--mod3-secondary-channel: #70a3a9;\r\n\t\t\t--mod3-primary-channel: #afcccf;\r\n\t\t\t--mod3-secondary-note: #70a3a9;\r\n\t\t\t--mod3-primary-note: #afcccf;\r\n\t\t\t--mod4-secondary-channel: #5698b8;\r\n\t\t\t--mod4-primary-channel: #9ec3d6;\r\n\t\t\t--mod4-secondary-note: #5698b8;\r\n\t\t\t--mod4-primary-note: #9ec3d6;\r\n\t\t\t--mod-label-primary: #24160f;\r\n\t\t\t--mod-label-secondary-text: #E5AFC2;\r\n\t\t\t--mod-label-primary-text: #decdbf;\r\n\t\t\t--disabled-note-primary: #bababa;\r\n\t\t\t--disabled-note-secondary: #878787;\r\n\t\t}`,\r\n\r\n\t\t\"poly\":\r\n\t\t\t`:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #808080;\r\n\t\t\t--playhead: #808080;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #cccccc;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #696969;\r\n\t\t\t--box-selection-fill: #cccccc40;\r\n\t\t\t--loop-accent: #808080;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: #1a1a1a;\r\n\t\t\t--tonic: #262626;\r\n\t\t\t--fifth-note: #0d0d0d;\r\n\t\t\t--white-piano-key: #808080;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #262626;\r\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-noise: #262626;\r\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-mod: #262626;\r\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\r\n\t\t\t--multiplicative-mod-slider: #808080;\r\n\t\t\t--overwriting-mod-slider: #808080;\r\n\t\t\t--indicator-primary: #808080;\r\n\t\t\t--indicator-secondary: #333333;\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #808080;\r\n\t\t\t--mute-button-mod: #808080;\r\n\t\t\t--mod-label-primary: #232323;\r\n\t\t\t--mod-label-secondary-text: #696969;\r\n\t\t\t--mod-label-primary-text: #cdcdcd;\r\n\t\t\t--pitch-secondary-channel-hue: 208;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 10;\r\n\t\t\t--pitch-secondary-channel-sat: 100;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0;\r\n\t\t\t--pitch-secondary-channel-lum: 88;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\r\n\t\t\t--pitch-primary-channel-hue: 207;\r\n\t\t\t--pitch-primary-channel-hue-scale: 10;\r\n\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0;\r\n\t\t\t--pitch-primary-channel-lum: 910;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0;\r\n\t\t\t--pitch-secondary-note-hue: 208;\r\n\t\t\t--pitch-secondary-note-hue-scale: 10;\r\n\t\t\t--pitch-secondary-note-sat: 100;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0;\r\n\t\t\t--pitch-secondary-note-lum: 88;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0;\r\n\t\t\t--pitch-primary-note-hue: 208;\r\n\t\t\t--pitch-primary-note-hue-scale: 10;\r\n\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t--pitch-primary-note-sat-scale: 0;\r\n\t\t\t--pitch-primary-note-lum: 910;\r\n\t\t\t--pitch-primary-note-lum-scale: 0;\r\n\t\t\t--noise-secondary-channel-hue: 328;\r\n\t\t\t--noise-secondary-channel-hue-scale: 10;\r\n\t\t\t--noise-secondary-channel-sat: 100;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 88;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 327;\r\n\t\t\t--noise-primary-channel-hue-scale: 10;\r\n\t\t\t--noise-primary-channel-sat: 100;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 910;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 328;\r\n\t\t\t--noise-secondary-note-hue-scale: 10;\r\n\t\t\t--noise-secondary-note-sat: 100;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 88;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 327;\r\n\t\t\t--noise-primary-note-hue-scale: 10;\r\n\t\t\t--noise-primary-note-sat: 100;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 910;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 87;\r\n\t\t\t--mod-secondary-channel-hue-scale: 10;\r\n\t\t\t--mod-secondary-channel-sat: 100;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 88;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 88;\r\n\t\t\t--mod-primary-channel-hue-scale: 10;\r\n\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 910;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 87;\r\n\t\t\t--mod-secondary-note-hue-scale: 10;\r\n\t\t\t--mod-secondary-note-sat: 100;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 88;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 88;\r\n\t\t\t--mod-primary-note-hue-scale: 10;\r\n\t\t\t--mod-primary-note-sat: 100;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 910;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\t\t}`,\r\n\r\n\t\t\"blutonium\":\r\n\t\t\t`:root {\r\n\t\t\t--page-margin: #02070D;\r\n\t\t\t--editor-background: #02070D;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #9bd1ee;\r\n\t\t\t--secondary-text: #5a6da8;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\r\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\r\n\t\t\t--loop-accent: #024aca;\r\n\t\t\t--link-accent: #024aca;\r\n\t\t\t--ui-widget-background: #161c2e;\r\n\t\t\t--ui-widget-focus: #262c3e;\r\n\t\t\t--pitch-background: #22272D;\r\n\t\t\t--tonic: #1b3056;\r\n\t\t\t--fifth-note: #344051;\r\n\t\t\t--white-piano-key: #a6c6ed;\r\n\t\t\t--black-piano-key: #2f4687;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #25284c;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #024aca;\r\n\t\t\t--indicator-secondary: #00177d;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #273b9d;\r\n\t\t\t--mute-button-mod: #27989d;\r\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\r\n\t\t\t--pitch1-primary-channel: #99ddff;\r\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\r\n\t\t\t--pitch1-primary-note: #99ddff;\r\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\r\n\t\t\t--pitch2-primary-channel: #5BA8FF;\r\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\r\n\t\t\t--pitch2-primary-note: #5BA8FF;\r\n\t\t\t--pitch3-secondary-channel: #024ACA;\r\n\t\t\t--pitch3-primary-channel: #0A89FF;\r\n\t\t\t--pitch3-secondary-note: #024ACA;\r\n\t\t\t--pitch3-primary-note: #0A89FF;\r\n\t\t\t--pitch4-secondary-channel: #00177D;\r\n\t\t\t--pitch4-primary-channel: #024ACA;\r\n\t\t\t--pitch4-secondary-note: #00177D;\r\n\t\t\t--pitch4-primary-note: #024ACA;\r\n\t\t\t--pitch5-secondary-channel: #000e4e;\r\n\t\t\t--pitch5-primary-channel: #0023bf;\r\n\t\t\t--pitch5-secondary-note: #000e4e;\r\n\t\t\t--pitch5-primary-note: #0023bf;\r\n\t\t\t--pitch6-secondary-channel: #8990FE;\r\n\t\t\t--pitch6-primary-channel: #C2C6FF;\r\n\t\t\t--pitch6-secondary-note: #8990FE;\r\n\t\t\t--pitch6-primary-note: #C2C6FF;\r\n\t\t\t--pitch7-secondary-channel: #5E65D3;\r\n\t\t\t--pitch7-primary-channel: #8990FE;\r\n\t\t\t--pitch7-secondary-note: #5E65D3;\r\n\t\t\t--pitch7-primary-note: #8990FE;\r\n\t\t\t--pitch8-secondary-channel: #3138A6;\r\n\t\t\t--pitch8-primary-channel: #5E65D3;\r\n\t\t\t--pitch8-secondary-note: #3138A6;\r\n\t\t\t--pitch8-primary-note: #5E65D3;\r\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\r\n\t\t\t--pitch9-primary-channel: #3138A6;\r\n\t\t\t--pitch9-secondary-note: #1B0B7F;\r\n\t\t\t--pitch9-primary-note: #3138A6;\r\n\t\t\t--pitch10-secondary-channel: #13015D;\r\n\t\t\t--pitch10-primary-channel: #1c02bd;\r\n\t\t\t--pitch10-secondary-note: #13015D;\r\n\t\t\t--pitch10-primary-note: #1c02bd;\r\n\t\t\t--noise1-secondary-channel: #A675FE;\r\n\t\t\t--noise1-primary-channel: #E2C9FF;\r\n\t\t\t--noise1-secondary-note: #A675FE;\r\n\t\t\t--noise1-primary-note: #E2C9FF;\r\n\t\t\t--noise2-secondary-channel: #6A31CA;\r\n\t\t\t--noise2-primary-channel: #A675FE;\r\n\t\t\t--noise2-secondary-note: #6A31CA;\r\n\t\t\t--noise2-primary-note: #A675FE;\r\n\t\t\t--noise3-secondary-channel: #5A1991;\r\n\t\t\t--noise3-primary-channel: #6A31CA;\r\n\t\t\t--noise3-secondary-note: #5A1991;\r\n\t\t\t--noise3-primary-note: #6A31CA;\r\n\t\t\t--noise4-secondary-channel: #2f1a68;\r\n\t\t\t--noise4-primary-channel: #5A1991;\r\n\t\t\t--noise4-secondary-note: #2f1a68;\r\n\t\t\t--noise4-primary-note: #5A1991;\r\n\t\t\t--noise5-secondary-channel: #211640;\r\n\t\t\t--noise5-primary-channel: #391b8d;\r\n\t\t\t--noise5-secondary-note: #211640;\r\n\t\t\t--noise5-primary-note: #391b8d;\r\n\t\t\t--mod1-secondary-channel: #25E2CD;\r\n\t\t\t--mod1-primary-channel: #BDFFCA;\r\n\t\t\t--mod1-secondary-note: #25E2CD;\r\n\t\t\t--mod1-primary-note: #BDFFCA;\r\n\t\t\t--mod2-secondary-channel: #0A98AC;\r\n\t\t\t--mod2-primary-channel: #25E2CD;\r\n\t\t\t--mod2-secondary-note: #0A98AC;\r\n\t\t\t--mod2-primary-note: #25E2CC;\r\n\t\t\t--mod3-secondary-channel: #005280;\r\n\t\t\t--mod3-primary-channel: #0A98AC;\r\n\t\t\t--mod3-secondary-note: #005280;\r\n\t\t\t--mod3-primary-note: #0A98AC;\r\n\t\t\t--mod4-secondary-channel: #0f3670;\r\n\t\t\t--mod4-primary-channel: #1369c1;\r\n\t\t\t--mod4-secondary-note: #0f3670;\r\n\t\t\t--mod4-primary-note: #1369c1;\r\n\t\t\t--mod-label-primary: #191d26;\r\n\t\t\t--mod-label-secondary-text: #024aca;\r\n\t\t\t--mod-label-primary-text: #ffffffa6;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\t}`, \r\n\t\t\"dogebox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0d0063;\r\n--editor-background: #0D0063;\r\n--hover-preview: white;\r\n--playhead: white;\r\n--primary-text: white;\r\n--secondary-text: #999;\r\n--inverted-text: black;\r\n--text-selection: rgba(119,68,255,0.99);\r\n--box-selection-fill: rgba(255,255,255,0.2);\r\n--loop-accent: #74f;\r\n--link-accent: #98f;\r\n--ui-widget-background: #444;\r\n--ui-widget-focus: #777;\r\n--pitch-background: #322c59;\r\n--tonic: #1c1933;\r\n--fifth-note: #7b74ad;\r\n--white-piano-key: #bbb;\r\n--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n--pitch1-secondary-channel: #c7ac00;\r\n--pitch1-primary-channel: #fcf403;\r\n--pitch1-secondary-note: #c7c700;\r\n--pitch1-primary-note: #fcf403;\r\n--pitch2-secondary-channel: #9400b5;\r\n--pitch2-primary-channel: #ff00ee;\r\n--pitch2-secondary-note: #9400b5;\r\n--pitch2-primary-note: #ff00ee;\r\n--pitch3-secondary-channel: #b37466;\r\n--pitch3-primary-channel: #ffc6a1;\r\n--pitch3-secondary-note: #b37466;\r\n--pitch3-primary-note: #ffc6a1;\r\n--pitch4-secondary-channel: #00a100;\r\n--pitch4-primary-channel: #50ff50;\r\n--pitch4-secondary-note: #00c700;\r\n--pitch4-primary-note: #a0ffa0;\r\n--pitch5-secondary-channel: #d020d0;\r\n--pitch5-primary-channel: #ff90ff;\r\n--pitch5-secondary-note: #e040e0;\r\n--pitch5-primary-note: #ffc0ff;\r\n--pitch6-secondary-channel: #7777b0;\r\n--pitch6-primary-channel: #a0a0ff;\r\n--pitch6-secondary-note: #8888d0;\r\n--pitch6-primary-note: #d0d0ff;\r\n--pitch7-secondary-channel: #c7ac00;\r\n--pitch7-primary-channel: #fcf403;\r\n--pitch7-secondary-note: #c7c700;\r\n--pitch7-primary-note: #fcf403;\r\n--pitch8-secondary-channel: #9400b5;\r\n--pitch8-primary-channel: #ff00ee;\r\n--pitch8-secondary-note: #9400b5;\r\n--pitch8-primary-note: #ff00ee;\r\n--pitch9-secondary-channel: #b37466;\r\n--pitch9-primary-channel: #ffc6a1;\r\n--pitch9-secondary-note: #b37466;\r\n--pitch9-primary-note: #ffc6a1;\r\n--pitch10-secondary-channel: #00a100;\r\n--pitch10-primary-channel: #50ff50;\r\n--pitch10-secondary-note: #00c700;\r\n--pitch10-primary-note: #a0ffa0;\r\n--noise1-secondary-channel: #95acad;\r\n--noise1-primary-channel: #cee9eb;\r\n--noise1-secondary-note: #95acad;\r\n--noise1-primary-note: #cee9eb;\r\n--noise2-secondary-channel: #996633;\r\n--noise2-primary-channel: #ddaa77;\r\n--noise2-secondary-note: #cc9966;\r\n--noise2-primary-note: #f0d0bb;\r\n--noise3-secondary-channel: #4a6d8f;\r\n--noise3-primary-channel: #77aadd;\r\n--noise3-secondary-note: #6f9fcf;\r\n--noise3-primary-note: #bbd7ff;\r\n--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n       --mod1-secondary-channel: #c7ac00;\r\n--mod1-primary-channel: #fcf403;\r\n--mod1-secondary-note: #c7c700;\r\n--mod1-primary-note: #fcf403;\r\n--mod2-secondary-channel: #9400b5;\r\n--mod2-primary-channel: #ff00ee;\r\n--mod2-secondary-note: #9400b5;\r\n--mod2-primary-note: #ff00ee;\r\n--mod3-secondary-channel: #b37466;\r\n--mod3-primary-channel: #ffc6a1;\r\n--mod3-secondary-note: #b37466;\r\n--mod3-primary-note: #ffc6a1;\r\n--mod4-secondary-channel: #00a100;\r\n--mod4-primary-channel: #50ff50;\r\n--mod4-secondary-note: #00c700;\r\n--mod4-primary-note: #a0ffa0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"dogebox2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000015;\r\n\t\t\t\t--editor-background: #000015;\r\n\t\t\t\t--hover-preview: #00ffff;\r\n\t\t\t\t--playhead: #00ffff;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\r\n\t\t\t\t--loop-accent: #ff00ff;\r\n\t\t\t\t--link-accent: #00ffff;\r\n\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t--pitch-background: #222222;\r\n\t\t\t\t--tonic: #ab382c;\r\n\t\t\t\t--fifth-note: #2a76a8;\r\n\t\t\t\t--third-note: #70AB2C;\r\n\t\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t\t--black-piano-key: #222222;\r\n\t\t\t\t--white-piano-key-text: #000000;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--track-editor-bg-pitch: #222222;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\r\n\t\t\t\t--track-editor-bg-noise: #222222;\r\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\r\n\t\t\t\t--track-editor-bg-mod: #333333;\r\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\r\n\t\t\t\t--multiplicative-mod-slider: #666666;\r\n\t\t\t\t--overwriting-mod-slider: #666666;\r\n\t\t\t\t--indicator-primary: #ff00ff;\r\n\t\t\t\t--indicator-secondary: #00ffff;\r\n\t\t\t\t--select2-opt-group: #333333;\r\n\t\t\t\t--input-box-outline: #444444;\r\n\t\t\t\t--mute-button-normal: #ff00ff;\r\n\t\t\t\t--mute-button-mod: #00ffff;\r\n\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\r\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\r\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\r\n\t\t\t\t--pitch1-primary-note: #fdffb2;\r\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\r\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\r\n\t\t\t\t--pitch2-secondary-note: #ba643a;\r\n\t\t\t\t--pitch2-primary-note: #fbac92;\r\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\r\n\t\t\t\t--pitch3-primary-channel: #f56c67;\r\n\t\t\t\t--pitch3-secondary-note: #94352b;\r\n\t\t\t\t--pitch3-primary-note: #f56147;\r\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\r\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\r\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\r\n\t\t\t\t--pitch4-primary-note: #88cf82;\r\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\r\n\t\t\t\t--pitch5-primary-channel: #c3c168;\r\n\t\t\t\t--pitch5-secondary-note: #747330;\r\n\t\t\t\t--pitch5-primary-note: #d4d394;\r\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\r\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\r\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\r\n\t\t\t\t--pitch6-primary-note: #8fdad0;\r\n\t\t\t\t--pitch7-secondary-channel: #204a80;\r\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\r\n\t\t\t\t--pitch7-secondary-note: #132f5a;\r\n\t\t\t\t--pitch7-primary-note: #9dbed8;\r\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\r\n\t\t\t\t--pitch8-primary-channel: #db68e3;\r\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\r\n\t\t\t\t--pitch8-primary-note: #e66cbf;\r\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\r\n\t\t\t\t--pitch9-primary-channel: #52fffb;\r\n\t\t\t\t--pitch9-secondary-note: #34baba;\r\n\t\t\t\t--pitch9-primary-note: #60fbfb;\r\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\r\n\t\t\t\t--pitch10-primary-channel: #9282ff;\r\n\t\t\t\t--pitch10-secondary-note: #5735b5;\r\n\t\t\t\t--pitch10-primary-note: #ab52fb;\r\n\t\t\t\t--noise1-secondary-channel: #2a5555;\r\n\t\t\t\t--noise1-primary-channel: #4c7878;\r\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\r\n\t\t\t\t--noise1-primary-note: #90bcbc;\r\n\t\t\t\t--noise2-secondary-channel: #553355;\r\n\t\t\t\t--noise2-primary-channel: #775577;\r\n\t\t\t\t--noise2-secondary-note: #997799;\r\n\t\t\t\t--noise2-primary-note: #bbaa99;\r\n\t\t\t\t--noise3-secondary-channel: #2a6622;\r\n\t\t\t\t--noise3-primary-channel: #4c8844;\r\n\t\t\t\t--noise3-secondary-note: #6eaa66;\r\n\t\t\t\t--noise3-primary-note: #90cc88;\r\n\t\t\t\t--noise4-secondary-channel: #664400;\r\n\t\t\t\t--noise4-primary-channel: #886600;\r\n\t\t\t\t--noise4-secondary-note: #aa8800;\r\n\t\t\t\t--noise4-primary-note: #cccc00;\r\n\t\t\t\t--noise5-secondary-channel: #006633;\r\n\t\t\t\t--noise5-primary-channel: #008855;\r\n\t\t\t\t--noise5-secondary-note: #00aa77;\r\n\t\t\t\t--noise5-primary-note: #00cc99;\r\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\r\n\t\t\t\t--mod1-primary-channel: #ff72ff;\r\n\t\t\t\t--mod1-secondary-note: #ff92ff;\r\n\t\t\t\t--mod1-primary-note: #ffb2fb;\r\n\t\t\t\t--mod2-secondary-channel: #00fe00;\r\n\t\t\t\t--mod2-primary-channel: #8eff8e;\r\n\t\t\t\t--mod2-secondary-note: #92ff92;\r\n\t\t\t\t--mod2-primary-note: #b2ffb2;\r\n\t\t\t\t--mod3-secondary-channel: #feff00;\r\n\t\t\t\t--mod3-primary-channel: #fffb8e;\r\n\t\t\t\t--mod3-secondary-note: #fffd92;\r\n\t\t\t\t--mod3-primary-note: #fffe92;\r\n\t\t\t\t--mod4-secondary-channel: #00fffe;\r\n\t\t\t\t--mod4-primary-channel: #82fffb;\r\n\t\t\t\t--mod4-secondary-note: #92ffff;\r\n\t\t\t\t--mod4-primary-note: #b2fffb;\r\n\t\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\t\t\t\t--note-flash: #ffffff;\r\n\t\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n    };\r\n\r\n    public static readonly pageMargin: string = \"var(--page-margin)\";\r\n    public static readonly editorBackground: string = \"var(--editor-background)\";\r\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n    public static readonly playhead: string = \"var(--playhead)\";\r\n    public static readonly primaryText: string = \"var(--primary-text)\";\r\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\r\n    public static readonly invertedText: string = \"var(--inverted-text)\";\r\n    public static readonly textSelection: string = \"var(--text-selection)\";\r\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\r\n    public static readonly linkAccent: string = \"var(--link-accent)\";\r\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n    public static readonly tonic: string = \"var(--tonic)\";\r\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\r\n    public static readonly thirdNote: string = \"var(--third-note, #558844)\";\r\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\r\n\tpublic static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\r\n\r\n\tpublic static c_pitchSecondaryChannelHue: number = 0;\r\n\tpublic static c_pitchSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_pitchSecondaryChannelSat: number = 0;\r\n\tpublic static c_pitchSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_pitchSecondaryChannelLum: number = 0;\r\n\tpublic static c_pitchSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelHue: number = 0;\r\n\tpublic static c_pitchPrimaryChannelHueScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelSat: number = 0;\r\n\tpublic static c_pitchPrimaryChannelSatScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelLum: number = 0;\r\n\tpublic static c_pitchPrimaryChannelLumScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteHue: number = 0;\r\n\tpublic static c_pitchSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteSat: number = 0;\r\n\tpublic static c_pitchSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteLum: number = 0;\r\n\tpublic static c_pitchSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteHue: number = 0;\r\n\tpublic static c_pitchPrimaryNoteHueScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteSat: number = 0;\r\n\tpublic static c_pitchPrimaryNoteSatScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteLum: number = 0;\r\n\tpublic static c_pitchPrimaryNoteLumScale: number = 0;\r\n\tpublic static c_modSecondaryChannelHue: number = 0;\r\n\tpublic static c_modSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_modSecondaryChannelSat: number = 0;\r\n\tpublic static c_modSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_modSecondaryChannelLum: number = 0;\r\n\tpublic static c_modSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_modPrimaryChannelHue: number = 0;\r\n\tpublic static c_modPrimaryChannelHueScale: number = 0;\r\n\tpublic static c_modPrimaryChannelSat: number = 0;\r\n\tpublic static c_modPrimaryChannelSatScale: number = 0;\r\n\tpublic static c_modPrimaryChannelLum: number = 0;\r\n\tpublic static c_modPrimaryChannelLumScale: number = 0;\r\n\tpublic static c_modSecondaryNoteHue: number = 0;\r\n\tpublic static c_modSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_modSecondaryNoteSat: number = 0;\r\n\tpublic static c_modSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_modSecondaryNoteLum: number = 0;\r\n\tpublic static c_modSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_modPrimaryNoteHue: number = 0;\r\n\tpublic static c_modPrimaryNoteHueScale: number = 0;\r\n\tpublic static c_modPrimaryNoteSat: number = 0;\r\n\tpublic static c_modPrimaryNoteSatScale: number = 0;\r\n\tpublic static c_modPrimaryNoteLum: number = 0;\r\n\tpublic static c_modPrimaryNoteLumScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelHue: number = 0;\r\n\tpublic static c_noiseSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelSat: number = 0;\r\n\tpublic static c_noiseSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelLum: number = 0;\r\n\tpublic static c_noiseSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelHue: number = 0;\r\n\tpublic static c_noisePrimaryChannelHueScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelSat: number = 0;\r\n\tpublic static c_noisePrimaryChannelSatScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelLum: number = 0;\r\n\tpublic static c_noisePrimaryChannelLumScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteHue: number = 0;\r\n\tpublic static c_noiseSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteSat: number = 0;\r\n\tpublic static c_noiseSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteLum: number = 0;\r\n\tpublic static c_noiseSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteHue: number = 0;\r\n\tpublic static c_noisePrimaryNoteHueScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteSat: number = 0;\r\n\tpublic static c_noisePrimaryNoteSatScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteLum: number = 0;\r\n\tpublic static c_noisePrimaryNoteLumScale: number = 0;\r\n\r\n\tpublic static c_invertedText: string = \"\";\r\n\tpublic static c_trackEditorBgNoiseDim: string = \"\";\r\n\tpublic static c_trackEditorBgNoise: string = \"\";\r\n\tpublic static c_trackEditorBgModDim: string = \"\";\r\n\tpublic static c_trackEditorBgMod: string = \"\";\r\n\tpublic static c_trackEditorBgPitchDim: string = \"\";\r\n\tpublic static c_trackEditorBgPitch: string = \"\";\r\n\r\n\r\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"pitch1\", // cyan\r\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch1-primary-channel)\",\r\n            secondaryNote: \"var(--pitch1-secondary-note)\",\r\n            primaryNote: \"var(--pitch1-primary-note)\",\r\n        }, {\r\n            name: \"pitch2\", // yellow\r\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch2-primary-channel)\",\r\n            secondaryNote: \"var(--pitch2-secondary-note)\",\r\n            primaryNote: \"var(--pitch2-primary-note)\",\r\n        }, {\r\n            name: \"pitch3\", // orange\r\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch3-primary-channel)\",\r\n            secondaryNote: \"var(--pitch3-secondary-note)\",\r\n            primaryNote: \"var(--pitch3-primary-note)\",\r\n        }, {\r\n            name: \"pitch4\", // green\r\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch4-primary-channel)\",\r\n            secondaryNote: \"var(--pitch4-secondary-note)\",\r\n            primaryNote: \"var(--pitch4-primary-note)\",\r\n        }, {\r\n            name: \"pitch5\", // magenta\r\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch5-primary-channel)\",\r\n            secondaryNote: \"var(--pitch5-secondary-note)\",\r\n            primaryNote: \"var(--pitch5-primary-note)\",\r\n        }, {\r\n            name: \"pitch6\", // blue\r\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch6-primary-channel)\",\r\n            secondaryNote: \"var(--pitch6-secondary-note)\",\r\n            primaryNote: \"var(--pitch6-primary-note)\",\r\n        }, {\r\n            name: \"pitch7\", // olive\r\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch7-primary-channel)\",\r\n            secondaryNote: \"var(--pitch7-secondary-note)\",\r\n            primaryNote: \"var(--pitch7-primary-note)\",\r\n        }, {\r\n            name: \"pitch8\", // red\r\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch8-primary-channel)\",\r\n            secondaryNote: \"var(--pitch8-secondary-note)\",\r\n            primaryNote: \"var(--pitch8-primary-note)\",\r\n        }, {\r\n            name: \"pitch9\", // teal\r\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch9-primary-channel)\",\r\n            secondaryNote: \"var(--pitch9-secondary-note)\",\r\n            primaryNote: \"var(--pitch9-primary-note)\",\r\n        }, {\r\n            name: \"pitch10\", // purple\r\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch10-primary-channel)\",\r\n            secondaryNote: \"var(--pitch10-secondary-note)\",\r\n            primaryNote: \"var(--pitch10-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"noise1\", // gray\r\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\r\n            primaryChannel: \"var(--noise1-primary-channel)\",\r\n            secondaryNote: \"var(--noise1-secondary-note)\",\r\n            primaryNote: \"var(--noise1-primary-note)\",\r\n        }, {\r\n            name: \"noise2\", // brown\r\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\r\n            primaryChannel: \"var(--noise2-primary-channel)\",\r\n            secondaryNote: \"var(--noise2-secondary-note)\",\r\n            primaryNote: \"var(--noise2-primary-note)\",\r\n        }, {\r\n            name: \"noise3\", // azure\r\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\r\n            primaryChannel: \"var(--noise3-primary-channel)\",\r\n            secondaryNote: \"var(--noise3-secondary-note)\",\r\n            primaryNote: \"var(--noise3-primary-note)\",\r\n        }, {\r\n            name: \"noise4\", // purple\r\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\r\n            primaryChannel: \"var(--noise4-primary-channel)\",\r\n            secondaryNote: \"var(--noise4-secondary-note)\",\r\n            primaryNote: \"var(--noise4-primary-note)\",\r\n        }, {\r\n            name: \"noise5\", // sage\r\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\r\n            primaryChannel: \"var(--noise5-primary-channel)\",\r\n            secondaryNote: \"var(--noise5-secondary-note)\",\r\n            primaryNote: \"var(--noise5-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"mod1\",\r\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\r\n            primaryChannel: \"var(--mod1-primary-channel)\",\r\n            secondaryNote: \"var(--mod1-secondary-note)\",\r\n            primaryNote: \"var(--mod1-primary-note)\",\r\n        }, {\r\n            name: \"mod2\",\r\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\r\n            primaryChannel: \"var(--mod2-primary-channel)\",\r\n            secondaryNote: \"var(--mod2-secondary-note)\",\r\n            primaryNote: \"var(--mod2-primary-note)\",\r\n        }, {\r\n            name: \"mod3\",\r\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\r\n            primaryChannel: \"var(--mod3-primary-channel)\",\r\n            secondaryNote: \"var(--mod3-secondary-note)\",\r\n            primaryNote: \"var(--mod3-primary-note)\",\r\n        }, {\r\n            name: \"mod4\",\r\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\r\n            primaryChannel: \"var(--mod4-primary-channel)\",\r\n            secondaryNote: \"var(--mod4-secondary-note)\",\r\n            primaryNote: \"var(--mod4-primary-note)\",\r\n        },\r\n    ]);\r\n\r\n    public static resetColors() {\r\n        this.colorLookup.clear();\r\n    }\r\n\r\n    // Same as below, but won't return var colors\r\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (!this.usesColorFormula) {\r\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n            // Trim away \"var(...)\"\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        else {\r\n            return ColorConfig.getChannelColor(song, channel);\r\n        }\r\n    };\r\n\r\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (!this.usesColorFormula) {\r\n            // Set colors, not defined by formula\r\n            if (channel < song.pitchChannelCount) {\r\n                return ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                return ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n            } else {\r\n                return ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n            }\r\n        }\r\n        else {\r\n            // Determine if color is cached\r\n            if (ColorConfig.colorLookup.has(channel)) {\r\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n            }\r\n            else {\r\n                // Formulaic color definition\r\n                if (channel < song.pitchChannelCount) {\r\n                    // Pitch formula\r\n\r\n                    let newChannelSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n\r\n                }\r\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                    // Noise formula\r\n                    \r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n                else {\r\n                    // Mod formula\r\n                    \r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n    public static setTheme(name: string): void {\r\n\t\tlet theme: string = this.themes[name];\r\n\t\tif (theme == undefined) theme = this.themes[\"dogebox2\"];\r\n\t\tthis._styleElement.textContent = theme;\r\n\r\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n        if (themeColor != null) {\r\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n        }\r\n\r\n\t\tthis.resetColors();\r\n\r\n\t\tthis.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\r\n\r\n\t\tthis.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\r\n\t\tthis.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\r\n\t\tthis.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\r\n\t\tthis.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\r\n\t\tthis.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\r\n\t\tthis.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\r\n\t\tthis.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\r\n\r\n\t\tif (this.usesColorFormula) {\r\n\t\t\tthis.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\tthis.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\tthis.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\tthis.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\tthis.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\tthis.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\tthis.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\tthis.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\tthis.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\tthis.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\tthis.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\tthis.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\tthis.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\tthis.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\tthis.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\tthis.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\tthis.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\tthis.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\tthis.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\tthis.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\tthis.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\tthis.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\tthis.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\tthis.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\tthis.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\tthis.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\tthis.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\tthis.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\tthis.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\tthis.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\tthis.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\tthis.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\tthis.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\tthis.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\tthis.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\tthis.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\tthis.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\tthis.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\tthis.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\tthis.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\tthis.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\tthis.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\tthis.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\tthis.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\tthis.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\tthis.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\tthis.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public static getComputed(name: string): string {\r\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--button-size: 26px;\r\n\t--settings-area-width: 192px;\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\r\n\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\r\n\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\r\n\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\r\n\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\r\n\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: 13px;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tposition: relative;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .loopEditor {\r\n\theight: 20px;\r\n\tposition: sticky;\r\n\tbottom: 0;\r\n\tpadding: 5px 0;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n\tcolor: ${ColorConfig.secondaryText};\r\n\ttext-decoration: none;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .piano-button.pressed, .beepboxEditor .drum-button.pressed {\r\n\tfilter: brightness(0.5);\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .instrumentCopyPasteRow {\r\n\tgap: 2px;\r\n}\r\n\r\n.beepboxEditor .copy-instrument {\r\n\tmargin: 2px 0;\r\n\tflex-grow: 1;\r\n}\r\n.beepboxEditor .copy-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--instrument-copy-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--instrument-copy-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .paste-instrument {\r\n\tmargin: 2px 0;\r\n\tflex-grow: 1;\r\n}\r\n.beepboxEditor .paste-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--instrument-paste-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--instrument-paste-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .envelopeEditor {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .envelope-row {\r\n\tdisplay: flex;\r\n\tmargin: 2px 0;\r\n\tgap: 2px;\r\n}\r\n\r\n.beepboxEditor .add-envelope {\r\n\twidth: var(--button-size);\r\n}\r\n.beepboxEditor .add-envelope::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--add-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--add-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n.beepboxEditor .add-envelope:disabled {\r\n\tvisibility: hidden;\r\n}\r\n\r\n.beepboxEditor .effects-menu {\r\n\twidth: var(--button-size);\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .effects-menu::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .zoomInButton, .beepboxEditor .zoomOutButton {\r\n\twidth: var(--button-size);\r\n\tposition: absolute;\r\n\tright: 10px;\r\n}\r\n.beepboxEditor .zoomInButton {\r\n\ttop: 10px;\r\n}\r\n.beepboxEditor .zoomOutButton {\r\n\ttop: 50px;\r\n}\r\n.beepboxEditor .zoomInButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--zoom-in-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--zoom-in-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n.beepboxEditor .zoomOutButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--zoom-out-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--zoom-out-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .delete-envelope {\r\n\twidth: var(--button-size);\r\n\tflex-shrink: 0;\r\n\tflex-grow: 0;\r\n}\r\n.beepboxEditor .delete-envelope::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n.beepboxEditor .delete-envelope:disabled {\r\n\tvisibility: hidden;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tz-index: 100;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .prompt label {\r\n\tcursor: pointer;\r\n}\r\n\r\n.beepboxEditor .prompt.recordingSetupPrompt p {\r\n\tmargin-top: 0.75em;\r\n\tmargin-bottom: 0;\r\n}\r\n\r\n.beepboxEditor .prompt.recordingSetupPrompt > label:not(:first-child):not(.cancelButton) {\r\n\tmargin: 2px 0;\r\n}\r\n\r\n.beepboxEditor .layout-option {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex: 1;\r\n\tcursor: pointer;\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .layout-option input {\r\n\tdisplay: none;\r\n}\r\n\r\n.beepboxEditor .layout-option input:checked ~ * {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n.beepboxEditor select.invalidSetting {\r\n\tborder: solid 1px red;\r\n}\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: 14px;\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 4px;\r\n\tdisplay: block;\r\n\theight: var(--button-size);\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.beepboxEditor select option:disabled {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\tfont-weight: bold;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.select2-results__option--highlighted[aria-selected] {\r\n\tcolor: white !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 var(--button-size);\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: var(--button-size);\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: var(--button-size);\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor .playback-bar-controls {\r\n\tdisplay: grid;\r\n\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\r\n\tgrid-template-rows: min-content;\r\n\tgrid-column-gap: 4px;\r\n}\r\n\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.recordButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--record-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--record-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.stopButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--stop-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--stop-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tpointer-events: none;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton, .beepboxEditor button.stopButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: var(--button-size);\r\n}\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton {\r\n\tgrid-column-start: 1;\r\n\tgrid-column-end: 3;\r\n}\r\n.beepboxEditor button.stopButton {\r\n\tgrid-column-start: 1;\r\n\tgrid-column-end: 5;\r\n}\r\n.beepboxEditor button.prevBarButton {\r\n\tgrid-column-start: 3;\r\n\tgrid-column-end: 4;\r\n}\r\n.beepboxEditor button.nextBarButton {\r\n\tgrid-column-start: 4;\r\n\tgrid-column-end: 5;\r\n}\r\n\r\n.beepboxEditor button.playButton.shrunk, .beepboxEditor button.recordButton.shrunk {\r\n\tpadding: 0;\r\n}\r\n.beepboxEditor button.playButton.shrunk::before, .beepboxEditor button.recordButton.shrunk::before {\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n}\r\n.beepboxEditor button.playButton.shrunk span, .beepboxEditor button.recordButton.shrunk span {\r\n\tdisplay: none;\r\n}\r\n.beepboxEditor button.playButton.shrunk {\r\n\tgrid-column-start: 1;\r\n\tgrid-column-end: 2;\r\n}\r\n.beepboxEditor button.recordButton.shrunk {\r\n\tgrid-column-start: 2;\r\n\tgrid-column-end: 3;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: var(--button-size);\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .instrument-bar {\r\n\tdisplay: flex;\r\n\tgap: 2px;\r\n}\r\n\r\n.beepboxEditor .instrument-bar button {\r\n\tflex-grow: 1;\r\n\tmin-width: 0;\r\n\tpadding: 0;\r\n\tflex-basis: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcolor: var(--text-color-lit);\r\n}\r\n\r\n.beepboxEditor .instrument-bar .remove-instrument, .beepboxEditor .instrument-bar .add-instrument {\r\n\tmax-width: var(--button-size);\r\n}\r\n\r\n.beepboxEditor .instrument-bar > :not(:first-child) {\r\n\tborder-top-left-radius: 0;\r\n\tborder-bottom-left-radius: 0;\r\n}\r\n\r\n.beepboxEditor .instrument-bar > :not(.last-button) {\r\n\tborder-top-right-radius: 0;\r\n\tborder-bottom-right-radius: 0;\r\n\tborder-bottom: inset;\r\n\tborder-color: var(--background-color-dim);\r\n}\r\n\r\n.beepboxEditor .instrument-bar .selected-instrument {\r\n\tbackground: var(--background-color-lit);\r\n\tcolor: ${ColorConfig.invertedText};\r\n}\r\n\r\n.beepboxEditor .instrument-bar .deactivated {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tcolor: var(--text-color-dim);\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .deactivated.selected-instrument {\r\n\tbackground: var(--background-color-dim);\r\n\tcolor: ${ColorConfig.invertedText};\r\n}\r\n\r\n.beepboxEditor .instrument-bar .remove-instrument {\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .remove-instrument::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .add-instrument {\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .no-underline {\r\n\tborder-bottom: unset;\r\n}\r\n\r\n.beepboxEditor .instrument-bar .add-instrument::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: var(--button-size);\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--add-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--add-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\twidth: 100%;\r\n\tmin-height: 0;\r\n\tflex: 1;\r\n\toverflow-x: hidden;\r\n\tposition: relative;\r\n}\r\n\r\n.beepboxEditor .channelRow {\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .channelBox {\r\n\tdisplay: flex;\r\n\ttext-align: center;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbox-sizing: border-box;\r\n\tpadding-top: 1px;\r\n}\r\n\r\n.beepboxEditor .channelBoxLabel {\r\n\tfont-size: 20px;\r\n\tfont-family: sans-serif;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.beepboxEditor .dropFader {\r\n\topacity: 0;\r\n\t-webkit-transition:opacity 0.17s linear;\r\n    -moz-transition:opacity 0.17s linear;\r\n    -o-transition:opacity 0.17s linear;\r\n    -ms-transition:opacity 0.17s linear; \r\n    transition:opacity 0.17s linear;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n\tposition: sticky;\r\n\tleft: 0;\r\n\tz-index: 1;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n\r\n.beepboxEditor .selectRow, .beepboxEditor .instrumentCopyPasteRow {\r\n\tmargin: 2px 0;\r\n\theight: var(--button-size);\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .selectRow > :last-child {\r\n\twidth: 62.5%;\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 var(--button-size);\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor .pitchShiftMarkerContainer {\r\n\tbox-sizing: border-box;\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\tleft: 3px;\r\n\tright: 3px;\r\n\tposition: absolute;\r\n\talign-items: center;\r\n\tpointer-events: none;\r\n}\r\n\r\n.beepboxEditor .pitchShiftMarker {\r\n\twidth: 0;\r\n\theight: 0;\r\n\tposition: absolute;\r\n}\r\n\r\n.beepboxEditor .pitchShiftMarker::before {\r\n\tcontent: \"\";\r\n\twidth: 2px;\r\n\theight: 20px;\r\n\ttransform: translate(-50%, -50%);\r\n\tposition: absolute;\r\n\tbackground: currentColor;\r\n\tborder-radius: 3px;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: var(--button-size);\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground: none;\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 6px;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.modTarget:hover {\r\n\tfill: ${ColorConfig.hoverPreview} !important;\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: var(--button-size);\r\n\twidth: 6px;\r\n\tborder-radius: 3px;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -10px;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 6px;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: var(--button-size);\r\n\twidth: 6px;\r\n\tborder-radius: 3px;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 6px;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: var(--button-size);\r\n\twidth: 6px;\r\n\tborder-radius: 3px;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 711px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: var(--settings-area-width);\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 710px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\t\tprivate readonly _notches: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4});\r\n\t\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2});\r\n\t\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\tprivate _renderedPlayhead: number = -1;\r\n\t\t\r\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight},\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\t\t\r\n\t\tpublic readonly container: HTMLElement = HTML.div({class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\"}, this._svg);\r\n\t\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedScrollBarPos: number = -1;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\t\t\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\t\t\t\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\t\t\tthis._notchSpace = (this._editorWidth-1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\t\t\t\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\t\t\t\t\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\t\t\t\t\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\t\tthis._notches.appendChild(SVG.rect({fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2}));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (resized || this._renderedScrollBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedScrollBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\t\t\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\t\t\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\t\tconst real0: number = realArray[startIndex ];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\t\tconst imag0: number = imagArray[startIndex ];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\t\t\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\t\t\r\n\treverseIndexBits(array, fullArrayLength);\r\n\t\t\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\t\tarray[index ] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\t\t\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\t\tarray[index ] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\t\t\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\t\t\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\t\tarray[index ] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\t\t\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}","/*\r\nThis file contains code to compute digital audio filter coefficients based on\r\nthe desired type, cutoff frequency, and other parameters. You can use these\r\ncoefficients to apply the filter to audio samples. It also contains code to\r\nanalyze these filters, which is useful for graphically displaying their effects.\r\n\r\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\r\nfilters, because older output samples contribute feedback to newer output\r\nsamples and thus contribute to all future samples, although typically filters\r\nare design to reduce the contribution of older samples over time.\r\n\r\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\r\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\r\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\r\nvolume of the signal at all but induce phase changes above the cutoff frequency.\r\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\r\nbut raise or lower the volume at that frequency. \r\n\r\nThe number of old samples used in the filter determines the \"order\" of the\r\nfilter. First-order filters generally have shallower slopes, and second-order\r\nfilters generally have steeper slopes and can be configured to \"resonate\",\r\nmeaning they have a louder peak at the cutoff frequency. This file contains\r\nfirst-order filters and second-order filters, meaning one or two older samples\r\nare involved, as well as the current input sample.\r\n\r\nThe class FilterCoefficients is defined lower in this file. You can use it to\r\nset up a first order filter like this:\r\n\r\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst filter: FilterCoefficients = new FilterCoefficients();\r\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\r\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\r\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\r\n\tconst a: number[] = filter.a;\r\n\t// input sample coefficients are conventionally called b0, b1, etc\r\n\tconst b: number[] = filter.b;\r\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\r\n\tconst x: number[] = [0, 0, 0];\r\n\t// filter output samples, y[0] will be computed by the filter based on input\r\n\t// samples and older output samples.\r\n\tconst y: number[] = [0, 0, 0];\r\n\r\nThen to apply the first-order filter to samples inside a loop, using the current\r\ninput sample (x[0]) as well as previous input and output samples, do this:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\r\n\t// Remember the input and output samples for next time:\r\n\tx[1] = x[0];\r\n\ty[1] = y[0];\r\n\r\n2nd order filters are similar, but have more parameters and require more old\r\nsamples:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\r\n\t// Remember the input and output samples for next time:\r\n\tx[2] = x[1];\r\n\tx[1] = x[0];\r\n\ty[2] = y[1];\r\n\ty[1] = y[0];\r\n\r\nYou can compose multiple filters into a higher order filter, although doing so\r\nreduces the numerical stability of the filter:\r\n\r\n\tfilter3.combination(filter1, filter2);\r\n\t// filter3.order will equal: filter1.order + filter2.order\r\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\r\n\r\nThis file also contains a class called FrequencyResponse. You can use it to\r\ndetermine how much gain or attenuation a filter would apply to sounds at a\r\nspecific input frequency, as well as the phase offset:\r\n\r\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst response: FrequencyResponse = new FrequencyResponse();\r\n\tresponse.analyze(filter, inputRadians);\r\n\tconst gainResponse = response.magnitude();\r\n\tconst phaseResponse = response.angle();\r\n\r\nThat's basically all you need to know to use this code, but I'll also explain\r\nhow the analysis works.\r\n\r\nA first-order digital IIR filter is ordinarily implemented in a form like this:\r\n\r\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\r\n\r\nIf we adopt standard naming conventions for audio filters, this same code would\r\ninstead look like:\r\n\r\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\r\n\ty0 = b0*x0 + b1*x1 - a1*y1;\r\n\r\nLeaving behind the world of code for a moment and entering the world of algebra,\r\nwe can rewrite this equation by moving all the output terms to the left side,\r\nand we can add a coefficient to the y0 term called a0 (which is typically\r\nnormalized to 1.0, which is why I didn't bother including it until now):\r\n\r\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\r\n\r\nThis is known as the symmetrical form of the filter, and it will help us analyze\r\nthe impact of the filter on an input audio signal. Here's a lesson that helped\r\nme understand the symmetrical form:\r\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\r\n\r\nThe end of that lesson introduces a concept called the \"delay operator\" which\r\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\r\nwhen you multiply them. For example:\r\n\r\n\tx0 * z^-1 = x1\r\n\r\nThe lesson doesn't explain how it actually works. Audio signals aren't always\r\npredictable, which means that you generally can't do math on a single sample to\r\ncompute what the previous sample was. However, some audio signals ARE\r\npredictable, such as pure sine waves. Fortunately, all audio signals can be\r\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\r\ntime, and use it to analyze the filter's impact on waves at that frequency. In\r\npractice, this tells us what the filter will do to unpredictable input samples\r\nthat contain a partial sine wave at that frequency.\r\n\r\nTechnically, you can't just use a single sine wave sample to determine the\r\nprevious sine wave sample, because each possible value is passed going upwards\r\nand downwards once per period and the direction is ambigous. This is where we\r\nneed to move into the complex number domain, where the real and imaginary\r\ncomponents can provide enough information to compute the previous position on\r\nthe input signal. So now instead of talking about sine waves, we're talking\r\nabout waves where the imaginary component is a sine wave and the real component\r\nis a cosine wave at the same frequency. Together, they trace around a unit\r\ncircle in the complex domain, and each sample is just a consistent rotation\r\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\r\nthis same rotation applied in reverse, and it can be computed as:\r\n\r\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\r\n\r\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\r\nexplaining what that means is probably beyond the scope of this documentation\r\naside from noting that a complex number on the unit circle represents a 2D\r\nrotation that you can apply via multiplication.\r\n\r\nNow we can rewrite the symmetrical form using the delay operator and algebra:\r\n\r\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\r\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\r\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nThat last equation expresses the relationship between the input and output\r\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\r\npoint, the specific values of the input and output samples don't even matter!\r\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\r\n\r\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nIf you plug in actual filter coefficients and express the delay operators as\r\ncomplex numbers with the appropriate trigonometry functions, the transfer\r\nfunction can be computed and produces a complex number that represents the\r\nrelationship between the input and output signals, whose magnitude represents\r\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\r\nrepresents how much phase shift is applied by the filter to signals at that\r\nfrequency.\r\n\r\n(Note that in order to compute the transfer function, you'll need to do\r\nsomething about the complex number in the denominator. It turns out you can turn\r\nthe denominator into a real number by multiplying both the numerator and\r\ndenominator by the complex conjugate of the denominator, which is just the\r\ndenominator with the imaginary component negated.)\r\n\r\nFinally, I'll list some of the links that helped me understand filters and\r\nprovided some of the algorithms I that use here.\r\n\r\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\r\ndigital filters:\r\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\r\n\r\nThis page is how I found a link to the cookbook article above. It claims these\r\nfilters are Butterworth filters:\r\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\r\nI found the first-order digital Butterworth filter coefficients at:\r\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\r\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\r\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\r\n\r\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\r\nhttps://www.drpetter.se/project_sfxr.html\r\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\r\nnearly identical, but when closer to the nyquist frequency the simpler filters\r\ncreate extra resonance.\r\n*/\r\n\r\nexport class FilterCoefficients {\r\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\r\n\tpublic readonly b: number[] = [1.0]; // input coefficients\r\n\tpublic order: number = 0;\r\n\t\r\n\tpublic linearGain0thOrder(linearGain: number): void {\r\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\r\n\t\tthis.b[0] = linearGain;\r\n\t\tthis.order = 0;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth low-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\t// A butterworth filter is one where the amplitude response is equal to:\r\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[1] = this.b[0] = 1 / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\r\n\t\t// then the output is the same as the input, and if the cutoff is higher\r\n\t\t// than that, then the output actually resonates at high frequencies\r\n\t\t// instead of attenuating.\r\n\t\t// I'm guessing this filter was converted from analog to digital using\r\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\r\n\t\t// method. The difference is that the bilinear transform warps\r\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\r\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\r\n\t\t// preserves the frequency of the filter response but also adds the\r\n\t\t// reflected response from above the nyquist frequency.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 0.0;\r\n\t\t/*\r\n\t\t// Alternatively:\r\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\r\n\t\tconst a0: number = g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = 1.0 / a0;\r\n\t\tthis.b[1] = 0.0 / a0;\r\n\t\t*/\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth high-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = g / a0;\r\n\t\tthis.b[1] = -g / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t/*\r\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\r\n\t\t// appoaches the nyquist.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\r\n\t\t// I had trouble figuring this one out because I couldn't find any\r\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\r\n\t\t// and I could narrow down a couple of them based on the desired gain at\r\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\r\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\r\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\r\n\t\t// Obviously I don't fully understand the bilinear transform yet!\r\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\r\n\t\tconst a0: number = 1.0;\r\n\t\tthis.a[1] = g / a0;\r\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\t/*\r\n\t// I haven't found a practical use for this version of the all pass filter.\r\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\r\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = -g;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\t\r\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\r\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\r\n\t\t// differently and for a different purpose! Useful for interpolating\r\n\t\t// between samples in a delay line.\r\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\r\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\r\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\r\n\t\t// although it gets distorted near the nyquist.\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\r\n\t\tthis.b[1] = (1 - cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This filter is adapted from the one in the SFXR source code:\r\n\t\t// https://www.drpetter.se/project_sfxr.html\r\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\r\n\t\t// above, except it resonates too much when the cutoff appoaches the\r\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\r\n\t\t// nyquist/3, then the output is the same as the input.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = g*g;\r\n\t\tthis.b[1] = 0;\r\n\t\tthis.b[2] = 0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1.0 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\r\n\t\tthis.b[1] = -(1.0 + cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -2.0;\r\n\t\tthis.b[2] = 1.0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t*/\r\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\r\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst Aplus: number = A + 1.0;\r\n\t\tconst Aminus: number = A - 1.0;\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\r\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\r\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\r\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\r\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\r\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\r\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\r\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\r\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\r\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\r\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\r\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\r\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\r\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\r\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\r\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\r\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\r\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\t// Create a higher order filter by combining two lower order filters.\r\n\t// However, making high order filters in this manner results in instability.\r\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\r\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\r\n\t\tthis.order = filter1.order + filter2.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = 0.0;\r\n\t\t\tthis.b[i] = 0.0;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\r\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\r\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\r\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\r\n\t\tif (other.order != this.order) throw new Error();\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\r\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic copy(other: FilterCoefficients): void {\r\n\t\tthis.order = other.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = other.a[i];\r\n\t\t\tthis.b[i] = other.b[i];\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\nexport class FrequencyResponse {\r\n\tpublic real: number = 0.0;\r\n\tpublic imag: number = 0.0;\r\n\tpublic denom: number = 1.0;\r\n\t\r\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\r\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\r\n\t}\r\n\t\r\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\r\n\t\tconst a: number[] = filter.a;\r\n\t\tconst b: number[] = filter.b;\r\n\t\tconst realZ1: number = real;\r\n\t\tconst imagZ1: number = -imag;\r\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\r\n\t\tlet imagNum: number = b[1] * imagZ1;\r\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\r\n\t\tlet imagDenom: number = a[1] * imagZ1;\r\n\t\tlet realZ: number = realZ1;\r\n\t\tlet imagZ: number = imagZ1;\r\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\r\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\r\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\r\n\t\t\trealZ = realTemp;\r\n\t\t\timagZ = imagTemp;\r\n\t\t\trealNum += b[i] * realZ;\r\n\t\t\timagNum += b[i] * imagZ;\r\n\t\t\trealDenom += a[i] * realZ;\r\n\t\t\timagDenom += a[i] * imagZ;\r\n\t\t}\r\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\r\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\r\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\r\n\t}\r\n\t\r\n\tpublic magnitude(): number {\r\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\r\n\t}\r\n\t\r\n\tpublic angle(): number {\r\n\t\treturn Math.atan2(this.imag, this.real);\r\n\t}\r\n}\r\n\r\nexport class DynamicBiquadFilter {\r\n\tpublic a1: number = 0.0;\r\n\tpublic a2: number = 0.0;\r\n\tpublic b0: number = 1.0;\r\n\tpublic b1: number = 0.0;\r\n\tpublic b2: number = 0.0;\r\n\tpublic a1Delta: number = 0.0;\r\n\tpublic a2Delta: number = 0.0;\r\n\tpublic b0Delta: number = 0.0;\r\n\tpublic b1Delta: number = 0.0;\r\n\tpublic b2Delta: number = 0.0;\r\n\tpublic output1: number = 0.0;\r\n\tpublic output2: number = 0.0;\r\n\t\r\n\t// Some filter types are more stable when interpolating between coefficients\r\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\r\n\t// for filter types where the \"b\" coefficients might change sign!\r\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\r\n\t\r\n\tpublic resetOutput(): void {\r\n\t\tthis.output1 = 0.0;\r\n\t\tthis.output2 = 0.0;\r\n\t}\r\n\t\r\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\r\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\r\n\t\tthis.a1 = start.a[1];\r\n\t\tthis.a2 = start.a[2];\r\n\t\tthis.b0 = start.b[0];\r\n\t\tthis.b1 = start.b[1];\r\n\t\tthis.b2 = start.b[2];\r\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\r\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\r\n\t\tif (useMultiplicativeInputCoefficients) {\r\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\r\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\r\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\r\n\t\t} else {\r\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\r\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\r\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\r\n\t\t}\r\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\r\n\t}\r\n}\r\n\r\n// Filters are typically designed as analog filters first, then converted to\r\n// digital filters using one of two methods: the \"matched z-transform\" or the\r\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\r\n// preserving the magnitudes of the frequency response, but warps the frequency\r\n// range such that the nyquist frequency of the digital filter (π) maps to the\r\n// infinity frequency of the analog filter. You can use the below functions to\r\n// manually perform this warping in either direction.\r\nexport function warpNyquistToInfinity(radians: number): number {\r\n\treturn 2.0 * Math.tan(radians * 0.5);\r\n}\r\nexport function warpInfinityToNyquist(radians: number): number {\r\n\treturn 2.0 * Math.atan(radians * 0.5);\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, DictionaryArray, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, OperatorWave, effectsIncludeNoteRange, effectsIncludeInvertWave, CustomEnvelope, CustomEnvelopeEndType } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\r\n\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nexport function clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n    beatCount           = CharCode.a, // added in BeepBox URL version 2\r\n\tbars                = CharCode.b, // added in BeepBox URL version 2\r\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\r\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\r\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\r\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\r\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\r\n\tunison              = CharCode.h, // added in BeepBox URL version 2\r\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\r\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\r\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\r\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\r\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\r\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\r\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\r\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\r\n\teffects             = CharCode.q, // added in BeepBox URL version 7\r\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\r\n\tscale               = CharCode.s, // added in BeepBox URL version 2\r\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\r\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\r\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\r\n\twave                = CharCode.w, // added in BeepBox URL version 2\r\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9\r\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED\r\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\r\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\r\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\r\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\r\n\tdetune              = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\r\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\r\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\r\n\tarpeggioSpeed       = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\r\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\r\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\r\n//\t                    = CharCode.J,\r\n//\t                    = CharCode.K,\r\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\r\n\tcustomChipWave      = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\r\n\tsongTitle           = CharCode.N, // added in JummBox URL version 1(?) for songTitle\r\n\tlimiterSettings     = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\r\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\r\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\r\n\toperatorWaves       = CharCode.R, // added in JummBox URL version 4 for operatorWaves\r\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\r\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\r\n\tchannelNames        = CharCode.U, // added in JummBox URL version 4(?) for channelNames\r\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\r\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\r\n\taliases             = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED\r\n\toperatorHzOffsets   = CharCode.Y, // added in Dogebox URL version 3 for custom FM frequencies.\r\n    operatorInverts     = CharCode.Z, // added in Dogebox URL version 3 for custom FM frequencies.\r\n//\t                    = CharCode.NUM_0,\r\n//\t                    = CharCode.NUM_1,\r\n//\t                    = CharCode.NUM_2,\r\n//\t                    = CharCode.NUM_3,\r\n//\t                    = CharCode.NUM_4,\r\n//\t                    = CharCode.NUM_5,\r\n//\t                    = CharCode.NUM_6,\r\n//\t                    = CharCode.NUM_7,\r\n//\t                    = CharCode.NUM_8,\r\n//\t                    = CharCode.NUM_9,\r\n//\t                    = CharCode.DASH,\r\n//\t                    = CharCode.UNDERSCORE,\r\n\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n    private _bits: number[] = [];\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    size: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\r\n    return { interval: interval, time: time, size: size };\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n    public continuesLastPattern: boolean;\r\n\r\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\r\n        this.start = start;\r\n        this.end = end;\r\n        this.continuesLastPattern = false;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestSize: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestSize < pin.size) {\r\n                    loudestSize = pin.size;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\r\n        }\r\n        newNote.continuesLastPattern = this.continuesLastPattern;\r\n        return newNote;\r\n    }\r\n\r\n    public getEndPinIndex(part: number): number {\r\n        let endPinIndex: number;\r\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\r\n            if (this.pins[endPinIndex].time + this.start > part) break;\r\n        }\r\n        return endPinIndex;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public readonly instruments: number[] = [0];\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instruments[0] = 0;\r\n        this.instruments.length = 1;\r\n    }\r\n\r\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\r\n        const noteArray: Object[] = [];\r\n        for (const note of this.notes) {\r\n            // Only one ins per pattern is enforced in mod channels.\r\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n            const pointArray: Object[] = [];\r\n            for (const pin of note.pins) {\r\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\r\n                pointArray.push({\r\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                    \"pitchBend\": pin.interval,\r\n                    \"volume\": useVol,\r\n                    \"forMod\": isModChannel,\r\n                });\r\n            }\r\n\r\n            const noteObject: any = {\r\n                \"pitches\": note.pitches,\r\n                \"points\": pointArray,\r\n            };\r\n            if (note.start == 0) {\r\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\r\n            }\r\n            noteArray.push(noteObject);\r\n        }\r\n\r\n        const patternObject: any = { \"notes\": noteArray };\r\n        if (song.patternInstruments) {\r\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\r\n        }\r\n        return patternObject;\r\n    }\r\n\r\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        if (song.patternInstruments) {\r\n            if (Array.isArray(patternObject[\"instruments\"])) {\r\n                const instruments: any[] = patternObject[\"instruments\"];\r\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\r\n                for (let j: number = 0; j < instrumentCount; j++) {\r\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\r\n                }\r\n                this.instruments.length = instrumentCount;\r\n            } else {\r\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\r\n                this.instruments.length = 1;\r\n            }\r\n        }\r\n\r\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\r\n\r\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\r\n            //let tickClock: number = 0;\r\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                if (j >= maxNoteCount) break;\r\n\r\n                const noteObject = patternObject[\"notes\"][j];\r\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                    continue;\r\n                }\r\n\r\n                const note: Note = new Note(0, 0, 0, 0);\r\n                note.pitches = [];\r\n                note.pins = [];\r\n\r\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                    if (note.pitches.indexOf(pitch) != -1) continue;\r\n                    note.pitches.push(pitch);\r\n                    if (note.pitches.length >= Config.maxChordSize) break;\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                //let noteClock: number = tickClock;\r\n                let startInterval: number = 0;\r\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                    const pointObject: any = noteObject[\"points\"][k];\r\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                    let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n                    let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n\r\n                    // Only one instrument per pattern allowed in mod channels.\r\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n\r\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                    let size: number;\r\n                    if (pointObject[\"volume\"] == undefined) {\r\n                        size = volumeCap;\r\n                    } else if (pointObject[\"forMod\"] == undefined) {\r\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n                    else {\r\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n\r\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\r\n                    if (note.pins.length == 0) {\r\n                        //if (time < noteClock) continue;\r\n                        note.start = time;\r\n                        startInterval = interval;\r\n                    } else {\r\n                        //if (time <= noteClock) continue;\r\n                    }\r\n                    //noteClock = time;\r\n\r\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\r\n                }\r\n                if (note.pins.length < 2) continue;\r\n\r\n                note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                let lowestPitch: number = maxPitch;\r\n                let highestPitch: number = 0;\r\n                for (let k: number = 0; k < note.pitches.length; k++) {\r\n                    note.pitches[k] += startInterval;\r\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                        note.pitches.splice(k, 1);\r\n                        k--;\r\n                    }\r\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                for (let k: number = 0; k < note.pins.length; k++) {\r\n                    const pin: NotePin = note.pins[k];\r\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                    if (k >= 2) {\r\n                        if (pin.interval == note.pins[k - 1].interval &&\r\n                            pin.interval == note.pins[k - 2].interval &&\r\n                            pin.size == note.pins[k - 1].size &&\r\n                            pin.size == note.pins[k - 2].size) {\r\n                            note.pins.splice(k - 1, 1);\r\n                            k--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (note.start == 0) {\r\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\r\n                } else {\r\n                    note.continuesLastPattern = false;\r\n                }\r\n\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 0;\r\n    public hzOffset: number = 0;\r\n    public invert: boolean = false;\r\n    public amplitude: number = 0;\r\n    public waveform: number = 0;\r\n    public pulseWidth: number = 0.5;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 0;\r\n        this.hzOffset = 0;\r\n        this.invert = false;\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.waveform = 0;\r\n        this.pulseWidth = 5;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.hzOffset = other.hzOffset;\r\n        this.invert = other.invert;\r\n        this.amplitude = other.amplitude;\r\n        this.waveform = other.waveform;\r\n        this.pulseWidth = other.pulseWidth;\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass SpectrumWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n\r\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\r\n        if (this._hash == settings.hash) return this.wave!;\r\n        this._hash = settings.hash;\r\n\r\n        const waveLength: number = Config.spectrumNoiseLength;\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const highestOctave: number = 14;\r\n        const falloffRatio: number = 0.25;\r\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\r\n        function controlPointToOctave(point: number): number {\r\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n        }\r\n\r\n        let combinedAmplitude: number = 1;\r\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\r\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\r\n            const octave1: number = controlPointToOctave(i - 1);\r\n            let octave2: number = controlPointToOctave(i);\r\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n            if (value1 == 0 && value2 == 0) continue;\r\n\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n        }\r\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass HarmonicsWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n    private _generatedForType: InstrumentType;\r\n\r\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\r\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\r\n        this._hash = settings.hash;\r\n        this._generatedForType = instrumentType;\r\n\r\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\r\n\r\n        const waveLength: number = Config.harmonicsWavelength;\r\n        const retroWave: Float32Array = getDrumWave(0, null, null);\r\n\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const overallSlope: number = -0.25;\r\n        let combinedControlPointAmplitude: number = 1;\r\n\r\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\r\n            const harmonicFreq: number = harmonicIndex + 1;\r\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\r\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\r\n            }\r\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n            if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                combinedControlPointAmplitude += amplitude;\r\n            }\r\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n            // retro wave (effectively random) to avoid egregiously tall spikes.\r\n            amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n            wave[waveLength - harmonicFreq] = amplitude;\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n\r\n        // Limit the maximum wave amplitude.\r\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\r\n\r\n        performIntegralOld(wave);\r\n\r\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class FilterControlPoint {\r\n    public freq: number = 0;\r\n    public gain: number = Config.filterGainCenter;\r\n    public type: FilterType = FilterType.peak;\r\n\r\n    public set(freqSetting: number, gainSetting: number): void {\r\n        this.freq = freqSetting;\r\n        this.gain = gainSetting;\r\n    }\r\n\r\n    public getHz(): number {\r\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\r\n    }\r\n\r\n    public static getHzFromSettingValue(value: number): number {\r\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\r\n    }\r\n    public static getSettingValueFromHz(hz: number): number {\r\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\r\n    }\r\n    public static getRoundedSettingValueFromHz(hz: number): number {\r\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\r\n    }\r\n\r\n    public getLinearGain(peakMult: number = 1.0): number {\r\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\r\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\r\n        return Math.pow(2.0, interpolatedPower);\r\n    }\r\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\r\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\r\n    }\r\n\r\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\r\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\r\n        const linearGain: number = this.getLinearGain(peakMult);\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.highPass:\r\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.peak:\r\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    public getVolumeCompensationMult(): number {\r\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\r\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\r\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\r\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\r\n                const warpedOctave: number = Math.log2(warpedFreq);\r\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\r\n            case FilterType.highPass:\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\r\n            case FilterType.peak:\r\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\r\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FilterSettings {\r\n    public readonly controlPoints: FilterControlPoint[] = [];\r\n    public controlPointCount: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.controlPointCount = 0;\r\n    }\r\n\r\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\r\n        let controlPoint: FilterControlPoint;\r\n        if (this.controlPoints.length <= this.controlPointCount) {\r\n            controlPoint = new FilterControlPoint();\r\n            this.controlPoints[this.controlPointCount] = controlPoint;\r\n        } else {\r\n            controlPoint = this.controlPoints[this.controlPointCount];\r\n        }\r\n        this.controlPointCount++;\r\n        controlPoint.type = type;\r\n        controlPoint.set(freqSetting, gainSetting);\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const filterArray: any[] = [];\r\n        for (let i: number = 0; i < this.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this.controlPoints[i];\r\n            filterArray.push({\r\n                \"type\": Config.filterTypeNames[point.type],\r\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\r\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\r\n            });\r\n        }\r\n        return filterArray;\r\n    }\r\n\r\n    public fromJsonObject(filterObject: any): void {\r\n        this.controlPoints.length = 0;\r\n        if (filterObject) {\r\n            for (const pointObject of filterObject) {\r\n                const point: FilterControlPoint = new FilterControlPoint();\r\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\r\n                if (<any>point.type == -1) point.type = FilterType.peak;\r\n                if (pointObject[\"cutoffHz\"] != undefined) {\r\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\r\n                } else {\r\n                    point.freq = 0;\r\n                }\r\n                if (pointObject[\"linearGain\"] != undefined) {\r\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\r\n                } else {\r\n                    point.gain = Config.filterGainCenter;\r\n                }\r\n                this.controlPoints.push(point);\r\n            }\r\n        }\r\n        this.controlPointCount = this.controlPoints.length;\r\n    }\r\n\r\n    // Returns true if all filter control points match in number and type (but not freq/gain)\r\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\r\n        if (filterA.controlPointCount != filterB.controlPointCount)\r\n            return false;\r\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB\r\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\r\n\r\n        let lerpedFilter: FilterSettings = new FilterSettings();\r\n\r\n        // One setting or another is null, return the other.\r\n        if (filterA == null) {\r\n            return filterA;\r\n        }\r\n        if (filterB == null) {\r\n            return filterB;\r\n        }\r\n\r\n        pos = Math.max(0, Math.min(1, pos));\r\n\r\n        // Filter control points match in number and type\r\n        if (this.filtersCanMorph(filterA, filterB)) {\r\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\r\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\r\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\r\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\r\n            }\r\n\r\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\r\n\r\n            return lerpedFilter;\r\n        }\r\n        else {\r\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\r\n            return (pos >= 1) ? filterB : filterA;\r\n        }\r\n    }\r\n\r\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const resonant: boolean = (legacyResonanceSetting > 1);\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\r\n\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\r\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\r\n        } else if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\r\n            if (envDecays) logGain = Math.min(logGain, -1.0);\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n            if (envDecays) {\r\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\r\n            } else {\r\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            }\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n            if (envDecays) {\r\n                legacyFilterGain = intendedGain;\r\n            } else {\r\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n                const response: FrequencyResponse = new FrequencyResponse();\r\n                response.analyze(legacyFilter, curvedRadians);\r\n                legacyFilterGain = response.magnitude();\r\n            }\r\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n        // Added for JummBox - making a 0 point filter does not truncate control points!\r\n        this.controlPoints.length = this.controlPointCount;\r\n    }\r\n\r\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\r\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n\r\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, curvedRadians);\r\n            legacyFilterGain = response.magnitude();\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class EnvelopeSettings {\r\n    public target: number = 0;\r\n    public index: number = 0;\r\n    public envelope: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.target = 0;\r\n        this.index = 0;\r\n        this.envelope = 0;\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const envelopeObject: any = {\r\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\r\n            \"envelope\": Config.envelopes[this.envelope].name,\r\n        };\r\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\r\n            envelopeObject[\"index\"] = this.index;\r\n        }\r\n        return envelopeObject;\r\n    }\r\n\r\n    public fromJsonObject(envelopeObject: any): void {\r\n        this.reset();\r\n\r\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\r\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n        this.target = target.index;\r\n\r\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\r\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\r\n        this.envelope = envelope.index;\r\n\r\n        if (envelopeObject[\"index\"] != undefined) {\r\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\r\n        } else {\r\n            this.index = 0;\r\n        }\r\n    }\r\n}\r\n\r\n// Settings that were available to old versions of BeepBox but are no longer available in the\r\n// current version that need to be reinterpreted as a group to determine the best way to\r\n// represent them in the current version.\r\ninterface LegacySettings {\r\n    filterCutoff?: number;\r\n    filterResonance?: number;\r\n    filterEnvelope?: Envelope;\r\n    pulseEnvelope?: Envelope;\r\n    operatorEnvelopes?: Envelope[];\r\n    feedbackEnvelope?: Envelope;\r\n}\r\n\r\ninterface HeldMod {\r\n    volume: number;\r\n    channelIndex: number;\r\n    instrumentIndex: number;\r\n    setting: number;\r\n    holdFor: number;\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n    public chipNoise: number = 1;\r\n    public eqFilter: FilterSettings = new FilterSettings();\r\n    public eqFilterType: boolean = false;\r\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public eqFilterSimplePeak: number = 0;\r\n    public noteFilter: FilterSettings = new FilterSettings();\r\n    public noteFilterType: boolean = false;\r\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public noteFilterSimplePeak: number = 0;\r\n    public eqSubFilters: (FilterSettings | null)[] = [];\r\n    public noteSubFilters: (FilterSettings | null)[] = [];\r\n    public tmpEqFilterStart: FilterSettings | null;\r\n    public tmpEqFilterEnd: FilterSettings | null;\r\n    public tmpNoteFilterStart: FilterSettings | null;\r\n    public tmpNoteFilterEnd: FilterSettings | null;\r\n    public envelopes: EnvelopeSettings[] = [];\r\n    public fadeIn: number = 0;\r\n    public fadeOut: number = Config.fadeOutNeutral;\r\n    public envelopeCount: number = 0;\r\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\r\n    public pitchShift: number = 0;\r\n    public detune: number = 0;\r\n    public vibrato: number = 0;\r\n    public interval: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public envelopeSpeed: number = 12;\r\n    public discreteEnvelope: boolean = false;\r\n    public unison: number = 0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public legacyTieOver: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public aliases: boolean = false;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public supersawDynamism: number = Config.supersawDynamismMax;\r\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\tpublic supersawShape: number = 0;\r\n\tpublic stringSustain: number = 10;\r\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\r\n    public distortion: number = 0;\r\n    public bitcrusherFreq: number = 0;\r\n    public bitcrusherQuantization: number = 0;\r\n    public chorus: number = 0;\r\n    public reverb: number = 0;\r\n    public echoSustain: number = 0;\r\n    public echoDelay: number = 0;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public feedbackAmplitude: number = 0;\r\n    public customChipWave: Float32Array = new Float32Array(64);\r\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modulators: number[] = [];\r\n    public modFilterTypes: number[] = [];\r\n    public invalidModulators: boolean[] = [];\r\n\r\n    public invertWave: boolean = false;\r\n\r\n    public upperNoteLimit: number = Config.maxPitch;\r\n    public lowerNoteLimit: number = 0;\r\n\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        // @jummbus - My screed on how modulator arrays for instruments work, for the benefit of myself in the future, or whoever else.\r\n        //\r\n        // modulators[mod] is the index in Config.modulators to use, with \"none\" being the first entry.\r\n        //\r\n        // modChannels[mod] gives the index of a channel set for this mod. Two special values:\r\n        //   -2 \"none\"\r\n        //   -1 \"song\"\r\n        //   0+ actual channel index\r\n        //\r\n        // modInstruments[mod] gives the index of an instrument within the channel set for this mod. Again, two special values:\r\n        //   [0 ~ channel.instruments.length-1]     channel's instrument index\r\n        //   channel.instruments.length             \"all\"\r\n        //   channel.instruments.length+1           \"active\"\r\n        //\r\n        // modFilterTypes[mod] gives some info about the filter type: 0 is morph, 1+ is index in the dot selection array (dot 1 x, dot 1 y, dot 2 x...)\r\n        //   0  filter morph\r\n        //   1+ filter dot target, starting from dot 1 x and then dot 1 y, then repeating x, y for all dots in order. Note: odd values are always \"x\" targets, even are \"y\".\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(-2);\r\n                this.modInstruments.push(0);\r\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\r\n        this.chorus = Config.chorusRange - 1;\r\n        this.reverb = 0;\r\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\r\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\r\n        this.eqFilter.reset();\r\n        this.eqFilterType = false;\r\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.eqFilterSimplePeak = 0;\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            this.eqSubFilters[i] = null;\r\n            this.noteSubFilters[i] = null;\r\n        }\r\n        this.noteFilter.reset();\r\n        this.noteFilterType = false;\r\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.noteFilterSimplePeak = 0;\r\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\r\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\r\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.pitchShift = Config.pitchShiftCenter;\r\n        this.detune = Config.detuneCenter;\r\n        this.vibrato = 0;\r\n        this.unison = 0;\r\n        this.stringSustain = 10;\r\n        this.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\r\n        this.clicklessTransition = false;\r\n        this.arpeggioSpeed = 12;\r\n        this.envelopeSpeed = 12;\r\n        this.discreteEnvelope = false;\r\n        this.legacyTieOver = false;\r\n        this.aliases = false;\r\n        this.fadeIn = 0;\r\n        this.fadeOut = Config.fadeOutNeutral;\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\r\n        this.envelopeCount = 0;\r\n\r\n        this.upperNoteLimit = Config.maxPitch;\r\n        this.lowerNoteLimit = 0;\r\n\r\n        this.invertWave = false;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                // TODO: enable the chord effect?\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                break;\r\n            case InstrumentType.pickedString:\r\n                this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modInstruments = [];\r\n                this.modulators = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(-2);\r\n                    this.modInstruments.push(0);\r\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n                    this.invalidModulators[mod] = false;\r\n                    this.modFilterTypes[mod] = 0;\r\n                }\r\n                break;\r\n\t\t\tcase InstrumentType.supersaw:\r\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\r\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\t\t\t\tthis.supersawShape = 0;\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\r\n\t\t\t\tbreak;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\r\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n    }\r\n\r\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\r\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\r\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\r\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\r\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\r\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\r\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\r\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\r\n\r\n        // legacy defaults:\r\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\r\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\r\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\r\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\r\n        let noCarriersControlledByNoteSize: boolean = true;\r\n        let allCarriersControlledByNoteSize: boolean = true;\r\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\r\n        if (this.type == InstrumentType.fm) {\r\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\r\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n                if (i < carrierCount) {\r\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\r\n                        allCarriersControlledByNoteSize = false;\r\n                    } else {\r\n                        noCarriersControlledByNoteSize = false;\r\n                    }\r\n                } else {\r\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.envelopeCount = 0;\r\n\r\n        if (this.type == InstrumentType.fm) {\r\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFilterEnv.type == EnvelopeType.none) {\r\n            this.noteFilter.reset();\r\n            this.noteFilterType = false;\r\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects &= ~(1 << EffectType.noteFilter);\r\n            if (forceSimpleFilter || this.eqFilterType) {\r\n                this.eqFilterType = true;\r\n                this.eqFilterSimpleCut = legacyCutoffSetting;\r\n                this.eqFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        } else {\r\n            this.eqFilter.reset();\r\n\r\n            this.eqFilterType = false;\r\n            this.noteFilterType = false;\r\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects |= 1 << EffectType.noteFilter;\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\r\n            if (forceSimpleFilter || this.noteFilterType) {\r\n                this.noteFilterType = true;\r\n                this.noteFilterSimpleCut = legacyCutoffSetting;\r\n                this.noteFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        }\r\n\r\n        if (legacyPulseEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\r\n        }\r\n\r\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\r\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"eqFilter\": this.eqFilter.toJsonObject(),\r\n            \"eqFilterType\": this.eqFilterType,\r\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\r\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\r\n            \"envelopeSpeed\": this.envelopeSpeed,\r\n            \"discreteEnvelope\": this.discreteEnvelope\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            if (this.eqSubFilters[i] != null)\r\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\r\n        }\r\n\r\n        const effects: string[] = [];\r\n        for (const effect of Config.effectOrder) {\r\n            if (this.effects & (1 << effect)) {\r\n                effects.push(Config.effectNames[effect]);\r\n            }\r\n        }\r\n        instrumentObject[\"effects\"] = effects;\r\n\r\n\r\n        if (effectsIncludeTransition(this.effects)) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\r\n        }\r\n        if (effectsIncludeChord(this.effects)) {\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\r\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\r\n        }\r\n        if (effectsIncludePitchShift(this.effects)) {\r\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\r\n        }\r\n        if (effectsIncludeDetune(this.effects)) {\r\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\r\n        }\r\n        if (effectsIncludeVibrato(this.effects)) {\r\n            if (this.vibrato == -1) {\r\n                this.vibrato = 5;\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\r\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\r\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\r\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\r\n        }\r\n        if (effectsIncludeNoteFilter(this.effects)) {\r\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\r\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\r\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\r\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null)\r\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\r\n            }\r\n        }\r\n        if (effectsIncludeDistortion(this.effects)) {\r\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\r\n            instrumentObject[\"aliases\"] = this.aliases;\r\n        }\r\n        if (effectsIncludeBitcrusher(this.effects)) {\r\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\r\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\r\n        }\r\n        if (effectsIncludePanning(this.effects)) {\r\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\r\n            instrumentObject[\"panDelay\"] = this.panDelay;\r\n        }\r\n        if (effectsIncludeChorus(this.effects)) {\r\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\r\n        }\r\n        if (effectsIncludeEcho(this.effects)) {\r\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\r\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\r\n        }\r\n        if (effectsIncludeReverb(this.effects)) {\r\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\r\n        }\r\n        if (effectsIncludeNoteRange(this.effects)) {\r\n            instrumentObject[\"upperNoteLimit\"] = this.upperNoteLimit;\r\n            instrumentObject[\"lowerNoteLimit\"] = this.lowerNoteLimit;\r\n        }\r\n        if (effectsIncludeInvertWave(this.effects)) {\r\n            instrumentObject[\"invertWave\"] = this.invertWave;\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\r\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\r\n        }\r\n\r\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n        } else if (this.type == InstrumentType.supersaw) {\r\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\r\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\r\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\r\n\t\t} else if (this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\r\n            if (Config.enableAcousticSustain) {\r\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\r\n\t\t\t}\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n        } else if (this.type == InstrumentType.fm) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": operator.frequency,\r\n                    \"hzOffset\": operator.hzOffset,\r\n                    \"invert\": operator.invert,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\r\n                    \"pulseWidth\": operator.pulseWidth,\r\n                });\r\n            }\r\n            instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n            instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n            instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n            instrumentObject[\"newOperators\"] = operatorArray;\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modFilterTypes\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\r\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n\r\n        const envelopes: any[] = [];\r\n        for (let i = 0; i < this.envelopeCount; i++) {\r\n            envelopes.push(this.envelopes[i].toJsonObject());\r\n        }\r\n        instrumentObject[\"envelopes\"] = envelopes;\r\n\r\n        return instrumentObject;\r\n    }\r\n\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        this.effects &= ~(1 << EffectType.panning);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"envelopeSpeed\"] != undefined) {\r\n            this.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0);\r\n        } else {\r\n            this.envelopeSpeed = 12;\r\n        }\r\n\r\n        if (instrumentObject[\"discreteEnvelope\"] != undefined) {\r\n            this.discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\r\n        }\r\n        else {\r\n            this.discreteEnvelope = false;\r\n        }\r\n\r\n        if (Array.isArray(instrumentObject[\"effects\"])) {\r\n            let effects: number = 0;\r\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\r\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\r\n            }\r\n            this.effects = (effects & ((1 << EffectType.length) - 1));\r\n        } else {\r\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\r\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\r\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n        }\r\n\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\r\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\r\n        if (transitionProperty != undefined) {\r\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\r\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\r\n                const legacySettings = (<any>{\r\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\r\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\r\n                    // of the fade in/out fields.\r\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                })[transitionProperty];\r\n                if (legacySettings != undefined) {\r\n                    transition = Config.transitions.dictionary[legacySettings.transition];\r\n                    // These may be overridden below.\r\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\r\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\r\n                }\r\n            }\r\n            if (transition != undefined) this.transition = transition.index;\r\n\r\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                // Enable transition if it was used.\r\n                this.effects = (this.effects | (1 << EffectType.transition));\r\n            }\r\n        }\r\n\r\n        // Overrides legacy settings in transition above.\r\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\r\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\r\n        }\r\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\r\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\r\n        }\r\n\r\n        {\r\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\r\n            const chordProperty: any = instrumentObject[\"chord\"];\r\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\r\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\r\n            if (chord != undefined) {\r\n                this.chord = chord.index;\r\n            } else {\r\n                // Different instruments have different default chord types based on historical behaviour.\r\n                if (this.type == InstrumentType.noise) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.pickedString) {\r\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                } else if (this.type == InstrumentType.chip) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.fm) {\r\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                } else {\r\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\r\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\r\n        if (unisonProperty != undefined) {\r\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\" };\r\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\r\n            if (unison != undefined) this.unison = unison.index;\r\n        }\r\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\r\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n        }\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n\r\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\r\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\r\n        }\r\n        if (instrumentObject[\"detuneCents\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\r\n        }\r\n\r\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\r\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\r\n        if (vibratoProperty != undefined) {\r\n\r\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\r\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\r\n            if (vibrato != undefined)\r\n                this.vibrato = vibrato.index;\r\n            else if (vibratoProperty == \"custom\")\r\n                this.vibrato = Config.vibratos.length; // custom\r\n\r\n            if (this.vibrato == Config.vibratos.length) {\r\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                this.vibratoType = instrumentObject[\"vibratoType\"];\r\n            }\r\n            else { // Set defaults for the vibrato profile\r\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\r\n                this.vibratoSpeed = 10; // default;\r\n                this.vibratoType = Config.vibratos[this.vibrato].type;\r\n            }\r\n\r\n            // Old songs may have a vibrato effect without explicitly enabling it.\r\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\r\n                this.effects = (this.effects | (1 << EffectType.vibrato));\r\n            }\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\r\n            // Old songs may have a panning effect without explicitly enabling it.\r\n            if (this.pan != Config.panCenter) {\r\n                this.effects = (this.effects | (1 << EffectType.panning));\r\n            }\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\r\n            this.detune = Config.detuneCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"distortion\"] != undefined) {\r\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\r\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\r\n        }\r\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\r\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"echoSustain\"] != undefined) {\r\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\r\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\r\n        }\r\n\r\n        if (!isNaN(instrumentObject[\"chorus\"])) {\r\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\r\n        } else {\r\n            this.reverb = legacyGlobalReverb;\r\n        }\r\n\r\n        if (instrumentObject[\"upperNoteLimit\"] != undefined) {\r\n            this.upperNoteLimit = instrumentObject[\"upperNoteLimit\"]\r\n        }\r\n        if (instrumentObject[\"lowerNoteLimit\"] != undefined) {\r\n            this.lowerNoteLimit = instrumentObject[\"lowerNoteLimit\"]\r\n        }\r\n\r\n        if (instrumentObject[\"invertWave\"] != undefined) {\r\n            this.invertWave = instrumentObject[\"invertWave\"];\r\n        } else {\r\n            this.invertWave = false;\r\n        }\r\n\r\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n        } else {\r\n            this.pulseWidth = Config.pulseWidthRange;\r\n        }\r\n\r\n        if (instrumentObject[\"dynamism\"] != undefined) {\r\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\r\n\t\t}\r\n\t\tif (instrumentObject[\"spread\"] != undefined) {\r\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\t\t}\r\n\t\tif (instrumentObject[\"shape\"] != undefined) {\r\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawShape = 0;\r\n\t\t}\r\n\r\n        if (instrumentObject[\"harmonics\"] != undefined) {\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n            }\r\n            this.harmonicsWave.markCustomWaveDirty();\r\n        } else {\r\n            this.harmonicsWave.reset();\r\n        }\r\n\r\n        if (instrumentObject[\"spectrum\"] != undefined) {\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n            }\r\n        } else {\r\n            this.spectrumWave.reset(isNoiseChannel);\r\n        }\r\n\r\n        if (instrumentObject[\"stringSustain\"] != undefined) {\r\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\r\n        } else {\r\n            this.stringSustain = 10;\r\n        }\r\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\r\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n        }\r\n\r\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\r\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\r\n\r\n        if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\r\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n            this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipWave == -1) this.chipWave = 1;\r\n        }\r\n\r\n        if (this.type == InstrumentType.fm) {\r\n            this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n            if (this.algorithm == -1) this.algorithm = 0;\r\n            this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n            if (this.feedbackType == -1) this.feedbackType = 0;\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"] != undefined) { // Old operators, need to be converted to new format.\r\n                    operatorObject = instrumentObject[\"operators\"][j];\r\n                    if (operatorObject == undefined) operatorObject = {};\r\n\r\n                    let operatorIndex: number = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                    if (operatorIndex == -1) {\r\n                        operator.frequency = 1;\r\n                        operator.hzOffset = 0;\r\n                        operator.invert = false;\r\n                    } else {\r\n                        operator.frequency = Config.operatorFrequencies[operatorIndex].mult;\r\n                        operator.hzOffset = Config.operatorFrequencies[operatorIndex].hzOffset;\r\n                        operator.invert = Config.operatorFrequencies[operatorIndex].amplitudeSign == 1.0 ? false : true;\r\n                    }\r\n                    if (operatorObject[\"amplitude\"] != undefined) {\r\n                        operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                    } else {\r\n                        operator.amplitude = 0;\r\n                    }\r\n                    if (operatorObject[\"waveform\"] != undefined) {\r\n                        operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                        if (operator.waveform == -1) {\r\n                            // GoldBox compatibility\r\n                            if (operatorObject[\"waveform\"] == \"square\") {\r\n                                operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\r\n                                operator.pulseWidth = 5;\r\n                            } else {\r\n                                operator.waveform = 0;\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        operator.waveform = 0;\r\n                    }\r\n                    if (operatorObject[\"pulseWidth\"] != undefined) {\r\n                        operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\r\n                    } else {\r\n                        operator.pulseWidth = 5;\r\n                    }\r\n                } if (instrumentObject[\"newOperators\"] != undefined) { // New operators\r\n                    operatorObject = instrumentObject[\"operators\"][j];\r\n                    if (operatorObject == undefined) operatorObject = {};\r\n\r\n                    if (operatorObject[\"frequency\"] != undefined) {\r\n                        operator.frequency = operatorObject[\"frequency\"];\r\n                    } else {\r\n                        operator.frequency = 1;\r\n                    }\r\n                    if (operatorObject[\"hzOffset\"] != undefined) {\r\n                        operator.hzOffset = operatorObject[\"hzOffset\"];\r\n                    } else {\r\n                        operator.hzOffset = 0;\r\n                    }\r\n                    if (operatorObject[\"invert\"] != undefined) {\r\n                        operator.invert = operatorObject[\"invert\"];\r\n                    } else {\r\n                        operator.invert = false;\r\n                    }\r\n                    if (operatorObject[\"amplitude\"] != undefined) {\r\n                        operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                    } else {\r\n                        operator.amplitude = 0;\r\n                    }\r\n                    if (operatorObject[\"waveform\"] != undefined) {\r\n                        operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                        if (operator.waveform == -1) {\r\n                            // GoldBox compatibility\r\n                            if (operatorObject[\"waveform\"] == \"square\") {\r\n                                operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\r\n                                operator.pulseWidth = 5;\r\n                            } else {\r\n                                operator.waveform = 0;\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        operator.waveform = 0;\r\n                    }\r\n                    operator.hzOffset = Config.operatorFrequencies[Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"])].hzOffset;\r\n                    operator.invert = Config.operatorFrequencies[Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"])].amplitudeSign == 1.0 ? true : false;\r\n                    if (operatorObject[\"pulseWidth\"] != undefined) {\r\n                        operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\r\n                    } else {\r\n                        operator.pulseWidth = 5;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    // Due to an oversight, this isn't included in JSONs prior to JB 2.6.\r\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\r\n                        this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"aliases\"] != undefined) {\r\n                this.aliases = instrumentObject[\"aliases\"];\r\n            }\r\n            else {\r\n                this.aliases = false;\r\n            }\r\n\r\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\r\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\r\n            }\r\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\r\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\r\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\r\n            }\r\n            if (instrumentObject[\"noteFilter\"] != undefined) {\r\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\r\n            } else {\r\n                this.noteFilter.reset();\r\n            }\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\r\n                    this.noteSubFilters[i] = new FilterSettings();\r\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\r\n                }\r\n            }\r\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\r\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\r\n            }\r\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\r\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\r\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\r\n            }\r\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\r\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\r\n            } else {\r\n                this.eqFilter.reset();\r\n\r\n                const legacySettings: LegacySettings = {};\r\n\r\n                // Try converting from legacy filter settings.\r\n                const filterCutoffMaxHz: number = 8000;\r\n                const filterCutoffRange: number = 11;\r\n                const filterResonanceRange: number = 8;\r\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\r\n                } else {\r\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n                }\r\n                if (instrumentObject[\"filterResonance\"] != undefined) {\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n                } else {\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\r\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\r\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\r\n                if (Array.isArray(instrumentObject[\"operators\"])) {\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                        let envelope: Envelope | undefined;\r\n                        if (instrumentObject[\"operators\"][j] != undefined) {\r\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\r\n                        }\r\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\r\n                    }\r\n                }\r\n\r\n                // Try converting from even older legacy filter settings.\r\n                if (instrumentObject[\"filter\"] != undefined) {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n                    if (legacyFilter == -1) legacyFilter = 0;\r\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                this.convertLegacySettings(legacySettings, true);\r\n            }\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\r\n                    this.eqSubFilters[i] = new FilterSettings();\r\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\r\n                }\r\n            }\r\n\r\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\r\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\r\n                for (let i = 0; i < envelopeArray.length; i++) {\r\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\r\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\r\n                    tempEnvelope.fromJsonObject(envelopeArray[i]);\r\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public getLargestControlPointCount(forNoteFilter: boolean) {\r\n        let largest: number;\r\n        if (forNoteFilter) {\r\n            largest = this.noteFilter.controlPointCount;\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i]!.controlPointCount > largest)\r\n                    largest = this.noteSubFilters[i]!.controlPointCount;\r\n            }\r\n        }\r\n        else {\r\n            largest = this.eqFilter.controlPointCount;\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i]!.controlPointCount > largest)\r\n                    largest = this.eqSubFilters[i]!.controlPointCount;\r\n            }\r\n        }\r\n        return largest;\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public addEnvelope(target: number, index: number, envelope: number): void {\r\n        let makeEmpty: boolean = false;\r\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\r\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\r\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\r\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\r\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\r\n        envelopeSettings.index = makeEmpty ? 0 : index;\r\n        envelopeSettings.envelope = envelope;\r\n        this.envelopeCount++;\r\n    }\r\n\r\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\r\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\r\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n        if (index >= automationTarget.maxCount) {\r\n            return false;\r\n        }\r\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\r\n            return false;\r\n        }\r\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\r\n            return false;\r\n        }\r\n        if (automationTarget.isFilter) {\r\n            //if (automationTarget.perNote) {\r\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\r\n            if (this.noteFilterType)\r\n                useControlPointCount = 1;\r\n            if (index >= useControlPointCount) return false;\r\n            //} else {\r\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\r\n            //}\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public clearInvalidEnvelopeTargets(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\r\n            const target: number = this.envelopes[envelopeIndex].target;\r\n            const index: number = this.envelopes[envelopeIndex].index;\r\n            if (!this.supportsEnvelopeTarget(target, index)) {\r\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                this.envelopes[envelopeIndex].index = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\r\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\r\n    }\r\n\r\n    public getFadeInSeconds(): number {\r\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\r\n    }\r\n\r\n    public getFadeOutTicks(): number {\r\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\r\n    }\r\n\r\n    public getChord(): Chord {\r\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\r\n    }\r\n\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = \"Dogebox2\";\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 9;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 6;\r\n    private static readonly _oldestDogebox2Version: number = 1;\r\n    private static readonly _latestDogebox2Version: number = 3;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox or in this case, Dogebox2.\r\n    private static readonly _variant = 0x64; //\"d\" ~ Dogebox2\r\n\r\n    public title: string;\r\n    public scale: number;\r\n    public key: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public layeredInstruments: boolean;\r\n    public patternInstruments: boolean;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\r\n\r\n            // For tempo, actually use user defined tempo\r\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\r\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\r\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\r\n            }\r\n\r\n            if (vol != undefined)\r\n                return vol;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\r\n            let modulator = Config.modulators[instrument.modulators[modCount]];\r\n            let cap: number | undefined = modulator.maxRawVol;\r\n\r\n            if (cap != undefined) {\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n                return cap;\r\n            }\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\r\n        if (!isMod)\r\n            return Config.noteSizeMax;\r\n        else {\r\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\r\n            if (cap != undefined) {\r\n\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (filterType > 0 && filterType % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (filterType > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n\r\n                return cap;\r\n            }\r\n            else\r\n                return Config.noteSizeMax;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getMaxInstrumentsPerChannel(): number {\r\n        return Math.max(\r\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\r\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\r\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\r\n        return this.layeredInstruments\r\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\r\n            : 1;\r\n    }\r\n\r\n    public getChannelIsNoise(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.key = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 150;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 1;\r\n        this.layeredInstruments = false;\r\n        this.patternInstruments = false;\r\n\r\n        this.title = \"Unnamed\";\r\n        document.title = EditorConfig.versionDisplayName;\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\r\n\r\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = Config.instrumentCountMin;\r\n\r\n                for (let bar: number = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n        buffer.push(base64IntToCharCode[Song._latestDogebox2Version]);\r\n\r\n        // Length of the song name string\r\n        buffer.push(SongTagCode.songTitle);\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\r\n        if (this.layeredInstruments || this.patternInstruments) {\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\r\n        }\r\n\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\r\n                buffer.push(SongTagCode.eqFilter);\r\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\r\n                if (instrument.eqFilterType) {\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\r\n                }\r\n                else {\r\n                    if (instrument.eqFilter == null) {\r\n                        // Push null filter settings\r\n                        buffer.push(base64IntToCharCode[0]);\r\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                    } else {\r\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\r\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\r\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                        }\r\n                    }\r\n\r\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                    let usingSubFilterBitfield: number = 0;\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\r\n                    }\r\n                    // Put subfilter usage into 2 chars (12 bits)\r\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                    // Put subfilter info in for all used subfilters\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        if (usingSubFilterBitfield & (1 << j)) {\r\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\r\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\r\n                buffer.push(\r\n                    SongTagCode.effects,\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 5)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 4)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 3)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 2)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 1)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 0)) & 63]\r\n                );\r\n                if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\r\n                    if (instrument.noteFilterType) {\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\r\n                    }\r\n                    else {\r\n                        if (instrument.noteFilter == null) {\r\n                            // Push null filter settings\r\n                            buffer.push(base64IntToCharCode[0]);\r\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                        }\r\n                        else {\r\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\r\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n\r\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        let usingSubFilterBitfield: number = 0;\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\r\n                        }\r\n                        // Put subfilter usage into 2 chars (12 bits)\r\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                        // Put subfilter info in for all used subfilters\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            if (usingSubFilterBitfield & (1 << j)) {\r\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\r\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\r\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (effectsIncludeTransition(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.transition]);\r\n                }\r\n                if (effectsIncludeChord(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chord]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\r\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                }\r\n                if (effectsIncludePitchShift(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\r\n                }\r\n                if (effectsIncludeDetune(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\r\n                }\r\n                if (effectsIncludeVibrato(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                }\r\n                if (effectsIncludeDistortion(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\r\n                    // Aliasing is tied into distortion for now\r\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\r\n                }\r\n                if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\r\n                }\r\n                if (effectsIncludePanning(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\r\n                }\r\n                if (effectsIncludeChorus(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\r\n                }\r\n                if (effectsIncludeEcho(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\r\n                }\r\n                if (effectsIncludeReverb(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\r\n                }\r\n\r\n                if (effectsIncludeNoteRange(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.upperNoteLimit >> 6], base64IntToCharCode[instrument.upperNoteLimit & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.lowerNoteLimit >> 6], base64IntToCharCode[instrument.lowerNoteLimit & 0x3f]);\r\n                }\r\n\r\n                if (effectsIncludeInvertWave(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[+instrument.invertWave]);\r\n                }\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                } else if (instrument.type == InstrumentType.fm) {\r\n                    buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                    buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        //push the frequency\r\n                        let cleanFrequency = Math.round(instrument.operators[o].frequency * 4);\r\n                        buffer.push(base64IntToCharCode[cleanFrequency >> 6], base64IntToCharCode[cleanFrequency & 0x3f]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorHzOffsets);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        //push a sign bit\r\n                        buffer.push(base64IntToCharCode[Number((instrument.operators[o].hzOffset > 0))]);\r\n\r\n                        //push the absolute value of the hzOffset\r\n                        let cleanHzOffset = Math.round(Math.abs(instrument.operators[o].hzOffset) * 10);\r\n                        buffer.push(base64IntToCharCode[cleanHzOffset >> 6], base64IntToCharCode[cleanHzOffset & 0x3f]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorInverts);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[+instrument.operators[o].invert]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.operatorWaves);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\r\n                        // Push pulse width if that type is used\r\n                        if (instrument.operators[o].waveform == 3) {\r\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\r\n                        }\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.drumsetEnvelopes);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\r\n                } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\r\n                    if (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\r\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\r\n\t\t\t\t\t}\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                } else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n\r\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\r\n                // Added in JB v6: Options for envelopes come next.\r\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\r\n                buffer.push(base64IntToCharCode[+instrument.discreteEnvelope]);\r\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\r\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\r\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\r\n                    }\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modulators[mod];\r\n                        const modFilter: number = instrument.modFilterTypes[mod];\r\n\r\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                        // 0 - For pitch/noise\r\n                        // 1 - (used to be For noise, not needed)\r\n                        // 2 - For song\r\n                        // 3 - None\r\n\r\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\r\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\r\n                            status = 3;\r\n\r\n                        bits.write(2, status);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (status == 0 || status == 1) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\r\n                        }\r\n\r\n                        // Only used if setting isn't \"none\".\r\n                        if (status != 3) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n\r\n                        // Write mod filter info, only if this is a filter mod\r\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\r\n                            bits.write(6, modFilter);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\r\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n            const recentShapes: string[] = [];\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of channel.patterns) {\r\n                if (this.patternInstruments) {\r\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\r\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\r\n                    for (let i: number = 0; i < instrumentCount; i++) {\r\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\r\n                    }\r\n                }\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(bitsPerNoteSize, pin.size);\r\n                            } else {\r\n                                shapeBits.write(9, pin.size);\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n\r\n                        if (note.start == 0) {\r\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\r\n                        }\r\n\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\r\n        const maxApplyArgs: number = 64000;\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists.\r\n            return String.fromCharCode.apply(null, buffer);\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\r\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\r\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\r\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\r\n    }\r\n\r\n    public fromBase64String(compressed: string): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        let fromBeepBox: boolean;\r\n        let fromJummBox: boolean;\r\n        let fromDogebox: boolean;\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n            if (variantTest == 0x6A) { //\"j\"\r\n                fromBeepBox = false;\r\n                fromJummBox = true;\r\n                fromDogebox = false;\r\n                charIndex++;\r\n            } else if (variantTest == 0x64) { //\"d\"\r\n                fromBeepBox = false;\r\n                fromJummBox = false;\r\n                fromDogebox = true;\r\n                charIndex++;\r\n            } else {\r\n                fromBeepBox = true;\r\n                fromJummBox = false;\r\n                fromDogebox = false;\r\n            }\r\n\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n        if (fromDogebox && (version == -1 || version > Song._latestDogebox2Version || version < Song._oldestDogebox2Version)) return;\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        const beforeNine: boolean = version < 9;\r\n        this.initToDefault((fromBeepBox && beforeNine) || (fromJummBox && beforeFive));\r\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\r\n\r\n        if (beforeThree && fromBeepBox) {\r\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) {\r\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\r\n                channel.instruments[0].effects |= 1 << EffectType.transition;\r\n            }\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let legacySettingsCache: LegacySettings[][] | null = null;\r\n        if ((fromBeepBox && beforeNine) || (fromJummBox && beforeFive)) {\r\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\r\n            // filter-and-envelope-related parameters in the URL, and none of them directly\r\n            // correspond to the new way of saving these parameters. We can approximate the old\r\n            // settings by collecting all the old settings for an instrument and passing them to\r\n            // convertLegacySettings(), so I use this data structure to collect the settings\r\n            // for each instrument if necessary.\r\n            legacySettingsCache = [];\r\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\r\n                legacySettingsCache[i] = [];\r\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\r\n            }\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let command: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (fromBeepBox || (beforeTwo && fromJummBox)) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                } else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n                if ((fromBeepBox && beforeNine) || (fromJummBox && beforeFive)) {\r\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\r\n                        legacySettingsCache![i] = [];\r\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (fromBeepBox) this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && fromBeepBox) {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && fromBeepBox) {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else if ((beforeFive && fromJummBox)) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else {\r\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channelIndex].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                let patternsPerChannel: number;\r\n                if (beforeEight && fromBeepBox) {\r\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\r\n                const channelCount: number = this.getChannelCount();\r\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\r\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\r\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        patterns[pattern] = new Pattern();\r\n                    }\r\n                    patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                    this.layeredInstruments = false;\r\n                    this.patternInstruments = (instrumentsPerChannel > 1);\r\n\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\r\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\r\n                        if (beforeSix && fromBeepBox) {\r\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                            }\r\n                        }\r\n\r\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\r\n                            legacySettingsCache![channelIndex][j] = {};\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\r\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        let instrumentCount: number = 1;\r\n                        if (this.layeredInstruments || this.patternInstruments) {\r\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                        }\r\n                        const channel: Channel = this.channels[channelIndex];\r\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\r\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        channel.instruments.length = instrumentCount;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                this.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n                if ((fromJummBox && beforeThree) || fromBeepBox) {\r\n                    // These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n                    if (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6\"].index) {\r\n                        useSlowerArpSpeed = true;\r\n                    }\r\n                    // Use faster two note arp on these rhythms\r\n                    if (this.rhythm >= Config.rhythms.dictionary[\"÷6\"].index) {\r\n                        useFastTwoNoteArp = true;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                } else if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                    }\r\n                } else {\r\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = 0;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // JB before v5 had custom chip and mod before pickedString and supersaw were added. Index +2.\r\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if ((fromJummBox && beforeFive) || (fromDogebox && beforeTwo)) {\r\n                    if (instrumentType == InstrumentType.pickedString || instrumentType == InstrumentType.supersaw) {\r\n                        instrumentType += 2;\r\n                    }\r\n                }\r\n                // Similar story here, JB before v5 had custom chip and mod before supersaw was added. Index +1.\r\n                else if ((fromJummBox && beforeSix) || (fromDogebox && beforeTwo)) {\r\n                    if (instrumentType == InstrumentType.supersaw || instrumentType == InstrumentType.customChipWave) {\r\n                        instrumentType += 1;\r\n                    }\r\n                }\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\r\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\r\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\r\n                    instrument.aliases = true;\r\n                    instrument.distortion = 0;\r\n                    instrument.effects |= 1 << EffectType.distortion;\r\n                }\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n\r\n                if (beforeSeven && fromBeepBox) {\r\n                    instrument.effects = 0;\r\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\r\n                if ((fromJummBox && beforeFive)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\r\n                    }\r\n                }\r\n                // Similar story, supersaw is also before custom chip (and mod, but mods can't have presets).\r\n                else if ((fromJummBox && beforeSix) || (fromDogebox && beforeTwo)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.supersaw) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\r\n                    }\r\n                }\r\n                // BeepBox directly tweaked \"grand piano\", but JB kept it the same. The most up to date version is now \"grand piano 3\"\r\n                if ( fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\") ) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset =  EditorConfig.nameToPresetValue(\"grand piano 3\")!;\r\n                }\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\r\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\r\n                    // just waves, so initialize them here I guess.\r\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\r\n\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            if (channelIndex >= this.pitchChannelCount) {\r\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == InstrumentType.noise) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.eqFilter: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                    if (channelIndex < this.pitchChannelCount) {\r\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                                    } else {\r\n                                        legacySettings.filterCutoff = 10;\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\r\n                                    }\r\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        }\r\n                    } else {\r\n                        const filterCutoffRange: number = 11;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    if (fromBeepBox || typeCheck == 0) {\r\n                        instrument.eqFilterType = false;\r\n                        if (fromJummBox || fromDogebox)\r\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\r\n                        const originalControlPointCount: number = typeCheck;\r\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\r\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\r\n                        }\r\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\r\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\r\n                            charIndex += 3;\r\n                        }\r\n\r\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\r\n                        if ((fromJummBox && !beforeFive) || (fromDogebox)) {\r\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                if (usingSubFilterBitfield & (1 << j)) {\r\n                                    // Number of control points\r\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                    if (instrument.eqSubFilters[j + 1] == null)\r\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\r\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                    }\r\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\r\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    }\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                        charIndex += 3;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        instrument.eqFilterType = true;\r\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    const filterResonanceRange: number = 8;\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.drumsetEnvelopes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    if (instrument.type == InstrumentType.drumset) {\r\n                        for (let i: number = 0; i < Config.drumCount; i++) {\r\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]).index;\r\n                        }\r\n                    } else {\r\n                        // This used to be used for general filter envelopes.\r\n                        // The presence of an envelope affects how convertLegacySettings\r\n                        // decides the closest possible approximation, so update it.\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    // This tag is now only used for drumset filter envelopes.\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)), base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if (fromBeepBox) {\r\n                    // BeepBox formula\r\n                    instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\r\n\r\n                }\r\n\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n            } break;\r\n\t\t\tcase SongTagCode.supersaw: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tinstrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n            case SongTagCode.stringSustain: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\r\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\r\n            } break;\r\n            case SongTagCode.fadeInOut: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    // this tag was used for a combination of transition and fade in/out.\r\n                    const legacySettings = [\r\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                    ];\r\n                    if (beforeThree && fromBeepBox) {\r\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else if (beforeSix && fromBeepBox) {\r\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                            for (const instrument of this.channels[channelIndex].instruments) {\r\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                                    // Enable transition if it was used.\r\n                                    instrument.effects |= 1 << EffectType.transition;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (beforeFour || fromBeepBox) {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n\r\n                        // Read tie-note\r\n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\r\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\r\n                            instrument.legacyTieOver = true;\r\n\r\n                        }\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (fromJummBox || fromDogebox)\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 3, 2, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    instrument.vibrato = legacyEffects[effect];\r\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                        // Imitate the legacy tremolo with a filter envelope.\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                    }\r\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                        // Enable vibrato if it was used.\r\n                                        instrument.effects |= 1 << EffectType.vibrato;\r\n                                    }\r\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive))) && !this.getChannelIsNoise(channelIndex)) {\r\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                        instrument.effects |= 1 << EffectType.reverb;\r\n                                        instrument.reverb = legacyGlobalReverb;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive))) {\r\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                instrument.effects |= 1 << EffectType.reverb;\r\n                                instrument.reverb = legacyGlobalReverb;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibrato = vibrato;\r\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                            // Enable vibrato if it was used.\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Custom vibrato\r\n                        if (vibrato == Config.vibratos.length) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                // Deprecated, but supported for legacy purposes\r\n                if ((fromJummBox && beforeFive)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n                }\r\n                else {\r\n                    // Do nothing, deprecated for now\r\n                }\r\n            } break;\r\n            case SongTagCode.unison: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                unison = 2;\r\n                                instrument.chord = 3;\r\n                            }\r\n                            instrument.unison = unison;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        unison = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.chord: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\r\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive))) {\r\n                        // Disable reverb if legacy song reverb was zero.\r\n                        instrument.effects &= ~(1 << EffectType.reverb);\r\n                    } else if (effectsIncludeReverb(instrument.effects)) {\r\n                        instrument.reverb = legacyGlobalReverb;\r\n                    }\r\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\r\n                    //if (instrument.pan != Config.panCenter) {\r\n                    instrument.effects |= 1 << EffectType.panning;\r\n                    //}\r\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                        // Enable vibrato if it was used.\r\n                        instrument.effects |= 1 << EffectType.vibrato;\r\n                    }\r\n                    if (instrument.detune != Config.detuneCenter) {\r\n                        // Enable detune if it was used.\r\n                        instrument.effects |= 1 << EffectType.detune;\r\n                    }\r\n                    if (instrument.aliases)\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    else\r\n                        instrument.effects &= ~(1 << EffectType.distortion);\r\n\r\n                    // convertLegacySettings may need to force-enable note filter, call\r\n                    // it again here to make sure that this override takes precedence.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // BeepBox currently uses six base64 characters at 6 bits each for a bitfield representing all the enabled effects.\r\n                    if (EffectType.length > 32) throw new Error();\r\n                    instrument.effects = (\r\n                        (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5))\r\n                        | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4))\r\n                        | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3))\r\n                        | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2))\r\n                        | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1))\r\n                        | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0))\r\n                        ) >>> 0;\r\n\r\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if (fromBeepBox || typeCheck == 0) {\r\n                            instrument.noteFilterType = false;\r\n                            if (fromJummBox || fromDogebox)\r\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\r\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\r\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\r\n                            }\r\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\r\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            }\r\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\r\n                                charIndex += 3;\r\n                            }\r\n\r\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\r\n                            if ((fromJummBox && !beforeFive) || (fromDogebox)) {\r\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                    if (usingSubFilterBitfield & (1 << j)) {\r\n                                        // Number of control points\r\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                        if (instrument.noteSubFilters[j + 1] == null)\r\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\r\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                        }\r\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\r\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        }\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                            charIndex += 3;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            instrument.noteFilterType = true;\r\n                            instrument.noteFilter.reset();\r\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        }\r\n                    }\r\n                    if (effectsIncludeTransition(instrument.effects)) {\r\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeChord(instrument.effects)) {\r\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\r\n                        if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox||fromDogebox)) {\r\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                        }\r\n                    }\r\n                    if (effectsIncludePitchShift(instrument.effects)) {\r\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeDetune(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Convert from BeepBox's formula\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\r\n                        } else {\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeVibrato(instrument.effects)) {\r\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        // Custom vibrato\r\n                        if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromDogebox)) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                    if (effectsIncludeDistortion(instrument.effects)) {\r\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if ((fromJummBox && !beforeFive) || fromDogebox)\r\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    }\r\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludePanning(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                        }\r\n                        else {\r\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n\r\n                        // Now, pan delay follows on new versions of jummbox.\r\n                        if ((fromJummBox && !beforeTwo) || fromDogebox)\r\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                    if (effectsIncludeChorus(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // BeepBox has 4 chorus values vs. JB's 8\r\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\r\n                        }\r\n                        else {\r\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeEcho(instrument.effects)) {\r\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeReverb(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\r\n                        } else {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeNoteRange(instrument.effects)) {\r\n                        instrument.upperNoteLimit = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        instrument.lowerNoteLimit = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n\r\n                    if (effectsIncludeInvertWave(instrument.effects)) {\r\n                        instrument.invertWave = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false);\r\n                    }\r\n                }\r\n                // Clamp the range.\r\n                instrument.effects &= (1 << EffectType.length) - 1;\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (fromBeepBox) {\r\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.pan: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\r\n                } else if ((beforeFive && fromJummBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // Pan delay follows on v3 + v4\r\n                    if (fromJummBox && !beforeThree || fromDogebox) {\r\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if ((fromJummBox && beforeFive)) {\r\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\r\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\r\n                    instrument.effects |= 1 << EffectType.detune;\r\n                } else {\r\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\r\n                }\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    this.restoreLimiterDefaults();\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour && fromJummBox)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n            } break;\r\n            case SongTagCode.feedbackType: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                if ((fromBeepBox) || (fromJummBox) || (beforeThree && fromDogebox)) {\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        let operatorIndex: number = Config.operatorFrequencies.findIndex(freq => freq.name == clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]).toString());\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = Config.operatorFrequencies[operatorIndex].mult;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].hzOffset = Config.operatorFrequencies[operatorIndex].hzOffset;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].invert = Config.operatorFrequencies[operatorIndex].amplitudeSign == 1.0 ? false : true;\r\n                    }\r\n                } else {\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        const operatorFrequency: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, 100 + 1, operatorFrequency / 4);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorHzOffsets: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    const operatorHzOffsetsSignBit = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const operatorHzOffsets: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].hzOffset = clamp(-200 - 1, 200 + 1, operatorHzOffsets / 10);\r\n                    if (operatorHzOffsetsSignBit == 0) this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].hzOffset *= -1;\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorInverts: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].invert = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.envelopes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // JB v6 adds some envelope options here in the sequence.\r\n                    if ((fromJummBox && !beforeSix) || (fromDogebox && !beforeTwo)) {\r\n                        instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.discreteEnvelope = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    }\r\n                    for (let i: number = 0; i < envelopeCount; i++) {\r\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        let index: number = 0;\r\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\r\n                        if (maxCount > 1) {\r\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        const envelope: number = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.addEnvelope(target, index, envelope);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorWaves: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // Pulse width follows, if it is a pulse width operator wave\r\n                    if (instrument.operators[o].waveform == 3) {\r\n                        instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.aliases: {\r\n                if ((fromJummBox && beforeFive)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    if (instrument.aliases) {\r\n                        instrument.distortion = 0;\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    }\r\n                } else {\r\n                    // Do nothing, deprecated\r\n                }\r\n            }\r\n                break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && fromBeepBox) {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channelIndex: number;\r\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\r\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n                let recentPitchLength: number = (largerChords ? 16 : 8);\r\n                if (beforeThree && fromBeepBox) {\r\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channelIndex = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength); \r\n                charIndex += bitStringLength;\r\n\r\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n                let songReverbChannel: number = -1;\r\n                let songReverbInstrument: number = -1;\r\n                let songReverbIndex: number = -1;\r\n\r\n                while (true) {\r\n                    const channel: Channel = this.channels[channelIndex];\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n\r\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n\r\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n\r\n                        // 2 more indices for 'all' and 'active'\r\n                        const neededModInstrumentIndexBits: number = (beforeFive && fromJummBox) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                                // 0 - For pitch/noise\r\n                                // 1 - (used to be For noise, not needed)\r\n                                // 2 - For song\r\n                                // 3 - None\r\n                                let status: number = bits.read(2);\r\n\r\n                                switch (status) {\r\n                                    case 0: // Pitch\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\r\n                                        break;\r\n                                    case 1: // Noise\r\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\r\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\r\n                                        break;\r\n                                    case 2: // For song\r\n                                        instrument.modChannels[mod] = -1;\r\n                                        break;\r\n                                    case 3: // None\r\n                                        instrument.modChannels[mod] = -2;\r\n                                        break;\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (status != 3) {\r\n                                    instrument.modulators[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (((!beforeFive && fromJummBox) || fromDogebox) && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\r\n                                    instrument.modFilterTypes[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if ((beforeFive && fromJummBox) && instrument.modChannels[mod] >= 0) {\r\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\r\n\r\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\r\n                                    if (instrument.modulators[mod] == 7) {\r\n                                        // Legacy filter cut index\r\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\r\n\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\r\n\r\n                                    }\r\n                                    else if (instrument.modulators[mod] == 8) {\r\n                                        // Legacy filter peak index\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\r\n                                    }\r\n                                }\r\n                                else if (beforeFive && fromJummBox) {\r\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\r\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\r\n                                        songReverbChannel = channelIndex;\r\n                                        songReverbInstrument = instrumentIndex;\r\n                                        songReverbIndex = mod;\r\n                                    }\r\n                                }\r\n\r\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\r\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\r\n                                // keeping the mod invalid is better since it preserves the state.\r\n                                if ((beforeFive && fromJummBox) && Config.modulators[instrument.modulators[mod]].associatedEffect != 14) {\r\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\r\n                    const detuneScaleNotes: number[][] = [];\r\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\r\n                        detuneScaleNotes[j] = [];\r\n                        for (let i: number = 0; i < Config.modCount; i++) {\r\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\r\n                        }\r\n                    }\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = channel.patterns[i];\r\n\r\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\r\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\r\n                            newPattern.instruments.length = 1;\r\n                        } else {\r\n                            if (this.patternInstruments) {\r\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\r\n                                for (let j: number = 0; j < instrumentCount; j++) {\r\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\r\n                                }\r\n                                newPattern.instruments.length = instrumentCount;\r\n                            } else {\r\n                                newPattern.instruments[0] = 0;\r\n                                newPattern.instruments.length = Config.instrumentCountMin;\r\n                            }\r\n                        }\r\n\r\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\r\n                            newPattern.notes.length = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        let noteCount: number = 0;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && fromBeepBox)\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n\r\n                                    shape.pinCount = bits.readPinCount();\r\n                                    if (fromBeepBox) {\r\n                                        shape.initialSize = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\r\n                                    } else {\r\n                                        shape.initialSize = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        let pinObj: any = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && fromBeepBox)\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n                                        if (fromBeepBox) {\r\n                                            pinObj.size = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.size = bits.read(bitsPerNoteSize);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.size = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\r\n\r\n                                let note: Note;\r\n                                if (newNotes.length <= noteCount) {\r\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\r\n                                    newNotes[noteCount++] = note;\r\n                                } else {\r\n                                    note = newNotes[noteCount++];\r\n                                    note.start = curPart;\r\n                                    note.end = curPart + shape.length;\r\n                                    note.pins[0].size = shape.initialSize;\r\n                                }\r\n\r\n                                let pitch: number;\r\n                                let pitchCount: number = 0;\r\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches[pitchCount++] = pitch;\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n                                note.pitches.length = pitchCount;\r\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\r\n                                if (isModChannel) {\r\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                }\r\n                                let pinCount: number = 1;\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n\r\n                                    const interval: number = pitchBends[0] - note.pitches[0];\r\n                                    if (note.pins.length <= pinCount) {\r\n                                        if (isModChannel) {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]]);\r\n                                        } else {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\r\n                                        }\r\n                                    } else {\r\n                                        const pin: NotePin = note.pins[pinCount++];\r\n                                        pin.interval = interval;\r\n                                        pin.time = pinObj.time;\r\n                                        if (isModChannel) {\r\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                        } else {\r\n                                            pin.size = pinObj.size;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                note.pins.length = pinCount;\r\n\r\n                                if (note.start == 0) {\r\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox))) {\r\n                                        note.continuesLastPattern = (bits.read(1) == 1);\r\n                                    } else {\r\n                                        if (beforeFour || fromBeepBox) {\r\n                                            note.continuesLastPattern = false;\r\n                                        } else {\r\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                            }\r\n                        }\r\n                        newNotes.length = noteCount;\r\n                    }\r\n\r\n                    if (beforeThree && fromBeepBox) {\r\n                        break;\r\n                    } else {\r\n                        channelIndex++;\r\n                        if (channelIndex >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n\r\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\r\n                if (((fromJummBox && beforeFive)) && songReverbIndex >= 0) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            if (effectsIncludeReverb(instrument.effects)) {\r\n                                instrument.reverb = Config.reverbRange - 1;\r\n                            }\r\n                            // Set song reverb via mod to the old setting at song start.\r\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\r\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\r\n                                if (patternIndex > 0) {\r\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\r\n                                    // Add note to start of pattern\r\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\r\n                                    let lowestPart: number = 6;\r\n                                    for (const note of pattern.notes) {\r\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\r\n                                            lowestPart = Math.min(lowestPart, note.start);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (lowestPart > 0) {\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Add pattern\r\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\r\n                                        const pattern: Pattern = new Pattern();\r\n                                        this.channels[channelIndex].patterns.push(pattern);\r\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\r\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\r\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\r\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\r\n                                                    this.channels[chn].patterns.push(new Pattern());\r\n                                                }\r\n                                            }\r\n                                            this.patternsPerChannel++;\r\n                                        }\r\n                                        pattern.instruments.length = 1;\r\n                                        pattern.instruments[0] = songReverbInstrument;\r\n                                        pattern.notes.length = 0;\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n            } break;\r\n        }\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            for (const instrument of channel.instruments) {\r\n                instrumentArray.push(instrument.toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of channel.patterns) {\r\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n\r\n            const channelObject: any = {\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"name\": channel.name,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            };\r\n            if (!isNoiseChannel) {\r\n                // For compatibility with old versions the octave is offset by one.\r\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\r\n            }\r\n            channelArray.push(channelObject);\r\n        }\r\n\r\n        return {\r\n            \"name\": this.title,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestDogebox2Version,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            \"masterGain\": this.masterGain,\r\n            \"compressionThreshold\": this.compressionThreshold,\r\n            \"limitThreshold\": this.limitThreshold,\r\n            \"limitDecay\": this.limitDecay,\r\n            \"limitRise\": this.limitRise,\r\n            \"limitRatio\": this.limitRatio,\r\n            \"compressionRatio\": this.compressionRatio,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            \"layeredInstruments\": this.layeredInstruments,\r\n            \"patternInstruments\": this.patternInstruments,\r\n            \"channels\": channelArray,\r\n        };\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n\t\t\t\t\"romani :)\": \"double harmonic :)\",\r\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\r\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\r\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                const letter: string = key.charAt(0).toUpperCase();\r\n                const symbol: string = key.charAt(1).toLowerCase();\r\n                const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                let index: number | undefined = letterMap[letter];\r\n                const offset: number | undefined = accidentalMap[symbol];\r\n                if (index != undefined) {\r\n                    if (offset != undefined) index += offset;\r\n                    if (index < 0) index += 12;\r\n                    index = index % 12;\r\n                    this.key = index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        // Read limiter settings. Ranges and defaults are based on slider settings\r\n\r\n        if (jsonObject[\"masterGain\"] != undefined) {\r\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\r\n        } else {\r\n            this.masterGain = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitThreshold\"] != undefined) {\r\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.limitThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\r\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRise\"] != undefined) {\r\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRise = 4000.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitDecay\"] != undefined) {\r\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\r\n        }\r\n        else {\r\n            this.limitDecay = 4.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRatio\"] != undefined) {\r\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRatio = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionRatio\"] != undefined) {\r\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionRatio = 1.0;\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\r\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\r\n        } else {\r\n            this.layeredInstruments = false;\r\n        }\r\n        if (jsonObject[\"patternInstruments\"] != undefined) {\r\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\r\n        } else {\r\n            this.patternInstruments = (maxInstruments > 1);\r\n        }\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\r\n                    if (isNoiseChannel) channel.octave = 0;\r\n                }\r\n\r\n                if (channelObject[\"name\"] != undefined) {\r\n                    channel.name = channelObject[\"name\"];\r\n                }\r\n                else {\r\n                    channel.name = \"\";\r\n                }\r\n\r\n                if (Array.isArray(channelObject[\"instruments\"])) {\r\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\r\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n                        channel.instruments[i] = instrument;\r\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb);\r\n                    }\r\n\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = new Pattern();\r\n                    channel.patterns[i] = pattern;\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel);\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n    }\r\n\r\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channelIndex].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n    public static getNeededBits(maxValue: number): number {\r\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\r\n    }\r\n\r\n    public restoreLimiterDefaults(): void {\r\n        this.compressionRatio = 1.0;\r\n        this.limitRatio = 1.0;\r\n        this.limitRise = 4000.0;\r\n        this.limitDecay = 4.0;\r\n        this.limitThreshold = 1.0;\r\n        this.compressionThreshold = 1.0;\r\n        this.masterGain = 1.0;\r\n    }\r\n}\r\n\r\nclass PickedString {\r\n    public delayLine: Float32Array | null = null;\r\n    public delayIndex: number;\r\n    public allPassSample: number;\r\n    public allPassPrevInput: number;\r\n    public sustainFilterSample: number;\r\n\tpublic sustainFilterPrevOutput2: number;\r\n\tpublic sustainFilterPrevInput1: number;\r\n\tpublic sustainFilterPrevInput2: number;\r\n    public fractionalDelaySample: number;\r\n    public prevDelayLength: number;\r\n    public delayLengthDelta: number;\r\n    public delayResetOffset: number;\r\n\r\n    public allPassG: number = 0.0;\r\n    public allPassGDelta: number = 0.0;\r\n   public sustainFilterA1: number = 0.0;\r\n\tpublic sustainFilterA1Delta: number = 0.0;\r\n\tpublic sustainFilterA2: number = 0.0;\r\n\tpublic sustainFilterA2Delta: number = 0.0;\r\n\tpublic sustainFilterB0: number = 0.0;\r\n\tpublic sustainFilterB0Delta: number = 0.0;\r\n\tpublic sustainFilterB1: number = 0.0;\r\n\tpublic sustainFilterB1Delta: number = 0.0;\r\n\tpublic sustainFilterB2: number = 0.0;\r\n\tpublic sustainFilterB2Delta: number = 0.0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.delayIndex = -1;\r\n        this.allPassSample = 0.0;\r\n        this.allPassPrevInput = 0.0;\r\n        this.sustainFilterSample = 0.0;\r\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\r\n\t\tthis.sustainFilterPrevInput1 = 0.0;\r\n\t\tthis.sustainFilterPrevInput2 = 0.0;\r\n        this.fractionalDelaySample = 0.0;\r\n        this.prevDelayLength = -1.0;\r\n        this.delayResetOffset = 0;\r\n    }\r\n\r\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\r\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\r\n\r\n        const prevDelayLength: number = this.prevDelayLength;\r\n\r\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\r\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\r\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\r\n\r\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\r\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\r\n\r\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\r\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\r\n\r\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\r\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\r\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\r\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\r\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\r\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\r\n\t\tconst registerShelfCenter: number = 15.6;\r\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\r\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\r\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\r\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\r\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\r\n\r\n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\r\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\r\n\r\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n        // 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\r\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\r\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\r\n\t\tconst enum PickedStringBrightnessType {\r\n\t\t\tbright, // 1st order shelf\r\n\t\t\tnormal, // 2nd order lowpass, rounded corner\r\n\t\t\tresonant, // 3rd order lowpass, harder corner\r\n\t\t}\r\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\r\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\r\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\r\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\r\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\r\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\r\n\t\t} else {\r\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\r\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\r\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\r\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\r\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\r\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\r\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\r\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\r\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\r\n\t\t}\r\n\r\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\r\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\r\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\r\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\r\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\r\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\r\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\r\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\r\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\r\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\r\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\r\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\r\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\r\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\r\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\r\n\r\n\t\tthis.prevDelayLength = delayLength;\r\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\r\n\t\tthis.allPassG = allPassGStart;\r\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\r\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\r\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\r\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\r\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\r\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\r\n\r\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\r\n\r\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\r\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\r\n            // The delay line buffer will get reused for other tones so might as well\r\n            // start off with a buffer size that is big enough for most notes.\r\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\r\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n            if (!reinitializeImpulse && this.delayLine != null) {\r\n                // If the tone has already started but the buffer needs to be reallocated,\r\n                // transfer the old data to the new buffer.\r\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\r\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\r\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\r\n                for (let i: number = 0; i < this.delayLine.length; i++) {\r\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n                }\r\n            }\r\n            this.delayLine = newDelayLine;\r\n        }\r\n        const delayLine: Float32Array = this.delayLine;\r\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\r\n        if (reinitializeImpulse) {\r\n            // -1 delay index means the tone was reset.\r\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\r\n\r\n            this.delayIndex = 0;\r\n            this.allPassSample = 0.0;\r\n            this.allPassPrevInput = 0.0;\r\n            this.sustainFilterSample = 0.0;\r\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\r\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\r\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\r\n            this.fractionalDelaySample = 0.0;\r\n\r\n            // Clear away a region of the delay buffer for the new impulse.\r\n            const startImpulseFrom: number = -delayLength;\r\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\r\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\r\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\r\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\r\n                delayLine[i & delayBufferMask] = 0.0;\r\n            }\r\n\r\n            const impulseWave: Float32Array = instrumentState.wave!;\r\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\r\n\r\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\r\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\r\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\r\n            const stopImpulseAtSample: number = stopImpulseAt;\r\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\r\n            let prevWaveIntegral: number = 0.0;\r\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\r\n                const impulsePhaseInt: number = impulsePhase | 0;\r\n                const index: number = impulsePhaseInt % impulseWaveLength;\r\n                let nextWaveIntegral: number = impulseWave[index];\r\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\r\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\r\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\r\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\r\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\r\n                const combinedFade: number = fadeIn * fadeOut;\r\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\r\n                delayLine[i & delayBufferMask] += sample * curvedFade;\r\n                prevWaveIntegral = nextWaveIntegral;\r\n                impulsePhase += impulsePhaseDelta;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EnvelopeComputer {\r\n    public noteSecondsStart: number = 0.0;\r\n    public noteSecondsEnd: number = 0.0;\r\n    public noteTicksStart: number = 0.0;\r\n    public noteTicksEnd: number = 0.0;\r\n    public noteSizeStart: number = Config.noteSizeMax;\r\n    public noteSizeEnd: number = Config.noteSizeMax;\r\n    public prevNoteSize: number = Config.noteSizeMax;\r\n    public nextNoteSize: number = Config.noteSizeMax;\r\n    private _noteSizeFinal: number = Config.noteSizeMax;\r\n    public prevNoteSecondsStart: number = 0.0;\r\n    public prevNoteSecondsEnd: number = 0.0;\r\n    public prevNoteTicksStart: number = 0.0;\r\n    public prevNoteTicksEnd: number = 0.0;\r\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\r\n\r\n    public prevSlideStart: boolean = false;\r\n    public prevSlideEnd: boolean = false;\r\n    public nextSlideStart: boolean = false;\r\n    public nextSlideEnd: boolean = false;\r\n    public prevSlideRatioStart: number = 0.0;\r\n    public prevSlideRatioEnd: number = 0.0;\r\n    public nextSlideRatioStart: number = 0.0;\r\n    public nextSlideRatioEnd: number = 0.0;\r\n\r\n    public readonly envelopeStarts: number[] = [];\r\n    public readonly envelopeEnds: number[] = [];\r\n    private readonly _modifiedEnvelopeIndices: number[] = [];\r\n    private _modifiedEnvelopeCount: number = 0;\r\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n\r\n    constructor(/*private _perNote: boolean*/) {\r\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\r\n        const length: number = EnvelopeComputeIndex.length;\r\n        for (let i: number = 0; i < length; i++) {\r\n            this.envelopeStarts[i] = 1.0;\r\n            this.envelopeEnds[i] = 1.0;\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noteSecondsEnd = 0.0;\r\n        this.noteTicksEnd = 0.0;\r\n        this._noteSizeFinal = Config.noteSizeMax;\r\n        this.prevNoteSecondsEnd = 0.0;\r\n        this.prevNoteTicksEnd = 0.0;\r\n        this._prevNoteSizeFinal = Config.noteSizeMax;\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, tickTimeStartReal: number, secondsPerTick: number, tone: Tone | null, timeScale: number): void {\r\n        secondsPerTick *= timeScale;\r\n        const transition: Transition = instrument.getTransition();\r\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\r\n            this.prevNoteTicksEnd = this.noteTicksEnd;\r\n            this._prevNoteSizeFinal = this._noteSizeFinal;\r\n            this.noteSecondsEnd = 0.0;\r\n            this.noteTicksEnd = 0.0;\r\n        }\r\n        if (tone != null) {\r\n            if (tone.note != null) {\r\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\r\n            } else {\r\n                this._noteSizeFinal = Config.noteSizeMax;\r\n            }\r\n        }\r\n        const tickTimeEnd: number = tickTimeStart + timeScale;\r\n        const tickTimeEndReal: number = tickTimeStartReal + 1.0;\r\n        const noteSecondsStart: number = this.noteSecondsEnd;\r\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\r\n        const noteTicksStart: number = this.noteTicksEnd;\r\n        const noteTicksEnd: number = noteTicksStart + 1.0;\r\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\r\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\r\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\r\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\r\n\r\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\r\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\r\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\r\n\r\n        let noteSizeStart: number = this._noteSizeFinal;\r\n        let noteSizeEnd: number = this._noteSizeFinal;\r\n        let prevNoteSize: number = this._prevNoteSizeFinal;\r\n        let nextNoteSize: number = 0;\r\n        let prevSlideStart: boolean = false;\r\n        let prevSlideEnd: boolean = false;\r\n        let nextSlideStart: boolean = false;\r\n        let nextSlideEnd: boolean = false;\r\n        let prevSlideRatioStart: number = 0.0;\r\n        let prevSlideRatioEnd: number = 0.0;\r\n        let nextSlideRatioStart: number = 0.0;\r\n        let nextSlideRatioEnd: number = 0.0;\r\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\r\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\r\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\r\n\r\n            if (transition.slides) {\r\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\r\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\r\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n                const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\r\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\r\n                        prevSlideStart = true;\r\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\r\n                    }\r\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\r\n                        prevSlideEnd = true;\r\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\r\n                    }\r\n                }\r\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\r\n                    nextNoteSize = tone.nextNote.pins[0].size\r\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\r\n                        nextSlideStart = true;\r\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\r\n                    }\r\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\r\n                        nextSlideEnd = true;\r\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n        let usedNoteSize: boolean = false;\r\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\r\n            let automationTarget: AutomationTarget;\r\n            let targetIndex: number;\r\n            let envelope: Envelope;\r\n            if (envelopeIndex == instrument.envelopeCount) {\r\n                if (usedNoteSize /*|| !this._perNote*/) break;\r\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\r\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n                targetIndex = 0;\r\n                envelope = Config.envelopes.dictionary[\"note size\"];\r\n            } else {\r\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\r\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\r\n                targetIndex = envelopeSettings.index;\r\n                envelope = Config.envelopes[envelopeSettings.envelope];\r\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\r\n            }\r\n            if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\r\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\r\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\r\n                if (prevSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\r\n                }\r\n                if (nextSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\r\n                }\r\n                let envelopeEnd: number = envelopeStart;\r\n                if (instrument.discreteEnvelope == false) {\r\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\r\n                    if (prevSlideEnd) {\r\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\r\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\r\n                    }\r\n                    if (nextSlideEnd) {\r\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\r\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\r\n                    }\r\n                }\r\n                // const customEnvelopeTest: CustomEnvelope = new CustomEnvelope();\r\n                // const computeIndex: number = automationTarget.computeIndex + targetIndex;\r\n                // let envelopeStart: number = EnvelopeComputer.computeCustomEnvelope(customEnvelopeTest, noteSecondsStart, beatTimeStart, noteSizeStart);\r\n                // if (prevSlideStart) {\r\n                //     const other: number = EnvelopeComputer.computeCustomEnvelope(customEnvelopeTest, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\r\n                //     envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\r\n                // }\r\n                // if (nextSlideStart) {\r\n                //     const other: number = EnvelopeComputer.computeCustomEnvelope(customEnvelopeTest, 0.0, beatTimeStart, nextNoteSize);\r\n                //     envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\r\n                // }\r\n                // let envelopeEnd: number = envelopeStart;\r\n                // if (instrument.discreteEnvelope == false) {\r\n                //     envelopeEnd = EnvelopeComputer.computeCustomEnvelope(customEnvelopeTest, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\r\n                //     if (prevSlideEnd) {\r\n                //         const other: number = EnvelopeComputer.computeCustomEnvelope(customEnvelopeTest, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\r\n                //         envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\r\n                //     }\r\n                //     if (nextSlideEnd) {\r\n                //         const other: number = EnvelopeComputer.computeCustomEnvelope(customEnvelopeTest, 0.0, beatTimeEnd, nextNoteSize);\r\n                //         envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\r\n                //     }\r\n                // }\r\n\r\n                this.envelopeStarts[computeIndex] *= envelopeStart;\r\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\r\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\r\n\r\n                if (automationTarget.isFilter) {\r\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\r\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\r\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.noteSecondsStart = noteSecondsStart;\r\n        this.noteSecondsEnd = noteSecondsEnd;\r\n        this.noteTicksStart = noteTicksStart;\r\n        this.noteTicksEnd = noteTicksEnd;\r\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\r\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\r\n        this.prevNoteTicksStart = prevNoteTicksStart;\r\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\r\n        this.prevNoteSize = prevNoteSize;\r\n        this.nextNoteSize = nextNoteSize;\r\n        this.noteSizeStart = noteSizeStart;\r\n        this.noteSizeEnd = noteSizeEnd;\r\n        this.prevSlideStart = prevSlideStart;\r\n        this.prevSlideEnd = prevSlideEnd;\r\n        this.nextSlideStart = nextSlideStart;\r\n        this.nextSlideEnd = nextSlideEnd;\r\n        this.prevSlideRatioStart = prevSlideRatioStart;\r\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\r\n        this.nextSlideRatioStart = nextSlideRatioStart;\r\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\r\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\r\n    }\r\n\r\n    public clearEnvelopes(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\r\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\r\n            this.envelopeStarts[computeIndex] = 1.0;\r\n            this.envelopeEnds[computeIndex] = 1.0;\r\n        }\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\r\n            case EnvelopeType.none: return 1.0;\r\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\r\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.blip: return 1.0 * +(time < (0.25 / Math.sqrt(envelope.speed)));\r\n            case EnvelopeType.spike: const adjust: number = Math.log(envelope.speed)/25; return Math.max(0, Math.min(1, 1.0 - Math.abs((time- adjust)*envelope.speed - 0.5) * 2));\r\n            case EnvelopeType.clap: const mirrors: number = 5; return ((mirrors)/(1+time*envelope.speed*5)) % 1;\r\n            case EnvelopeType.blippy: return Math.round(0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5);\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n\r\n    }\r\n\r\n    public static computeCustomEnvelope(customEnvelope: CustomEnvelope, time: number, beats: number, noteSize: number): number {\r\n        switch (customEnvelope.endType) {\r\n            case CustomEnvelopeEndType.decay:\r\n                return 0;\r\n            case CustomEnvelopeEndType.repeat:\r\n                return customEnvelope.interpolate ? this.arrayInterp(customEnvelope.data, time%customEnvelope.data.length) : customEnvelope.data[(Math.round(time))%customEnvelope.data.length];\r\n            case CustomEnvelopeEndType.pingPong:\r\n                return 0;\r\n            case CustomEnvelopeEndType.stay:\r\n                if (time>=customEnvelope.data.length) {\r\n                    return customEnvelope.data[customEnvelope.data.length-1];\r\n                } else {\r\n                    return customEnvelope.interpolate ? this.arrayInterp(customEnvelope.data, time) : customEnvelope.data[Math.round(time)];\r\n                }\r\n            default:\r\n                throw new Error(\"Unrecognized envelope end type.\");\r\n        }\r\n    }\r\n\r\n    public static arrayInterp(values: number[], softIndex: number): number {\r\n        if (values.length < 2) {\r\n          throw new Error(\"Linear interpolation requires at least two values in the array.\");\r\n        }\r\n\r\n        // Ensure softIndex is within bounds\r\n        softIndex = Math.max(0, Math.min(values.length - 1, softIndex));\r\n\r\n        // Find the two values between which the softIndex falls\r\n        const lowerIndex = Math.floor(softIndex);\r\n        const upperIndex = Math.ceil(softIndex);\r\n\r\n        const lowerValue = values[lowerIndex];\r\n        const upperValue = values[upperIndex];\r\n\r\n        // Perform linear interpolation\r\n        const t = softIndex - lowerIndex;\r\n        return lowerValue + t * (upperValue - lowerValue);\r\n      }\r\n\r\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\r\n        // This is a little hokey in the details, but I designed it a while ago and keep it\r\n        // around for compatibility. This decides how much to increase the volume (or\r\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\r\n        // volume overall.\r\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\r\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * envelope.speed;\r\n        return 1.0;\r\n    }\r\n}\r\n\r\nclass Tone {\r\n    public instrumentIndex: number;\r\n    public readonly pitches: number[] = Array(Config.maxChordSize).fill(0);\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number | null = null;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public freshlyAllocated: boolean = true;\r\n    public atNoteStart: boolean = false;\r\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\r\n    public passedEndOfNote: boolean = false;\r\n    public forceContinueAtStart: boolean = false;\r\n    public forceContinueAtEnd: boolean = false;\r\n    public noteStartPart: number = 0;\r\n    public noteEndPart: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public noiseSample: number = 0.0;\r\n    public stringSustainStart: number = 0;\r\n    public stringSustainEnd: number = 0;\r\n    public readonly phases: number[] = [];\r\n    public readonly operatorWaves: OperatorWave[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n    public readonly phaseDeltaScales: number[] = [];\r\n    public expression: number = 0.0;\r\n    public expressionDelta: number = 0.0;\r\n    public readonly operatorExpressions: number[] = [];\r\n    public readonly operatorExpressionDeltas: number[] = [];\r\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\r\n    public prevVibrato: number | null = null;\r\n    public prevStringDecay: number | null = null;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public supersawDynamism: number = 0.0;\r\n\tpublic supersawDynamismDelta: number = 0.0;\r\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\r\n\tpublic supersawShape: number = 0.0;\r\n\tpublic supersawShapeDelta: number = 0.0;\r\n\tpublic supersawDelayLength: number = 0.0;\r\n\tpublic supersawDelayLengthDelta: number = 0.0;\r\n\tpublic supersawDelayLine: Float32Array | null = null;\r\n\tpublic supersawDelayIndex: number = -1;\r\n\tpublic supersawPrevPhaseDelta: number | null = null;\r\n    public readonly pickedStrings: PickedString[] = [];\r\n\r\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\r\n    public noteFilterCount: number = 0;\r\n    public initialNoteFilterInput1: number = 0.0;\r\n    public initialNoteFilterInput2: number = 0.0;\r\n\r\n    public specialIntervalExpressionMult: number = 1.0;\r\n    public readonly feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noiseSample = 0.0;\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n            this.operatorWaves[i] = Config.operatorWaves[0];\r\n            this.feedbackOutputs[i] = 0.0;\r\n            this.prevPitchExpressions[i] = null;\r\n        }\r\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\r\n            this.noteFilters[i].resetOutput();\r\n        }\r\n        this.noteFilterCount = 0;\r\n        this.initialNoteFilterInput1 = 0.0;\r\n        this.initialNoteFilterInput2 = 0.0;\r\n        this.liveInputSamplesHeld = 0;\r\n        this.supersawDelayIndex = -1;\r\n        for (const pickedString of this.pickedStrings) {\r\n            pickedString.reset();\r\n        }\r\n        this.envelopeComputer.reset();\r\n        this.prevVibrato = null;\r\n        this.prevStringDecay = null;\r\n        this.supersawPrevPhaseDelta = null;\r\n        this.drumsetPitch = null;\r\n    }\r\n}\r\n\r\nclass InstrumentState {\r\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\r\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\r\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\r\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\r\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\r\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\r\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\r\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\r\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\r\n\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public synthesizer: Function | null = null;\r\n    public wave: Float32Array | null = null;\r\n    public noisePitchFilterMult: number = 1.0;\r\n    public unison: Unison | null = null;\r\n    public chord: Chord | null = null;\r\n    public effects: number = 0;\r\n\r\n    public volumeScale: number = 0;\r\n    public aliases: boolean = false;\r\n    public arpTime: number = 0;\r\n    public vibratoTime: number = 0;\r\n    public nextVibratoTime: number = 0;\r\n    public envelopeTime: number = 0;\r\n\r\n    public eqFilterVolume: number = 1.0;\r\n    public eqFilterVolumeDelta: number = 0.0;\r\n    public mixVolume: number = 1.0;\r\n    public mixVolumeDelta: number = 0.0;\r\n    public delayInputMult: number = 0.0;\r\n    public delayInputMultDelta: number = 0.0;\r\n\r\n    public distortion: number = 0.0;\r\n    public distortionDelta: number = 0.0;\r\n    public distortionDrive: number = 0.0;\r\n    public distortionDriveDelta: number = 0.0;\r\n    public distortionFractionalInput1: number = 0.0;\r\n    public distortionFractionalInput2: number = 0.0;\r\n    public distortionFractionalInput3: number = 0.0;\r\n    public distortionPrevInput: number = 0.0;\r\n    public distortionNextOutput: number = 0.0;\r\n\r\n    public bitcrusherPrevInput: number = 0.0;\r\n    public bitcrusherCurrentOutput: number = 0.0;\r\n    public bitcrusherPhase: number = 1.0;\r\n    public bitcrusherPhaseDelta: number = 0.0;\r\n    public bitcrusherPhaseDeltaScale: number = 1.0;\r\n    public bitcrusherScale: number = 1.0;\r\n    public bitcrusherScaleScale: number = 1.0;\r\n    public bitcrusherFoldLevel: number = 1.0;\r\n    public bitcrusherFoldLevelScale: number = 1.0;\r\n\r\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\r\n    public eqFilterCount: number = 0;\r\n    public initialEqFilterInput1: number = 0.0;\r\n    public initialEqFilterInput2: number = 0.0;\r\n\r\n    public panningDelayLine: Float32Array | null = null;\r\n    public panningDelayPos: number = 0;\r\n    public panningVolumeL: number = 0.0;\r\n    public panningVolumeR: number = 0.0;\r\n    public panningVolumeDeltaL: number = 0.0;\r\n    public panningVolumeDeltaR: number = 0.0;\r\n    public panningOffsetL: number = 0.0;\r\n    public panningOffsetR: number = 0.0;\r\n    public panningOffsetDeltaL: number = 0.0;\r\n    public panningOffsetDeltaR: number = 0.0;\r\n\r\n    public chorusDelayLineL: Float32Array | null = null;\r\n    public chorusDelayLineR: Float32Array | null = null;\r\n    public chorusDelayLineDirty: boolean = false;\r\n    public chorusDelayPos: number = 0;\r\n    public chorusPhase: number = 0;\r\n    public chorusVoiceMult: number = 0;\r\n    public chorusVoiceMultDelta: number = 0;\r\n    public chorusCombinedMult: number = 0;\r\n    public chorusCombinedMultDelta: number = 0;\r\n\r\n    public echoDelayLineL: Float32Array | null = null;\r\n    public echoDelayLineR: Float32Array | null = null;\r\n    public echoDelayLineDirty: boolean = false;\r\n    public echoDelayPos: number = 0;\r\n    public echoDelayOffsetStart: number = 0;\r\n    public echoDelayOffsetEnd: number | null = null;\r\n    public echoDelayOffsetRatio: number = 0.0;\r\n    public echoDelayOffsetRatioDelta: number = 0.0;\r\n    public echoMult: number = 0.0;\r\n    public echoMultDelta: number = 0.0;\r\n    public echoShelfA1: number = 0.0;\r\n    public echoShelfB0: number = 0.0;\r\n    public echoShelfB1: number = 0.0;\r\n    public echoShelfSampleL: number = 0.0;\r\n    public echoShelfSampleR: number = 0.0;\r\n    public echoShelfPrevInputL: number = 0.0;\r\n    public echoShelfPrevInputR: number = 0.0;\r\n\r\n    public reverbDelayLine: Float32Array | null = null;\r\n    public reverbDelayLineDirty: boolean = false;\r\n    public reverbDelayPos: number = 0;\r\n    public reverbMult: number = 0.0;\r\n    public reverbMultDelta: number = 0.0;\r\n    public reverbShelfA1: number = 0.0;\r\n    public reverbShelfB0: number = 0.0;\r\n    public reverbShelfB1: number = 0.0;\r\n    public reverbShelfSample0: number = 0.0;\r\n    public reverbShelfSample1: number = 0.0;\r\n    public reverbShelfSample2: number = 0.0;\r\n    public reverbShelfSample3: number = 0.0;\r\n    public reverbShelfPrevInput0: number = 0.0;\r\n    public reverbShelfPrevInput1: number = 0.0;\r\n    public reverbShelfPrevInput2: number = 0.0;\r\n    public reverbShelfPrevInput3: number = 0.0;\r\n\r\n    public invertWave: boolean = false;\r\n\r\n    //public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(false);\r\n\r\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\r\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\r\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\r\n\r\n    constructor() {\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\r\n        }\r\n    }\r\n\r\n\r\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\r\n        if (effectsIncludePanning(instrument.effects)) {\r\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\r\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeChorus(instrument.effects)) {\r\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeEcho(instrument.effects)) {\r\n            // account for tempo and delay automation changing delay length during a tick?\r\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\r\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\r\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\r\n\r\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\r\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\r\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\r\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\r\n                // The echo delay length may change whlie the song is playing if tempo changes,\r\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\r\n                // so we need to copy the contents of the old buffer to the new one.\r\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const oldMask: number = this.echoDelayLineL.length - 1;\r\n\r\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\r\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                }\r\n\r\n                this.echoDelayPos = this.echoDelayLineL.length;\r\n                this.echoDelayLineL = newDelayLineL;\r\n                this.echoDelayLineR = newDelayLineR;\r\n            }\r\n        }\r\n        if (effectsIncludeReverb(instrument.effects)) {\r\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\r\n            if (this.reverbDelayLine == null) {\r\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.bitcrusherPrevInput = 0.0;\r\n        this.bitcrusherCurrentOutput = 0.0;\r\n        this.bitcrusherPhase = 1.0;\r\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\r\n            this.eqFilters[i].resetOutput();\r\n        }\r\n        this.eqFilterCount = 0;\r\n        this.initialEqFilterInput1 = 0.0;\r\n        this.initialEqFilterInput2 = 0.0;\r\n        this.distortionFractionalInput1 = 0.0;\r\n        this.distortionFractionalInput2 = 0.0;\r\n        this.distortionFractionalInput3 = 0.0;\r\n        this.distortionPrevInput = 0.0;\r\n        this.distortionNextOutput = 0.0;\r\n        this.panningDelayPos = 0;\r\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\r\n        this.echoDelayOffsetEnd = null;\r\n        this.echoShelfSampleL = 0.0;\r\n        this.echoShelfSampleR = 0.0;\r\n        this.echoShelfPrevInputL = 0.0;\r\n        this.echoShelfPrevInputR = 0.0;\r\n        this.reverbShelfSample0 = 0.0;\r\n        this.reverbShelfSample1 = 0.0;\r\n        this.reverbShelfSample2 = 0.0;\r\n        this.reverbShelfSample3 = 0.0;\r\n        this.reverbShelfPrevInput0 = 0.0;\r\n        this.reverbShelfPrevInput1 = 0.0;\r\n        this.reverbShelfPrevInput2 = 0.0;\r\n        this.reverbShelfPrevInput3 = 0.0;\r\n\r\n        this.volumeScale = 1.0;\r\n        this.aliases = false;\r\n\r\n        this.awake = false;\r\n        this.flushingDelayLines = false;\r\n        this.deactivateAfterThisTick = false;\r\n        this.attentuationProgress = 0.0;\r\n        this.flushedSamples = 0;\r\n    }\r\n\r\n    public resetAllEffects(): void {\r\n        this.deactivate();\r\n        // LFOs are reset here rather than in deactivate() for periodic oscillation that stays \"on the beat\". Resetting in deactivate() will cause it to reset with each note.\r\n        this.vibratoTime = 0;\r\n        this.nextVibratoTime = 0;\r\n        this.arpTime = 0;\r\n        this.envelopeTime = 0;\r\n\r\n        if (this.chorusDelayLineDirty) {\r\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.echoDelayLineDirty) {\r\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.reverbDelayLineDirty) {\r\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\r\n        }\r\n\r\n        this.chorusPhase = 0.0;\r\n    }\r\n\r\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\r\n        this.computed = true;\r\n\r\n        this.invertWave = instrument.invertWave;\r\n\r\n        this.type = instrument.type;\r\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\r\n        this.unison = Config.unisons[instrument.unison];\r\n        this.chord = instrument.getChord();\r\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\r\n        this.effects = instrument.effects;\r\n\r\n        this.aliases = instrument.aliases;\r\n        this.volumeScale = 1.0;\r\n\r\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\r\n\r\n        const samplesPerSecond: number = synth.samplesPerSecond;\r\n        this.updateWaves(instrument, samplesPerSecond);\r\n\r\n        //const ticksIntoBar: number = synth.getTicksIntoBar();\r\n        //const tickTimeStart: number = ticksIntoBar;\r\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\r\n        //const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\r\n        //const currentPart: number = synth.getCurrentPart();\r\n        //this.envelopeComputer.computeEnvelopes(instrument, currentPart, tickTimeStart, secondsPerTick, tone);\r\n        //const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\r\n        //const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\r\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\r\n\r\n        if (usesDistortion) {\r\n            let useDistortionStart: number = instrument.distortion;\r\n            let useDistortionEnd: number = instrument.distortion;\r\n\r\n            // Check for distortion mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\r\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\r\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const distortionSliderStart = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ useDistortionStart / (Config.distortionRange - 1));\r\n            const distortionSliderEnd = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ useDistortionEnd / (Config.distortionRange - 1));\r\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\r\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\r\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\r\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\r\n            this.distortion = distortionStart;\r\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\r\n            this.distortionDrive = distortionDriveStart;\r\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesBitcrusher) {\r\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n\r\n            // Check for freq crush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\r\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\r\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n\r\n            // Check for bitcrush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\r\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\r\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const basePitch: number = Config.keys[synth.song!.key].basePitch; // TODO: What if there's a key change mid-song?\r\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\r\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\r\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\r\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\r\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\r\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\r\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\r\n            this.bitcrusherScale = scaleStart;\r\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\r\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\r\n            this.bitcrusherFoldLevel = foldLevelStart;\r\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\r\n        }\r\n\r\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (instrument.eqFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\r\n            if (instrument.eqSubFilters[1] == null)\r\n                instrument.eqSubFilters[1] = new FilterSettings();\r\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\r\n\r\n            let filterChanges: boolean = false;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            let startPoint: FilterControlPoint;\r\n\r\n            if (filterChanges) {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\r\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            } else {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            }\r\n\r\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            this.eqFilterCount = 1;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n        else {\r\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\r\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\r\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\r\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\r\n\r\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                if (startPoint.type != endPoint.type) {\r\n                    startPoint = endPoint;\r\n                }\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\r\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\r\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            }\r\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n\r\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\r\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\r\n\r\n        // Check for mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\r\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\r\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\r\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n        }\r\n\r\n        // Check for SONG mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\r\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\r\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\r\n        }\r\n\r\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\r\n\r\n        let eqFilterVolumeStart: number = eqFilterVolume;\r\n        let eqFilterVolumeEnd: number = eqFilterVolume;\r\n        let delayInputMultStart: number = 1.0;\r\n        let delayInputMultEnd: number = 1.0;\r\n\r\n        if (usesPanning) {\r\n            //const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\r\n            //const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\r\n\r\n            let usePanStart: number = instrument.pan;\r\n            let usePanEnd: number = instrument.pan;\r\n            // Check for pan mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\r\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\r\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let panStart: number = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter /** panEnvelopeStart*/));\r\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter /** panEnvelopeEnd  */));\r\n\r\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\r\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\r\n\r\n            let usePanDelayStart: number = instrument.panDelay;\r\n            let usePanDelayEnd: number = instrument.panDelay;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\r\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\r\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\r\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\r\n            const delayStartL: number = Math.max(0.0, delayStart);\r\n            const delayStartR: number = Math.max(0.0, -delayStart);\r\n            const delayEndL: number = Math.max(0.0, delayEnd);\r\n            const delayEndR: number = Math.max(0.0, -delayEnd);\r\n\r\n            this.panningVolumeL = volumeStartL;\r\n            this.panningVolumeR = volumeStartR;\r\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\r\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\r\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\r\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\r\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\r\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesChorus) {\r\n            //const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\r\n            //const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\r\n            let useChorusStart: number = instrument.chorus;\r\n            let useChorusEnd: number = instrument.chorus;\r\n            // Check for chorus mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\r\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\r\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ useChorusStart / (Config.chorusRange - 1));\r\n            let chorusEnd: number = Math.min(1.0, /*chorusEnvelopeEnd   **/ useChorusEnd / (Config.chorusRange - 1));\r\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\r\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\r\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\r\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\r\n            this.chorusVoiceMult = chorusStart;\r\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\r\n            this.chorusCombinedMult = chorusCombinedMultStart;\r\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        let maxEchoMult = 0.0;\r\n        let averageEchoDelaySeconds: number = 0.0;\r\n        if (usesEcho) {\r\n            //const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\r\n            //const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\r\n            let useEchoSustainStart: number = instrument.echoSustain;\r\n            let useEchoSustainEnd: number = instrument.echoSustain;\r\n            // Check for echo mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\r\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\r\n            }\r\n            const echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\r\n            const echoMultEnd: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\r\n            this.echoMult = echoMultStart;\r\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\r\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\r\n\r\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\r\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\r\n            // part) boundaries to interpolate between two delay taps.\r\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\r\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\r\n            let useEchoDelayStart: number = instrument.echoDelay;\r\n            let useEchoDelayEnd: number = instrument.echoDelay;\r\n            let ignoreTicks: boolean = false;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\r\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\r\n                ignoreTicks = true;\r\n            }\r\n\r\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\r\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\r\n            } else {\r\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\r\n            }\r\n\r\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\r\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\r\n\r\n            this.echoDelayOffsetRatio = 0.0;\r\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\r\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        let maxReverbMult = 0.0;\r\n        if (usesReverb) {\r\n            //const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\r\n            //const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\r\n\r\n            let useReverbStart: number = instrument.reverb;\r\n            let useReverbEnd: number = instrument.reverb;\r\n\r\n            // Check for mod reverb, instrument level\r\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\r\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            // Check for mod reverb, song scalar\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n            }\r\n\r\n            const reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ useReverbStart / Config.reverbRange, 0.667)) * 0.425;\r\n            const reverbEnd: number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\r\n\r\n            this.reverbMult = reverbStart;\r\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\r\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\r\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        if (this.tonesAddedInThisTick) {\r\n            this.attentuationProgress = 0.0;\r\n            this.flushedSamples = 0;\r\n            this.flushingDelayLines = false;\r\n        } else if (!this.flushingDelayLines) {\r\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\r\n            // end of the first tick. It's possible for filters and the panning delay line to\r\n            // continue past the end of the tone but they should have mostly dissipated by the\r\n            // end of the tick anyway.\r\n            if (this.attentuationProgress == 0.0) {\r\n                eqFilterVolumeEnd = 0.0;\r\n            } else {\r\n                eqFilterVolumeStart = 0.0;\r\n                eqFilterVolumeEnd = 0.0;\r\n            }\r\n\r\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\r\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\r\n            let delayDuration: number = 0.0;\r\n\r\n            if (usesChorus) {\r\n                delayDuration += Config.chorusMaxDelay;\r\n            }\r\n\r\n            if (usesEcho) {\r\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const echoDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += echoDuration;\r\n            }\r\n\r\n            if (usesReverb) {\r\n                const averageMult: number = maxReverbMult * 2.0;\r\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\r\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const reverbDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += reverbDuration;\r\n            }\r\n\r\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\r\n            const progressInTick: number = secondsInTick / delayDuration;\r\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\r\n            if (progressAtEndOfTick >= 1.0) {\r\n                delayInputMultEnd = 0.0;\r\n            }\r\n\r\n            this.attentuationProgress = progressAtEndOfTick;\r\n            if (this.attentuationProgress >= 1.0) {\r\n                this.flushingDelayLines = true;\r\n            }\r\n        } else {\r\n            // Flushing delay lines to zero since the signal has mostly dissipated.\r\n            eqFilterVolumeStart = 0.0;\r\n            eqFilterVolumeEnd = 0.0;\r\n            delayInputMultStart = 0.0;\r\n            delayInputMultEnd = 0.0;\r\n\r\n            let totalDelaySamples: number = 0;\r\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\r\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\r\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\r\n\r\n            this.flushedSamples += roundedSamplesPerTick;\r\n            if (this.flushedSamples >= totalDelaySamples) {\r\n                this.deactivateAfterThisTick = true;\r\n            }\r\n        }\r\n\r\n        this.eqFilterVolume = eqFilterVolumeStart;\r\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\r\n        this.delayInputMult = delayInputMultStart;\r\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\r\n    }\r\n\r\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\r\n        this.volumeScale = 1.0;\r\n        if (instrument.type == InstrumentType.chip) {\r\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\r\n            this.volumeScale = 0.05;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n            this.wave = null;\r\n        } else {\r\n            this.wave = null;\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].wave!;\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\r\n        }\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\r\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\r\n    }\r\n}\r\n\r\nclass ChannelState {\r\n    public readonly instruments: InstrumentState[] = [];\r\n    public muted: boolean = false;\r\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n}\r\n\r\nexport class Synth {\r\n\r\n    private syncSongState(): void {\r\n        const channelCount: number = this.song!.getChannelCount();\r\n        for (let i: number = this.channels.length; i < channelCount; i++) {\r\n            this.channels[i] = new ChannelState();\r\n        }\r\n        this.channels.length = channelCount;\r\n        for (let i: number = 0; i < channelCount; i++) {\r\n            const channel: Channel = this.song!.channels[i];\r\n            const channelState: ChannelState = this.channels[i];\r\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\r\n                channelState.instruments[j] = new InstrumentState();\r\n            }\r\n            channelState.instruments.length = channel.instruments.length;\r\n\r\n            if (channelState.muted != channel.muted) {\r\n                channelState.muted = channel.muted;\r\n                if (channelState.muted) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        instrumentState.resetAllEffects();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public initModFilters(song: Song | null): void {\r\n        if (song != null) {\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                    instrument.tmpEqFilterEnd = null;\r\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                    instrument.tmpNoteFilterEnd = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            this.syncSongState();\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    Synth.getInstrumentSynthFunction(instrument);\r\n                    instrumentState.vibratoTime = 0;\r\n                    instrumentState.nextVibratoTime = 0;\r\n                    instrumentState.envelopeTime = 0;\r\n                    instrumentState.arpTime = 0;\r\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\r\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\r\n                }\r\n\r\n            }\r\n        }\r\n        // JummBox needs to run synth functions for at least one sample (for JIT purposes)\r\n\t\t// before starting audio callbacks to avoid skipping the initial output.\r\n        var dummyArray = new Float32Array(1);\r\n        this.isPlayingSong = true;\r\n        this.synthesize(dummyArray, dummyArray, 1, true);\r\n        this.isPlayingSong = false;\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            this.heldMods = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n\r\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\r\n                if (!(this.song.channels[channelIndex].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channelIndex, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = pattern.instruments[0];\r\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.start == partsInBar) { // This can happen with next bar mods, and the value of the aligned note's start pin will be used.\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\r\n                                    }\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\r\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        // Generate list of used instruments\r\n                                        let usedInstruments: number[] = [];\r\n                                        // All\r\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                                                usedInstruments.push(i);\r\n                                            }\r\n                                        }\r\n                                        // Active\r\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\r\n                                            if (tgtPattern != null)\r\n                                                usedInstruments = tgtPattern.instruments;\r\n                                        } else {\r\n                                            usedInstruments.push(instrument.modInstruments[mod]);\r\n                                        }\r\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n                                            // Iterate through all used instruments by this modulator\r\n                                            // Special indices for mod filter targets, since they control multiple things.\r\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\r\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                            let modulatorAdjust: number = instrument.modulators[mod];\r\n                                            if (eqFilterParam) {\r\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\r\n                                            } else if (noteFilterParam) {\r\n                                                // Skip all possible indices for eq filter\r\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\r\n                                            }\r\n\r\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\r\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\r\n\r\n                                                if (eqFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\r\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\r\n                                                } else if (noteFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\r\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\r\n                                                }\r\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\r\n\r\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\r\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\r\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\r\n    public determineInvalidModulators(instrument: Instrument): void {\r\n        if (this.song == null)\r\n            return;\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n            instrument.invalidModulators[mod] = true;\r\n            // For song modulator, valid if any setting used\r\n            if (instrument.modChannels[mod] == -1) {\r\n                if (instrument.modulators[mod] != 0)\r\n                    instrument.invalidModulators[mod] = false;\r\n                continue;\r\n            }\r\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\r\n            if (channel == null) continue;\r\n            let tgtInstrumentList: Instrument[] = [];\r\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\r\n                tgtInstrumentList = channel.instruments;\r\n            } else {\r\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\r\n            }\r\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\r\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\r\n                if (tgtInstrument == null) continue;\r\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\r\n                // Check effects\r\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\r\n                    // Instrument type specific\r\n                    || (tgtInstrument.type != InstrumentType.fm && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\r\n                    || ((tgtInstrument.type != InstrumentType.pwm && tgtInstrument.type != InstrumentType.supersaw) && (str == \"pulse width\"))\r\n                    || ((tgtInstrument.type != InstrumentType.supersaw) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\r\n                    // Arp check\r\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\r\n                    // EQ Filter check\r\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\r\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\r\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\r\n                    // Note Filter check\r\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\r\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\r\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\r\n\r\n                    instrument.invalidModulators[mod] = false;\r\n                    i = tgtInstrumentList.length;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n    public panningDelayBufferSize: number;\r\n    public panningDelayBufferMask: number;\r\n    public chorusDelayBufferSize: number;\r\n    public chorusDelayBufferMask: number;\r\n    // TODO: reverb\r\n\r\n    public song: Song | null = null;\r\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\r\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\r\n    public liveInputDuration: number = 0;\r\n    public liveBassInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveBassInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveBassInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public liveBassInputChannel: number = 0;\r\n    public liveInputInstruments: number[] = [];\r\n    public liveBassInputInstruments: number[] = [];\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n    public enableMetronome: boolean = false;\r\n    public countInMetronome: boolean = false;\r\n    public renderingSong: boolean = false;\r\n    public heldMods: HeldMod[] = [];\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private prevBar: number | null = null;\r\n    private nextBar: number | null = null;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    public isAtStartOfTick: boolean = true;\r\n    public isAtEndOfTick: boolean = true;\r\n    public tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[] = [];\r\n    private modInsValues: (number | null)[][][] = [];\r\n    private nextModValues: (number | null)[] = [];\r\n    private nextModInsValues: (number | null)[][][] = [];\r\n    private isPlayingSong: boolean = false;\r\n    private isRecording: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\r\n\r\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\r\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\r\n    public loopBar: number = -1;\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\r\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\r\n\r\n    private readonly channels: ChannelState[] = [];\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\r\n\r\n    private startedMetronome: boolean = false;\r\n    private metronomeSamplesRemaining: number = -1;\r\n    private metronomeAmplitude: number = 0.0;\r\n    private metronomePrevAmplitude: number = 0.0;\r\n    private metronomeFilter: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get recording(): boolean {\r\n        return this.isRecording;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            this.tickSampleCountdown = 0;\r\n            this.isAtStartOfTick = true;\r\n            this.prevBar = null;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    public getTicksIntoBar(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n    }\r\n    public getCurrentPart(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part);\r\n    }\r\n\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = pattern.instruments[0];\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        this.computeDelayBufferSizes();\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n        this.prevBar = null;\r\n    }\r\n\r\n    private computeDelayBufferSizes(): void {\r\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\r\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\r\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\r\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\r\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\r\n            if (this.scriptNode != null) this.deactivateAudio();\r\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n\r\n            this.computeDelayBufferSizes();\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.initModFilters(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n        this.warmUpSynthesizer(this.song);\r\n        this.isPlayingSong = true;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        this.isRecording = false;\r\n        this.modValues = [];\r\n        this.nextModValues = [];\r\n        this.heldMods = [];\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                this.modInsValues[channelIndex] = [];\r\n                this.nextModInsValues[channelIndex] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    public startRecording(): void {\r\n        this.preferLowerLatency = true;\r\n        this.isRecording = true;\r\n        this.play();\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.limit = 0.0;\r\n        this.freeAllTones();\r\n        if (this.song != null) {\r\n            for (const channelState of this.channels) {\r\n                for (const instrumentState of channelState.instruments) {\r\n                    instrumentState.resetAllEffects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, channelIndex: number, instrumentIndex: number, setting: number): number {\r\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\r\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\r\n        if (Config.modulators[setting].forSong) {\r\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                this.modValues[setting] = val;\r\n                this.nextModValues[setting] = nextVal;\r\n            }\r\n        } else {\r\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\r\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\r\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\r\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\r\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            for (let i: number = 0; i < this.heldMods.length; i++) {\r\n                if (channel != undefined && instrument != undefined) {\r\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\r\n                        this.heldMods.splice(i, 1);\r\n                } else {\r\n                    if (this.heldMods[i].setting == setting)\r\n                        this.heldMods.splice(i, 1);\r\n                }\r\n            }\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\r\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\r\n\r\n        if (forNoteFilter) {\r\n            if (instrument.noteFilterType)\r\n                return false;\r\n            if (instrument.tmpNoteFilterEnd != null)\r\n                return true;\r\n        }\r\n        else {\r\n            if (instrument.eqFilterType)\r\n                return false;\r\n            if (instrument.tmpEqFilterEnd != null)\r\n                return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Force a modulator to be held at the given volumeStart for a brief duration.\r\n    public forceHoldMods(volumeStart: number, channelIndex: number, instrumentIndex: number, setting: number): void {\r\n        let found: boolean = false;\r\n        for (let i: number = 0; i < this.heldMods.length; i++) {\r\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\r\n                this.heldMods[i].volume = volumeStart;\r\n                this.heldMods[i].holdFor = 24;\r\n                found = true;\r\n            }\r\n        }\r\n        // Default: hold for 24 ticks / 12 parts (half a beat).\r\n        if (!found)\r\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.resetEffects();\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.resetEffects();\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        }\r\n    }\r\n\r\n    public goToNextBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = this.bar;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public goToPrevBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = null;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    private getNextBar(): number {\r\n        let nextBar: number = this.bar + 1;\r\n        if (this.isRecording) {\r\n            if (nextBar >= this.song!.barCount) {\r\n                nextBar = this.song!.barCount - 1;\r\n            }\r\n        } else if (this.bar == this.loopBar && !this.renderingSong) {\r\n            nextBar = this.bar;\r\n        }\r\n        else if (this.loopRepeatCount != 0 && nextBar == this.song!.loopStart + this.song!.loopLength) {\r\n            nextBar = this.song!.loopStart;\r\n        }\r\n        return nextBar;\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.bar++;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n        this.isAtStartOfTick = true;\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\r\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\r\n            this.browserAutomaticallyClearsAudioBuffer = false;\r\n        }\r\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\r\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\r\n            const length: number = outputBuffer.length;\r\n            for (let i: number = 0; i < length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        const song: Song = this.song;\r\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\r\n            this.tickSampleCountdown = samplesPerTick;\r\n            this.isAtStartOfTick = true;\r\n        }\r\n        if (playSong) {\r\n            if (this.beat >= song.beatsPerBar) {\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n                this.isAtStartOfTick = true;\r\n\r\n                this.prevBar = this.bar;\r\n                this.bar = this.getNextBar();\r\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n            }\r\n            if (this.bar >= song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        this.syncSongState();\r\n\r\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\r\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\r\n        }\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\r\n        let limit: number = +this.limit;\r\n        let skippedBars: number[] = [];\r\n        let firstSkippedBufferIndex: number = -1;\r\n\r\n        let bufferIndex: number = 0;\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            this.nextBar = this.getNextBar();\r\n            if (this.nextBar >= song.barCount) this.nextBar = null;\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\r\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\r\n            const runEnd: number = bufferIndex + runLength;\r\n\r\n            // Handle mod synth\r\n            if (this.isPlayingSong || this.renderingSong) {\r\n\r\n                // First modulation pass. Determines active tones.\r\n                // Runs everything but Dot X/Y mods, to let them always come after morph.\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\r\n\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            const channel: Channel = song.channels[channelIndex];\r\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\r\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\r\n                                continue;\r\n                            }\r\n\r\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Second modulation pass.\r\n                // Only for Dot X/Y mods.\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            const channel: Channel = song.channels[channelIndex];\r\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\r\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\r\n\r\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if (this.wantToSkip) {\r\n                // Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\r\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\r\n                let barVisited: boolean = skippedBars.includes(this.bar);\r\n                if (barVisited && bufferIndex == firstSkippedBufferIndex)\r\n                    return;\r\n                if (firstSkippedBufferIndex == -1) {\r\n                    firstSkippedBufferIndex = bufferIndex;\r\n                }\r\n                if (!barVisited)\r\n                    skippedBars.push(this.bar);\r\n\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n                continue;\r\n            }\r\n\r\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\r\n                const channel: Channel = song.channels[channelIndex];\r\n                const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                if (this.isAtStartOfTick) {\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\r\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\r\n                }\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n\r\n                    if (this.isAtStartOfTick) {\r\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\r\n\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                                continue;\r\n                            }\r\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\r\n                            tonesPlayedInThisInstrument++;\r\n                        }\r\n\r\n                        if (instrumentState.awake) {\r\n                            if (!instrumentState.computed) {\r\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\r\n                            }\r\n\r\n                            instrumentState.computed = false;\r\n                            //instrumentState.envelopeComputer.clearEnvelopes();\r\n                        }\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.activeTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.releasedTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    if (instrumentState.awake) {\r\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n                    }\r\n\r\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\r\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\r\n\r\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\r\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrumentState.vibratoTime = 0;\r\n                        instrumentState.nextVibratoTime = 0;\r\n                    }\r\n                    else {\r\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.enableMetronome || this.countInMetronome) {\r\n                if (this.part == 0) {\r\n                    if (!this.startedMetronome) {\r\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\r\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\r\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\r\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\r\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\r\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\r\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\r\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\r\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\r\n                        this.metronomePrevAmplitude = 0.0;\r\n\r\n                        this.startedMetronome = true;\r\n                    }\r\n                    if (this.metronomeSamplesRemaining > 0) {\r\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\r\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\r\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\r\n                            outputDataL[i] += this.metronomeAmplitude;\r\n                            outputDataR[i] += this.metronomeAmplitude;\r\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\r\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\r\n                            this.metronomeAmplitude = tempAmplitude;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.startedMetronome = false;\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                // A compressor/limiter.\r\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\r\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.isAtStartOfTick = false;\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n                this.isAtStartOfTick = true;\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\r\n                for (const channelState of this.channels) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.isOnLastTick) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                            } else {\r\n                                tone.ticksSinceReleased++;\r\n                            }\r\n                        }\r\n                        if (instrumentState.deactivateAfterThisTick) {\r\n                            instrumentState.deactivate();\r\n                        }\r\n                        instrumentState.tonesAddedInThisTick = false;\r\n                    }\r\n                }\r\n\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let instrumentState: InstrumentState = this.channels[channel].instruments[instrumentIdx];\r\n\r\n                        // Update arpeggio time, which is used to calculate arpeggio position\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false)));\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n\r\n                        // Update envelope time, which is used to calculate (all envelopes') position\r\n                        let useEnvelopeSpeed: number = instrument.envelopeSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\r\n                            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\r\n                            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                                instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\r\n                            } else {\r\n                                // Linear interpolate envelope values\r\n                                instrumentState.envelopeTime += (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update next-used filters after each run\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        if (instrument.tmpEqFilterEnd != null) {\r\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\r\n                        } else {\r\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                        }\r\n                        if (instrument.tmpNoteFilterEnd != null) {\r\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\r\n                        } else {\r\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    this.liveBassInputDuration--;\r\n                    // Decrement held modulator counters after each run\r\n                    for (let i: number = 0; i < this.heldMods.length; i++) {\r\n                        this.heldMods[i].holdFor--;\r\n                        if (this.heldMods[i].holdFor <= 0) {\r\n                            this.heldMods.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n\r\n                                if (this.countInMetronome) {\r\n                                    this.countInMetronome = false;\r\n                                } else {\r\n                                    this.prevBar = this.bar;\r\n                                    this.bar = this.getNextBar();\r\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n                                    if (this.bar >= song.barCount) {\r\n                                        this.bar = 0;\r\n                                        if (this.loopRepeatCount != -1) {\r\n                                            ended = true;\r\n                                            this.resetEffects();\r\n                                            this.pause();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\r\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                    instrumentState.envelopeTime = (instrumentState.envelopeTime % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\r\n        this.limit = limit;\r\n\r\n        if (playSong && !this.countInMetronome) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n            const secondsGenerated = samplesAccumulated / 44100;\r\n            const secondsRequired = samplePerformance / 1000;\r\n            const ratio = secondsRequired / secondsGenerated;\r\n            console.log(ratio);\r\n            samplePerformance = 0;\r\n            samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.freshlyAllocated = true;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\r\n        instrumentState.releasedTones.pushFront(tone);\r\n        tone.atNoteStart = false;\r\n        tone.passedEndOfNote = true;\r\n    }\r\n\r\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\r\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\r\n        instrumentState.releasedTones.remove(toneIndex);\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        for (const channelState of this.channels) {\r\n            for (const instrumentState of channelState.instruments) {\r\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\r\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\r\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\r\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pitches: number[] = this.liveInputPitches;\r\n        const bassPitches: number[] = this.liveBassInputPitches;\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\r\n            let toneCount: number = 0;\r\n\r\n            const instrument: Instrument = channel.instruments[instrumentIndex];\r\n            const filteredPitches = pitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit)\r\n\r\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\r\n\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < filteredPitches.length; i++) {\r\n                        tone.pitches[i] = filteredPitches[i];\r\n                    }\r\n                    tone.pitchCount = filteredPitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, filteredPitches);\r\n\r\n                    for (let i: number = 0; i < filteredPitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != filteredPitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = filteredPitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = filteredPitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\r\n                const instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < bassPitches.length; i++) {\r\n                        tone.pitches[i] = bassPitches[i];\r\n                    }\r\n                    tone.pitchCount = bassPitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveBassInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\r\n\r\n                    for (let i: number = 0; i < bassPitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = bassPitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = bassPitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveBassInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            while (toneList.count() > toneCount) {\r\n                this.releaseTone(instrumentState, toneList.popBack());\r\n            }\r\n\r\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n        this.liveBassInputStarted = false;\r\n    }\r\n\r\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\r\n    // seamless transition across patterns, otherwise returns null.\r\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\r\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\r\n            // The adjacent pattern does not contain the same instrument as the current pattern.\r\n\r\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\r\n                // The current or adjacent pattern contains more than one instrument, don't bother\r\n                // trying to connect them.\r\n                return null;\r\n            }\r\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\r\n            // Try to connect them.\r\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\r\n\r\n            if (forceContinue) {\r\n                // Even non-seamless instruments can be connected across patterns if forced.\r\n                return otherInstrument.getChord();\r\n            }\r\n\r\n            // Otherwise, check that both instruments are seamless across patterns.\r\n            const otherTransition: Transition = otherInstrument.getTransition();\r\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\r\n                return otherInstrument.getChord();\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\r\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\r\n        }\r\n    }\r\n\r\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\r\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\r\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\r\n        for (const pitch of firstNote.pitches) {\r\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\r\n        // The tones are about to seamlessly transition to a new note. The pitches\r\n        // from the old note may or may not match any of the pitches in the new\r\n        // note, and not necessarily in order, but if any do match, they'll sound\r\n        // better if those tones continue to have the same pitch. Attempt to find\r\n        // the right spot for each old tone in the new chord if possible.\r\n\r\n        for (let i: number = 0; i < toneList.count(); i++) {\r\n            const tone: Tone = toneList.get(i);\r\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\r\n            for (let j: number = 0; j < notePitches.length; j++) {\r\n                if (notePitches[j] == pitch) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    toneList.remove(i);\r\n                    i--;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Any tones that didn't get matched should just fill in the gaps.\r\n        while (toneList.count() > 0) {\r\n            const tone: Tone = toneList.popFront();\r\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\r\n                if (this.tempMatchedPitchTones[j] == null) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\r\n        const currentPart: number = this.getCurrentPart();\r\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\r\n\r\n        if (playSong && song.getChannelIsMod(channelIndex)) {\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null && !channel.muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > currentPart) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let modToneCount: number = 0;\r\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\r\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\r\n                }\r\n\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\r\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n\r\n                if (notes[mod] != null) {\r\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\r\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\r\n\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= modToneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\r\n                        const oldTone: Tone = toneList.get(modToneCount);\r\n                        if (oldTone.isOnLastTick) {\r\n                            this.freeTone(oldTone);\r\n                        } else {\r\n                            this.releaseTone(instrumentState, oldTone);\r\n                        }\r\n                        tone = this.newTone();\r\n                        toneList.set(modToneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(modToneCount);\r\n                    }\r\n                    modToneCount++;\r\n\r\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\r\n                        tone.pitches[i] = notes[mod]!.pitches[i];\r\n                    }\r\n                    tone.pitchCount = notes[mod]!.pitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = newInstrumentIndex;\r\n                    tone.note = notes[mod];\r\n                    tone.noteStartPart = notes[mod]!.start;\r\n                    tone.noteEndPart = notes[mod]!.end;\r\n                    tone.prevNote = prevNoteForThisInstrument;\r\n                    tone.nextNote = nextNoteForThisInstrument;\r\n                    tone.prevNotePitchIndex = 0;\r\n                    tone.nextNotePitchIndex = 0;\r\n                    tone.atNoteStart = atNoteStart;\r\n                    tone.passedEndOfNote = false;\r\n                    tone.forceContinueAtStart = forceContinueAtStart;\r\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                }\r\n            }\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            while (toneList.count() > modToneCount) {\r\n                const tone: Tone = toneList.popBack();\r\n                const channel: Channel = song.channels[channelIndex];\r\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\r\n                    this.releaseTone(instrumentState, tone);\r\n                } else {\r\n                    this.freeTone(tone);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (!song.getChannelIsMod(channelIndex)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > currentPart) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (note != null) {\r\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                }\r\n            }\r\n\r\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\r\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeTones.count() > 0) {\r\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n            } else {\r\n                channelState.singleSeamlessInstrument = null;\r\n            }\r\n\r\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                const toneList: Deque<Tone> = instrumentState.activeTones;\r\n                let toneCount: number = 0;\r\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    let prevNoteForThisInstrument: Note | null = prevNote;\r\n                    let nextNoteForThisInstrument: Note | null = nextNote;\r\n\r\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\r\n                    const transition: Transition = instrument.getTransition();\r\n                    const chord: Chord = instrument.getChord();\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    let tonesInPrevNote: number = 0;\r\n                    let tonesInNextNote: number = 0;\r\n                    if (note.start == 0) {\r\n                        // If the beginning of the note coincides with the beginning of the pattern,\r\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\r\n                        if (prevPattern != null) {\r\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\r\n                            if (lastNote != null && lastNote.end == partsPerBar) {\r\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    prevNoteForThisInstrument = lastNote;\r\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\r\n                                    forceContinueAtStart = patternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (prevNoteForThisInstrument != null) {\r\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\r\n                    }\r\n                    if (note.end == partsPerBar) {\r\n                        // If the end of the note coincides with the end of the pattern, look for an\r\n                        // adjacent note at the beginning of the next pattern.\r\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\r\n                        if (nextPattern != null) {\r\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\r\n                            if (firstNote != null && firstNote.start == 0) {\r\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    nextNoteForThisInstrument = firstNote;\r\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\r\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (nextNoteForThisInstrument != null) {\r\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\r\n                    }\r\n\r\n                    let filteredPitches: number[] = note.pitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit)\r\n                    if (chord.singleTone && !(filteredPitches.length <= 0)) {\r\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\r\n                        let tone: Tone;\r\n                        if (toneList.count() <= toneCount) {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\r\n                            const oldTone: Tone = toneList.get(toneCount);\r\n                            if (oldTone.isOnLastTick) {\r\n                                this.freeTone(oldTone);\r\n                            } else {\r\n                                this.releaseTone(instrumentState, oldTone);\r\n                            }\r\n                            tone = this.newTone();\r\n                            toneList.set(toneCount, tone);\r\n                        } else {\r\n                            tone = toneList.get(toneCount);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        for (let i: number = 0; i < filteredPitches.length; i++) {\r\n                            tone.pitches[i] = filteredPitches[i];\r\n                        }\r\n                        tone.pitchCount = filteredPitches.length;\r\n                        tone.chordSize = 1;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = note;\r\n                        tone.noteStartPart = note.start;\r\n                        tone.noteEndPart = note.end;\r\n                        tone.prevNote = prevNoteForThisInstrument;\r\n                        tone.nextNote = nextNoteForThisInstrument;\r\n                        tone.prevNotePitchIndex = 0;\r\n                        tone.nextNotePitchIndex = 0;\r\n                        tone.atNoteStart = atNoteStart;\r\n                        tone.passedEndOfNote = false;\r\n                        tone.forceContinueAtStart = forceContinueAtStart;\r\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    } else {\r\n                        const transition: Transition = instrument.getTransition();\r\n\r\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\r\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, filteredPitches);\r\n                        }\r\n\r\n                        let strumOffsetParts: number = 0;\r\n                        for (let i: number = 0; i < filteredPitches.length; i++) {\r\n\r\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\r\n                            let noteForThisTone: Note = note;\r\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\r\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\r\n                            let passedEndOfNote: boolean = false;\r\n\r\n                            // Strumming may mean that a note's actual start time may be after the\r\n                            // note's displayed start time. If the note start hasn't been reached yet,\r\n                            // carry over the previous tone if available and seamless, otherwise skip\r\n                            // the new tone until it is ready to start.\r\n                            if (noteStartPart > currentPart) {\r\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\r\n                                    // Continue the previous note's chord until the current one takes over.\r\n                                    nextNoteForThisTone = noteForThisTone;\r\n                                    noteForThisTone = prevNoteForThisTone;\r\n                                    prevNoteForThisTone = null;\r\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\r\n                                    passedEndOfNote = true;\r\n                                } else {\r\n                                    // This and the rest of the tones in the chord shouldn't start yet.\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            let noteEndPart: number = noteForThisTone.end;\r\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\r\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\r\n                            }\r\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\r\n                                strumOffsetParts += chord.strumParts;\r\n                            }\r\n\r\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\r\n                            let tone: Tone;\r\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                                tone = this.tempMatchedPitchTones[toneCount]!;\r\n                                this.tempMatchedPitchTones[toneCount] = null;\r\n                                toneList.pushBack(tone);\r\n                            } else if (toneList.count() <= toneCount) {\r\n                                tone = this.newTone();\r\n                                toneList.pushBack(tone);\r\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\r\n                                const oldTone: Tone = toneList.get(toneCount);\r\n                                if (oldTone.isOnLastTick) {\r\n                                    this.freeTone(oldTone);\r\n                                } else {\r\n                                    this.releaseTone(instrumentState, oldTone);\r\n                                }\r\n                                tone = this.newTone();\r\n                                toneList.set(toneCount, tone);\r\n                            } else {\r\n                                tone = toneList.get(toneCount);\r\n                            }\r\n                            toneCount++;\r\n\r\n                            tone.pitches[0] = noteForThisTone.pitches[i];\r\n                            tone.pitchCount = 1;\r\n                            tone.chordSize = noteForThisTone.pitches.length;\r\n                            tone.instrumentIndex = instrumentIndex;\r\n                            tone.note = noteForThisTone;\r\n                            tone.noteStartPart = noteStartPart;\r\n                            tone.noteEndPart = noteEndPart;\r\n                            tone.prevNote = prevNoteForThisTone;\r\n                            tone.nextNote = nextNoteForThisTone;\r\n                            tone.prevNotePitchIndex = i;\r\n                            tone.nextNotePitchIndex = i;\r\n                            tone.atNoteStart = atNoteStart;\r\n                            tone.passedEndOfNote = passedEndOfNote;\r\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\r\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n                // Automatically free or release seamless tones if there's no new note to take over.\r\n                while (toneList.count() > toneCount) {\r\n                    const tone: Tone = toneList.popBack();\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n                        this.releaseTone(instrumentState, tone);\r\n                    } else {\r\n                        this.freeTone(tone);\r\n                    }\r\n                }\r\n\r\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\r\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\r\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\r\n            if (oldTone != null) {\r\n                if (oldTone.isOnLastTick) {\r\n                    this.freeTone(oldTone);\r\n                } else {\r\n                    this.releaseTone(instrumentState, oldTone);\r\n                }\r\n                this.tempMatchedPitchTones[i] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n\r\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\r\n        tone.envelopeComputer.clearEnvelopes();\r\n    }\r\n\r\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\r\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n\r\n        if (tone.note != null) {\r\n            const ticksIntoBar: number = this.getTicksIntoBar();\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\r\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\r\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\r\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\r\n\r\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\r\n        }\r\n    }\r\n\r\n    private static computeChordExpression(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\r\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n        instrumentState.awake = true;\r\n        instrumentState.tonesAddedInThisTick = true;\r\n        if (!instrumentState.computed) {\r\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\r\n        }\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\r\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const ticksIntoBar: number = this.getTicksIntoBar();\r\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\r\n        const currentPart: number = this.getCurrentPart();\r\n\r\n        let specialIntervalMult: number = 1.0;\r\n        tone.specialIntervalExpressionMult = 1.0;\r\n\r\n\r\n\r\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\r\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        //}\r\n\r\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let fadeExpressionStart: number = 1.0;\r\n        let fadeExpressionEnd: number = 1.0;\r\n        let chordExpressionStart: number = chordExpression;\r\n        let chordExpressionEnd: number = chordExpression;\r\n\r\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\r\n        let basePitch: number = Config.keys[song.key].basePitch;\r\n        let baseExpression: number = 1.0;\r\n        let pitchDamping: number = 48;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            baseExpression = Config.spectrumBaseExpression;\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\r\n            }\r\n            expressionReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseExpression = Config.drumsetBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\r\n            baseExpression = Config.noiseBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm) {\r\n            baseExpression = Config.fmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n            baseExpression = Config.chipBaseExpression;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            baseExpression = Config.harmonicsBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            baseExpression = Config.pwmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\tbaseExpression = Config.supersawBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            baseExpression = Config.pickedStringBaseExpression;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseExpression = 1.0;\r\n            expressionReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\r\n            tone.reset();\r\n        }\r\n        tone.freshlyAllocated = false;\r\n\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.phaseDeltaScales[i] = 0.0;\r\n            tone.operatorExpressions[i] = 0.0;\r\n            tone.operatorExpressionDeltas[i] = 0.0;\r\n        }\r\n        tone.expression = 0.0;\r\n        tone.expressionDelta = 0.0;\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\r\n        }\r\n\r\n        if (released) {\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\r\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n\r\n            if (shouldFadeOutFast) {\r\n                fadeExpressionEnd = 0.0;\r\n            }\r\n\r\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\r\n        } else if (tone.note == null) {\r\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\r\n            tone.lastInterval = 0;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const noteStartPart: number = tone.noteStartPart;\r\n            const noteEndPart: number = tone.noteEndPart;\r\n\r\n\r\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.ticksSinceReleased = 0;\r\n\r\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\r\n            const tickTimeEnd: number = tickTimeStart + 1.0;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            fadeExpressionStart = 1.0;\r\n            fadeExpressionEnd = 1.0;\r\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            tone.lastInterval = intervalEnd;\r\n\r\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\r\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\r\n                if (fadeOutTicks > 0.0) {\r\n                    // If the tone should fade out before the end of the note, do so here.\r\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\r\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\r\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        tone.isOnLastTick = toneIsOnLastTick;\r\n\r\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\r\n        let startPoint: FilterControlPoint;\r\n        let endPoint: FilterControlPoint;\r\n\r\n        if (instrument.noteFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\r\n            if (instrument.noteSubFilters[1] == null)\r\n                instrument.noteSubFilters[1] = new FilterSettings();\r\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let filterChanges: boolean = false;\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\r\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\r\n\r\n            startPoint = noteFilterSettingsStart.controlPoints[0];\r\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\r\n\r\n            // Temporarily override so that envelope computer uses appropriate computed note filter\r\n            instrument.noteFilter = noteFilterSettingsStart;\r\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\r\n        }\r\n\r\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\r\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\r\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\r\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\r\n            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\r\n            } else {\r\n                // Linear interpolate envelope values\r\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n            }\r\n        }\r\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, useEnvelopeSpeed);\r\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\r\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\r\n        instrument.noteFilter = tmpNoteFilter;\r\n\r\n        if (tone.note != null && transition.slides) {\r\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n            if (prevNote != null) {\r\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\r\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\r\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\r\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\r\n                }\r\n            }\r\n            if (nextNote != null) {\r\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\r\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\r\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\r\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (effectsIncludePitchShift(instrument.effects)) {\r\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\r\n            let pitchShiftScalarStart: number = 1.0;\r\n            let pitchShiftScalarEnd: number = 1.0;\r\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\r\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\r\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\r\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\r\n            }\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\r\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\r\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\r\n        }\r\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\r\n            let modDetuneStart: number = instrument.detune;\r\n            let modDetuneEnd: number = instrument.detune;\r\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\r\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\r\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\r\n            }\r\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\r\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\r\n        }\r\n\r\n        if (effectsIncludeVibrato(instrument.effects)) {\r\n            let delayTicks: number;\r\n            let vibratoAmplitudeStart: number;\r\n            let vibratoAmplitudeEnd: number;\r\n            // Custom vibrato\r\n            if (instrument.vibrato == Config.vibratos.length) {\r\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\r\n                // Special case: if vibrato delay is max, NEVER vibrato.\r\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n                vibratoAmplitudeStart = instrument.vibratoDepth;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            } else {\r\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\r\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\r\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\r\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\r\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\r\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\r\n            }\r\n\r\n\r\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\r\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\r\n            // of the next run if available.\r\n            let vibratoStart: number;\r\n            if (tone.prevVibrato != null) {\r\n                vibratoStart = tone.prevVibrato;\r\n            } else {\r\n                let vibratoLfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\r\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\r\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\r\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\r\n                }\r\n            }\r\n\r\n            let vibratoLfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\r\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\r\n            if (instrument.type != InstrumentType.mod) {\r\n                let vibratoEnd: number = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\r\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\r\n                }\r\n\r\n                tone.prevVibrato = vibratoEnd;\r\n\r\n                intervalStart += vibratoStart;\r\n                intervalEnd += vibratoEnd;\r\n            }\r\n        }\r\n\r\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\r\n            // Fade in the beginning of the note.\r\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\r\n            if (fadeInSeconds > 0.0) {\r\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStart / fadeInSeconds);\r\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEnd / fadeInSeconds);\r\n            }\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\r\n            tone.noteFilterCount = 0;\r\n        } else {\r\n\r\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n\r\n            // Simple note filter\r\n            if (instrument.noteFilterType) {\r\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\r\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\r\n\r\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n\r\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\r\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\r\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\r\n\r\n                tone.noteFilterCount = 1;\r\n            }\r\n            else {\r\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\r\n\r\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\r\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\r\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\r\n\r\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                    if (startPoint.type != endPoint.type) {\r\n                        startPoint = endPoint;\r\n                    }\r\n\r\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\r\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\r\n                }\r\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\r\n            }\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\r\n            //const timeScale: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n            //secondsPerTick *= timeScale;\r\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\r\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\r\n\r\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\r\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\r\n\r\n            // Apply slide interpolation to drumset envelope.\r\n            if (envelopeComputer.prevSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\r\n            }\r\n            if (envelopeComputer.nextSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\r\n            }\r\n\r\n            let drumsetFilterEnvelopeEnd: number = drumsetFilterEnvelopeStart;\r\n\r\n            if ( instrument.discreteEnvelope == false ) {\r\n                drumsetFilterEnvelopeEnd = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\r\n\r\n                if (envelopeComputer.prevSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\r\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\r\n                }\r\n                if (envelopeComputer.nextSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\r\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\r\n                }\r\n            }\r\n\r\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\r\n            point.type = FilterType.lowPass;\r\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\r\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\r\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\r\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\r\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\r\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\r\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\r\n            tone.noteFilterCount++;\r\n        }\r\n\r\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\r\n\r\n        if (instrument.type == InstrumentType.fm) {\r\n            // phase modulation!\r\n\r\n            let sineExpressionBoost: number = 1.0;\r\n            let totalCarrierExpression: number = 0.0;\r\n\r\n            let trueBasePitch: number = isNoiseChannel ? 12 : basePitch\r\n\r\n            let arpeggioInterval: number = 0;\r\n            const arpeggiates: boolean = chord.arpeggiates;\r\n            if (tone.pitchCount > 1 && arpeggiates) {\r\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n            const carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n            for (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n                const associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = instrument.operators[i].frequency\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const pitchStart: number = trueBasePitch + (pitch + intervalStart) * intervalScale + interval;\r\n                const pitchEnd: number = trueBasePitch + (pitch + intervalEnd) * intervalScale + interval;\r\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\r\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\r\n                const hzOffset: number = instrument.operators[i].hzOffset;\r\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\r\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\r\n\r\n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                let freqStart: number;\r\n                let freqEnd: number;\r\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\r\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\r\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\r\n                } else {\r\n                    freqStart = targetFreqStart;\r\n                    freqEnd = targetFreqEnd;\r\n                }\r\n                tone.phaseDeltas[i] = freqStart * sampleTime;\r\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\r\n                    amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                    amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const ampliutudeSign: number = instrument.operators[i].invert ? -1 : 1\r\n                const amplitudeMultStart: number = amplitudeCurveStart * ampliutudeSign\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * ampliutudeSign\r\n\r\n                let expressionStart: number = amplitudeMultStart;\r\n                let expressionEnd: number = amplitudeMultEnd;\r\n\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    let pitchExpressionStart: number;\r\n                    if (tone.prevPitchExpressions[i] != null) {\r\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\r\n                    } else {\r\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\r\n                    }\r\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\r\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\r\n                    expressionStart *= pitchExpressionStart;\r\n                    expressionEnd *= pitchExpressionEnd;\r\n\r\n                    totalCarrierExpression += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    expressionStart *= Config.sineWaveLength * 1.5;\r\n                    expressionEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\r\n                }\r\n\r\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n\r\n                // Check for mod-related volume delta\r\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\r\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\r\n                // You can use the mix volume modulator instead to avoid this effect.\r\n\r\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\r\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                tone.operatorExpressions[i] = expressionStart;\r\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n            }\r\n\r\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\r\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\r\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\r\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\r\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\r\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n            }\r\n\r\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\r\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\r\n\r\n\r\n        } else {\r\n            const freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\r\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\r\n\r\n            let pitch: number = tone.pitches[0];\r\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\r\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.customInterval) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\r\n            let pitchExpressionStart: number;\r\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\r\n            if (tone.prevPitchExpressions[0] != null) {\r\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\r\n            } else {\r\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\r\n            }\r\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\r\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\r\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\r\n\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.chip) {\r\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\r\n            }\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                // Check for sustain mods\r\n                let useSustainStart: number = instrument.stringSustain;\r\n                let useSustainEnd: number = instrument.stringSustain;\r\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\r\n                }\r\n\r\n                tone.stringSustainStart = useSustainStart;\r\n                tone.stringSustainEnd = useSustainEnd;\r\n\r\n                // Increase expression to compensate for string decay.\r\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\r\n\r\n            }\r\n\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                // These instruments have two waves at different frequencies for the unison feature.\r\n                const unison: Unison = Config.unisons[instrument.unison];\r\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unison.voices / 2.0;\r\n                settingsExpressionMult *= unison.expression * voiceCountExpression;\r\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\r\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\r\n                const unisonAStart: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeStart / 12.0);\r\n                const unisonAEnd: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeEnd / 12.0);\r\n                const unisonBStart: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\r\n                const unisonBEnd: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\r\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\r\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\r\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\r\n            } else {\r\n                tone.phaseDeltas[0] = startFreq * sampleTime;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\r\n            }\r\n\r\n            // TODO: make expressionStart and expressionEnd variables earlier and modify those\r\n\t\t\t// instead of these supersawExpression variables.\r\n\t\t\tlet supersawExpressionStart: number = 1.0;\r\n\t\t\tlet supersawExpressionEnd: number = 1.0;\r\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\r\n\r\n                // Dynamism mods\r\n                let useDynamismStart: number = instrument.supersawDynamism / Config.supersawDynamismMax;\r\n                let useDynamismEnd: number = instrument.supersawDynamism / Config.supersawDynamismMax;\r\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\r\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\r\n                }\r\n\r\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\r\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\r\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\r\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\r\n\r\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\r\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\r\n\t\t\t\ttone.supersawDynamism = dynamismStart;\r\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\r\n\r\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\r\n\t\t\t\tif (initializeSupersaw) {\r\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\r\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\r\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\r\n\t\t\t\t\t// phases so they start there.\r\n\r\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\r\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\r\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\r\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\r\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\r\n\t\t\t\t\tlet accumulator: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\ttone.phases[i] = accumulator;\r\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\r\n\t\t\t\t\tconst slope: number = amplitudeSum;\r\n\r\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\r\n\t\t\t\t\t// set of phases.\r\n\t\t\t\t\tlet sample: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\r\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\r\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\r\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\r\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\r\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\r\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\r\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\r\n\t\t\t\t\t// through the phases.\r\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\r\n\t\t\t\t\tlet prevDrop: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\r\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\r\n\t\t\t\t\t\tif (sample < 0.0) {\r\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\r\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\r\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\r\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\r\n\t\t\t\t\t\tprevDrop = nextDrop;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\r\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\r\n\t\t\t\t\t// based on index.\r\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\r\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\r\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\r\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\r\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\r\n\t\t\t\t// Spread mods\r\n\t\t\t\tlet useSpreadStart: number = baseSpreadSlider;\r\n\t\t\t\tlet useSpreadEnd:   number = baseSpreadSlider;\r\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\r\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\r\n                }\r\n\r\n\t\t\t\tconst spreadSliderStart: number = useSpreadStart * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\r\n\t\t\t\tconst spreadSliderEnd:   number = useSpreadEnd * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\r\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\r\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\r\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\r\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t// Spread out the detunes around the center;\r\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\r\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\r\n\t\t\t\t// Saw shape mods\r\n\t\t\t\tlet useShapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\tlet useShapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\r\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\r\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\r\n                }\r\n\r\n\t\t\t\tconst shapeStart: number = useShapeStart * envelopeStarts[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\tconst shapeEnd:   number = useShapeEnd * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\ttone.supersawShape = shapeStart;\r\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\r\n\r\n\t\t\t\tconst basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\r\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\r\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\r\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\r\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\r\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\r\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\r\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\r\n\r\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\r\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\r\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\r\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\r\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\r\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\r\n\t\t\t\t\t\t// transfer the old data to the new buffer.\r\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\r\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\r\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\r\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\r\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\r\n\t\t\t\t} else if (initializeSupersaw) {\r\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\r\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\r\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\r\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\r\n\t\t\t}\r\n\r\n\t\t\tlet expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\r\n\t\t\tlet expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\r\n\r\n            // Check for mod-related volume delta\r\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\r\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                let stringDecayStart: number;\r\n                if (tone.prevStringDecay != null) {\r\n                    stringDecayStart = tone.prevStringDecay;\r\n                } else {\r\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\r\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\r\n                }\r\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\r\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\r\n                tone.prevStringDecay = stringDecayEnd;\r\n\r\n                const unison: Unison = Config.unisons[instrument.unison];\r\n                for (let i: number = tone.pickedStrings.length; i < unison.voices; i++) {\r\n                    tone.pickedStrings[i] = new PickedString();\r\n                }\r\n\r\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n                    for (const pickedString of tone.pickedStrings) {\r\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\r\n                        pickedString.delayIndex = -1;\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < unison.voices; i++) {\r\n                    \ttone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0.0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n\r\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                const wrappedFmSynth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\r\n\r\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\r\n\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\treturn Synth.supersawSynth;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            return Synth.pickedStringSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n\r\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const sign: number = instrumentState.invertWave ? -1 : 1;\r\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const volumeScale = instrumentState.volumeScale;\r\n\r\n        // For all but aliasing custom chip, the first sample is duplicated at the end, so don't double-count it.\r\n        const waveLength: number = (aliases && instrumentState.type == InstrumentType.customChipWave) ? wave.length : wave.length - 1;\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\r\n        if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n        let prevWaveIntegralA: number = 0;\r\n        let prevWaveIntegralB: number = 0;\r\n\r\n        if (!aliases) {\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            prevWaveIntegralA = +wave[indexA];\r\n            prevWaveIntegralB = +wave[indexB];\r\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n        }\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            let waveA: number;\r\n            let waveB: number;\r\n            let inputSample: number;\r\n\r\n            if (aliases) {\r\n                waveA = wave[(0 | phaseA) % waveLength];\r\n                waveB = wave[(0 | phaseB) % waveLength];\r\n                inputSample = waveA + waveB;\r\n            } else {\r\n                const phaseAInt: number = phaseA | 0;\r\n                const phaseBInt: number = phaseB | 0;\r\n                const indexA: number = phaseAInt % waveLength;\r\n                const indexB: number = phaseBInt % waveLength;\r\n                let nextWaveIntegralA: number = wave[indexA];\r\n                let nextWaveIntegralB: number = wave[indexB];\r\n                const phaseRatioA: number = phaseA - phaseAInt;\r\n                const phaseRatioB: number = phaseB - phaseBInt;\r\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n                prevWaveIntegralA = nextWaveIntegralA;\r\n                prevWaveIntegralB = nextWaveIntegralB;\r\n                inputSample = waveA + waveB * unisonSign;\r\n            }\r\n\r\n            inputSample *= sign;\r\n\r\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample * volumeScale;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const sign: number = instrumentState.invertWave ? -1 : 1;\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\r\n        if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = +wave[indexA];\r\n        let prevWaveIntegralB: number = +wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const inputSample: number = (waveA + waveB * unisonSign) * sign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\r\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\r\n        // The source code is processed as a string before being compiled, in order to\r\n        // handle the unison feature. If unison is disabled or set to none, then only one\r\n        // string voice is required, otherwise two string voices are required. We only want\r\n        // to compute the minimum possible number of string voices, so omit the code for\r\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\r\n        // each required voice, replacing the \"#\" with the voice index.\r\n\r\n        const voiceCount: number = instrumentState.unison!.voices;\r\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\r\n        if (pickedStringFunction == undefined) {\r\n            let pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\r\n\r\n            pickedStringSource += `\r\n                const sign = instrumentState.invertWave ? -1 : 1;\r\n\t\t\t\tconst Config = beepbox.Config;\r\n\t\t\t\tconst Synth = beepbox.Synth;\r\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\r\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\r\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\r\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\r\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\r\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\r\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\r\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\r\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\r\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\r\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\r\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\r\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\r\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\r\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\r\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\r\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\r\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\r\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\r\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\r\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\r\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\r\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\r\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\r\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\r\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\r\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\r\n\r\n\t\t\t\tlet expression = +tone.expression;\r\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\r\n\r\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unison.sign;\r\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\r\n\r\n\t\t\t\tconst filters = tone.noteFilters;\r\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;\r\n\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\r\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\r\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\r\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\r\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\r\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\r\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\r\n\r\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\r\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\r\n\r\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\r\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\r\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\r\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\r\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\r\n\r\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\r\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\r\n\t\t\t\t\tdelayIndex#++;\r\n\r\n\t\t\t\t\tconst inputSample = (`\r\n\r\n            const sampleList: string[] = [];\r\n            for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\r\n            }\r\n\r\n            pickedStringSource += sampleList.join(\" + \");\r\n\r\n            pickedStringSource += `) * expression * sign;\r\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\tdata[sampleIndex] += sample;\r\n\r\n\t\t\t\t\texpression += expressionDelta;\r\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\r\n\t\t\t\t\tallPassG# += allPassGDelta#;\r\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\r\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\r\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\r\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\r\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);\r\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\r\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\r\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\r\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\r\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\r\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\r\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\r\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\r\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\r\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\r\n\t\t\t\tpickedString#.allPassG = allPassG#;\r\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\r\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\r\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\r\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\r\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\r\n\r\n\t\t\t\ttone.expression = expression;\r\n\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t\t}`\r\n\r\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\r\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\r\n                const lines = [];\r\n                for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                    lines.push(line.replace(/\\#/g, String(voice)));\r\n                }\r\n                return lines.join(\"\\n\");\r\n            });\r\n\r\n            //console.log(pickedStringSource);\r\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\r\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\r\n        }\r\n\r\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\r\n    }\r\n\r\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\r\n\r\n\r\n\r\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\r\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\r\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\r\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\r\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\r\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\r\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\r\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\r\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\r\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\r\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\r\n\r\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\r\n        if (effectsFunction == undefined) {\r\n            let effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\r\n\r\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\r\n\r\n            effectsSource += `\r\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\r\n\r\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\r\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\r\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                // Distortion can sometimes create noticeable aliasing.\r\n                // It seems the established industry best practice for distortion antialiasing\r\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\r\n                // at the original nyquist frequency), perform the distortion, then downsample\r\n                // (the lowpass again followed by dropping in-between samples). This is\r\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\r\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\r\n                // introducing latency and/or time smearing, since no true brick wall filter\r\n                // exists. For the time being, I've opted to instead generate in-between input\r\n                // samples using fractional delay all-pass filters, and after distorting them,\r\n                // I \"downsample\" these with a simple weighted sum.\r\n\r\n                effectsSource += `\r\n\r\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\r\n\t\t\t\tlet distortion = instrumentState.distortion;\r\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\r\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\r\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\r\n\t\t\t\tconst distortionFractionalResolution = 4.0;\r\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\r\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\r\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\r\n\r\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\r\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\r\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\r\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\r\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\r\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\r\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\r\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\r\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\r\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\r\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\r\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\r\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tlet filters = instrumentState.eqFilters;\r\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\r\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\r\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\r\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\r\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\r\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\r\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\r\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\r\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\r\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\r\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\r\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\r\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\r\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\r\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\r\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\r\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\r\n\r\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\r\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\r\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\r\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\r\n\r\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\r\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\r\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\r\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\r\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\r\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\r\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\r\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\r\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\r\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\r\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\r\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\r\n\t\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\r\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\r\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\r\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\r\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\r\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\r\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\r\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\r\n\r\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\r\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\r\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\r\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\r\n\r\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\r\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\r\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\r\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\r\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\r\n\r\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\r\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\r\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\r\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\r\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\r\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\r\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\r\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\r\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\r\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\r\n\r\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\r\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\r\n\r\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\r\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\r\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\r\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\r\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\r\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\r\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\r\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\r\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\r\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\r\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += `\r\n\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\r\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\r\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\r\n\t\t\t\t\tsample = distortionNextOutput;\r\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\r\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\r\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\r\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\r\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\r\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\r\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\r\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\r\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\r\n\t\t\t\t\tsample *= distortionOversampleCompensation;\r\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\r\n\t\t\t\t\tdistortion += distortionDelta;\r\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\r\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\r\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\r\n\r\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\r\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\r\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\r\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\r\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\r\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\r\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\r\n\r\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\r\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\r\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\r\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tconst inputSample = sample;\r\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\r\n\t\t\t\t\tsample *= eqFilterVolume;\r\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\r\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\r\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\r\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\r\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\r\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\r\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\r\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\r\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\r\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\r\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\r\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\r\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\r\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\r\n            } else {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tlet sampleL = sample;\r\n\t\t\t\t\tlet sampleR = sample;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\r\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\r\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\r\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\r\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\r\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\r\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\r\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\r\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\r\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\r\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\r\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\r\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\r\n\r\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\r\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\r\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\r\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\r\n\t\t\t\t\tsampleL += echoShelfSampleL;\r\n\t\t\t\t\tsampleR += echoShelfSampleR;\r\n\r\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\r\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\r\n\t\t\t\t\techoMult += echoMultDelta;\r\n                    `\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\r\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\r\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\r\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\r\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\r\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\r\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\r\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\r\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\r\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\r\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\r\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\r\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\r\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\r\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\r\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\r\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\r\n\t\t\t\t\treverb += reverbDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\r\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\r\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\r\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\r\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\r\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\r\n\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tinstrumentState.distortion = distortion;\r\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\r\n\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\r\n\r\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\r\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\r\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\r\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\r\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\r\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\r\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\r\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\r\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\r\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\r\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\r\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\r\n\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\t// The filter input here is downstream from another filter so we\r\n\t\t\t\t// better make sure it's safe too.\r\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\r\n\t\t\t\t\tinitialFilterInput1 = 0.0;\r\n\t\t\t\t\tinitialFilterInput2 = 0.0;\r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\r\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\r\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\r\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\r\n            }\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\r\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\r\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\r\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\r\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\r\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\r\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\r\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\r\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\r\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\r\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\r\n\t\t\t\tinstrumentState.echoMult = echoMult;\r\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\r\n\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\r\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\r\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\r\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\r\n\t\t\t\tinstrumentState.reverbMult = reverb;\r\n\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\r\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\r\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\r\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\r\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += \"}\";\r\n\r\n            //console.log(effectsSource);\r\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\r\n            Synth.effectsFunctionCache[signature] = effectsFunction;\r\n        }\r\n\r\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\r\n        const sign: number = instrument.invertWave ? -1 : 1;\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\r\n        let phaseDelta: number = tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phase: number = (tone.phases[0] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            const sawPhaseA: number = phase % 1;\r\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n            let pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n            if (!instrument.aliases) {\r\n                if (sawPhaseA < phaseDelta) {\r\n                    var t = sawPhaseA / phaseDelta;\r\n                    pulseWave += (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseA > 1.0 - phaseDelta) {\r\n                    var t = (sawPhaseA - 1.0) / phaseDelta;\r\n                    pulseWave += (t + t + t * t + 1) * 0.5;\r\n                }\r\n                if (sawPhaseB < phaseDelta) {\r\n                    var t = sawPhaseB / phaseDelta;\r\n                    pulseWave -= (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseB > 1.0 - phaseDelta) {\r\n                    var t = (sawPhaseB - 1.0) / phaseDelta;\r\n                    pulseWave -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n            const inputSample: number = pulseWave*sign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n            pulseWidth += pulseWidthDelta;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase;\r\n        tone.phaseDeltas[0] = phaseDelta;\r\n        tone.expression = expression;\r\n        tone.pulseWidth = pulseWidth;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const sign: number = instrumentState.invertWave ? -1 : 1;\r\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\r\n\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n\t\tlet expression: number = +tone.expression;\r\n\t\tconst expressionDelta: number = +tone.expressionDelta;\r\n\t\tlet phases: number[] = tone.phases;\r\n\r\n\t\tlet dynamism: number = +tone.supersawDynamism;\r\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\r\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\r\n\t\tlet shape: number = +tone.supersawShape;\r\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\r\n\t\tlet delayLength: number = +tone.supersawDelayLength;\r\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\r\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\r\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\r\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\r\n\r\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n\t\tconst filterCount: number = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters: Function = Synth.applyFilters;\r\n\r\n\t\tconst stopIndex: number = bufferIndex + runLength;\r\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t// The phase initially starts at a zero crossing so apply\r\n\t\t\t// the delta before first sample to get a nonzero value.\r\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\r\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\r\n\r\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n            if (!instrumentState.aliases) {\r\n                if (phase < phaseDelta) {\r\n                    var t: number = phase / phaseDelta;\r\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\r\n                } else if (phase > 1.0 - phaseDelta) {\r\n                    var t: number = (phase - 1.0) / phaseDelta;\r\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n\t\t\tphases[0] = phase;\r\n\r\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\r\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\r\n\t\t\t\t// The phase initially starts at a zero crossing so apply\r\n\t\t\t\t// the delta before first sample to get a nonzero value.\r\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\r\n\t\t\t\tsupersawSample += phase * dynamism;\r\n\r\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n                if (!instrumentState.aliases) {\r\n                    if (phase < detunedPhaseDelta) {\r\n                        const t: number = phase / detunedPhaseDelta;\r\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\r\n                    } else if (phase > 1.0 - detunedPhaseDelta) {\r\n                        const t: number = (phase - 1.0) / detunedPhaseDelta;\r\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\r\n                    }\r\n                }\r\n\r\n\t\t\t\tphases[i] = phase;\r\n\t\t\t}\r\n\r\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\r\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\r\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\r\n\t\t\tconst upperIndex: number = lowerIndex + 1;\r\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\r\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\r\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\r\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\r\n\t\t\tdelayIndex++;\r\n\r\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\r\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tdynamism += dynamismDelta;\r\n\t\t\tshape += shapeDelta;\r\n\t\t\tdelayLength += delayLengthDelta;\r\n\r\n\t\t\tconst output: number = sample * expression * sign;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t}\r\n\r\n\t\ttone.phaseDeltas[0] = phaseDelta;\r\n\t\ttone.expression = expression;\r\n\t\ttone.supersawDynamism = dynamism;\r\n\t\ttone.supersawShape = shape;\r\n\t\ttone.supersawDelayLength = delayLength;\r\n\t\ttone.supersawDelayIndex = delayIndex;\r\n\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t}\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\n        const sign = instrument.invertWave ? -1 : 1;\r\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\tconst sineWave = Config.sineWave;\r\n\r\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\r\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\r\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\r\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\r\n        const operator#Wave      = tone.operatorWaves[#].samples;\r\n\t\tlet feedbackMult         = +tone.feedbackMult;\r\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\r\n        let expression = +tone.expression;\r\n\t\tconst expressionDelta = +tone.expressionDelta;\r\n\r\n\t\tconst filters = tone.noteFilters;\r\n\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters = Synth.applyFilters;\r\n\r\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\r\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\r\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\n\t\t\tconst inputSample = fmOutput*sign;\r\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\r\n\t\t\t\tfeedbackMult += feedbackDelta;\r\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\r\n\t\t\t\toperator#Phase += operator#PhaseDelta;\r\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\r\n\r\n\t\t\tconst output = sample * expression;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t\t}\r\n\r\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\r\n\t\t    tone.feedbackOutputs[#] = operator#Output;\r\n\t\t    tone.feedbackMult = feedbackMult;\r\n\t\t    tone.expression = expression;\r\n\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\r\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\n                const operator#Sample   = operator#Wave[operator#Index];\r\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n\t\t`).split(\"\\n\");\r\n\r\n    private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const randOff: number = Math.abs(Math.sin((tone.noteStartPart+tone.noteEndPart+tone.pitches[0]+synth.bar)*10000)) //Makes the random noise deterministric so that invert wave works properly\r\n        const sign: number = instrumentState.invertWave ? -1 : 1;\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        let phaseDelta: number = +tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        if (tone.phases[0] == 0.0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phase = randOff * Config.chipNoiseLength;\r\n        }\r\n        const phaseMask: number = Config.chipNoiseLength - 1;\r\n        let noiseSample: number = +tone.noiseSample;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta * instrumentState.noisePitchFilterMult);\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const waveSample: number = wave[phase & phaseMask];\r\n\r\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\r\n\r\n            const inputSample: number = noiseSample*sign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta;\r\n        tone.expression = expression;\r\n        tone.noiseSample = noiseSample;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const sign: number = instrumentState.invertWave ? -1 : 1;\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const samplesInPeriod: number = (1 << 7);\r\n        let phaseDelta: number = tone.phaseDeltas[0] * samplesInPeriod;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let noiseSample: number = +tone.noiseSample;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength, synth, tone) + phaseDelta;\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & phaseMask;\r\n            let waveSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\r\n\r\n\r\n            const inputSample: number = noiseSample*sign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta / samplesInPeriod;\r\n        tone.expression = expression;\r\n        tone.noiseSample = noiseSample;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const sign: number = instrumentState.invertWave ? -1 : 1;\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\r\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength, synth, tone) + phaseDelta;\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & phaseMask;\r\n            let noiseSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\r\n\r\n            const inputSample: number = noiseSample*sign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.expressionStarts[0].\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n        // Flagged as invalid because unused by current settings, skip\r\n        if (instrument.invalidModulators[mod]) return;\r\n\r\n        let setting: number = instrument.modulators[mod];\r\n\r\n        // Generate list of used instruments\r\n        let usedInstruments: number[] = [];\r\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\r\n            usedInstruments.push(0);\r\n        } else {\r\n            // All\r\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                    usedInstruments.push(i);\r\n                }\r\n            }\r\n            // Active\r\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\r\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\r\n            } else {\r\n                usedInstruments.push(instrument.modInstruments[mod]);\r\n            }\r\n        }\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n\r\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n\r\n            // If mods are being held (for smoother playback while recording mods), use those values instead.\r\n            for (let i: number = 0; i < synth.heldMods.length; i++) {\r\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                    if (synth.heldMods[i].setting == setting)\r\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n                }\r\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\r\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n                }\r\n            }\r\n\r\n            // Reset arps, but only at the start of the note\r\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\r\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\r\n            }\r\n            // Denote next bar skip\r\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\r\n                synth.wantToSkip = true;\r\n            }\r\n            // Extra info for eq filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.eqFilterType) {\r\n\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\r\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\r\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Extra info for note filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.noteFilterType) {\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\r\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number, synth: Synth, tone: Tone): number {\r\n        const randOff: number = Math.abs(Math.sin((tone.noteStartPart+tone.noteEndPart+tone.pitches[0]+synth.bar)*10000)) //Makes the random noise deterministric so that invert wave works properly\r\n        let phase: number = randOff * waveLength;\r\n        const phaseMask: number = waveLength - 1;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & phaseMask;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & phaseMask;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < stride; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % waveLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static noteSizeToVolumeMult(size: number): number {\r\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\r\n    }\r\n    public static volumeMultToNoteSize(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\r\n    }\r\n\r\n    public static fadeInSettingToSeconds(setting: number): number {\r\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\r\n    }\r\n    public static secondsToFadeInSetting(seconds: number): number {\r\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\r\n    }\r\n    public static fadeOutSettingToTicks(setting: number): number {\r\n        return Config.fadeOutTicks[setting];\r\n    }\r\n    public static ticksToFadeOutSetting(ticks: number): number {\r\n        let lower: number = Config.fadeOutTicks[0];\r\n        if (ticks <= lower) return 0;\r\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\r\n            let upper: number = Config.fadeOutTicks[i];\r\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\r\n            lower = upper;\r\n        }\r\n        return Config.fadeOutTicks.length - 1;\r\n    }\r\n\r\n    public static detuneToCents(detune: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return detune * (Math.abs(detune) + 1) / 2;\r\n        return detune - Config.detuneCenter;\r\n    }\r\n    public static centsToDetune(cents: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\r\n        return cents + Config.detuneCenter;\r\n    }\r\n\r\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\r\n        if (waveform != 3) {\r\n            return Config.operatorWaves[waveform];\r\n        }\r\n        else {\r\n            return Config.pwmOperatorWaves[pulseWidth];\r\n        }\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n\r\n    public static fittingPowerOfTwo(x: number): number {\r\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\r\n    }\r\n\r\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\r\n        let reset: boolean = false;\r\n        for (const filter of filters) {\r\n            const output1: number = Math.abs(filter.output1);\r\n            const output2: number = Math.abs(filter.output2);\r\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\r\n            if (!(output1 < 100) || !(output2 < 100)) {\r\n                reset = true;\r\n                break;\r\n            }\r\n            if (output1 < epsilon) filter.output1 = 0.0;\r\n            if (output2 < epsilon) filter.output2 = 0.0;\r\n        }\r\n        if (reset) {\r\n            for (const filter of filters) {\r\n                filter.output1 = 0.0;\r\n                filter.output2 = 0.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\r\n        while (true) {\r\n            lastIndex--;\r\n            const index: number = lastIndex & mask;\r\n            const sample: number = Math.abs(delayLine[index]);\r\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\r\n            delayLine[index] = 0.0;\r\n        }\r\n    }\r\n\r\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\r\n        for (let i: number = 0; i < filterCount; i++) {\r\n            const filter: DynamicBiquadFilter = filters[i];\r\n            const output1: number = filter.output1;\r\n            const output2: number = filter.output2;\r\n            const a1: number = filter.a1;\r\n            const a2: number = filter.a2;\r\n            const b0: number = filter.b0;\r\n            const b1: number = filter.b1;\r\n            const b2: number = filter.b2;\r\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\r\n            filter.a1 = a1 + filter.a1Delta;\r\n            filter.a2 = a2 + filter.a2Delta;\r\n            if (filter.useMultiplicativeInputCoefficients) {\r\n                filter.b0 = b0 * filter.b0Delta;\r\n                filter.b1 = b1 * filter.b1Delta;\r\n                filter.b2 = b2 * filter.b2Delta;\r\n            } else {\r\n                filter.b0 = b0 + filter.b0Delta;\r\n                filter.b1 = b1 + filter.b1Delta;\r\n                filter.b2 = b2 + filter.b2Delta;\r\n            }\r\n            filter.output2 = output1;\r\n            filter.output1 = sample;\r\n            // Updating the input values is waste if the next filter doesn't exist...\r\n            input2 = output2;\r\n            input1 = output1;\r\n        }\r\n        return sample;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\t\t\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\t\t\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\t\t\r\n\tpublic commit(): void {}\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\t\t\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\t\t\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\t\t\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\t\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tprivate _committed: boolean;\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t\tthis._committed = false;\r\n\t}\r\n\r\n\tpublic checkFirst(): UndoableChange | null {\r\n\t\tif (this._changes.length > 0)\r\n\t\t\treturn this._changes[0];\r\n\t\treturn null;\r\n    }\r\n\t\t\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\t\t\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprotected _doBackwards(): void {\r\n\t\t\tfor (let i: number = this._changes.length-1; i >= 0 ; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isCommitted(): boolean {\r\n\t\treturn this._committed;\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tthis._committed = true;\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Algorithm, Dictionary, FilterType, SustainType, InstrumentType, EffectType, AutomationTarget, Config, effectsIncludeDistortion } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, FilterSettings, FilterControlPoint, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Slider } from \"./HTMLWrapper\";\r\n\r\nexport function patternsContainSameInstruments(pattern1Instruments: number[], pattern2Instruments: number[]): boolean {\r\n    const pattern2Has1Instruments: boolean = pattern1Instruments.every(instrument => pattern2Instruments.indexOf(instrument) != -1);\r\n    const pattern1Has2Instruments: boolean = pattern2Instruments.every(instrument => pattern1Instruments.indexOf(instrument) != -1);\r\n    return pattern2Has1Instruments && pattern1Has2Instruments && pattern2Instruments.length == pattern1Instruments.length;\r\n}\r\n\r\nexport function discardInvalidPatternInstruments(instruments: number[], song: Song, channelIndex: number) {\r\n    const uniqueInstruments: Set<number> = new Set(instruments);\r\n    instruments.length = 0;\r\n    instruments.push(...uniqueInstruments);\r\n    for (let i: number = 0; i < instruments.length; i++) {\r\n        if (instruments[i] >= song.channels[channelIndex].instruments.length) {\r\n            instruments.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n    if (instruments.length > song.getMaxInstrumentsPerPattern(channelIndex)) {\r\n        instruments.length = song.getMaxInstrumentsPerPattern(channelIndex);\r\n    }\r\n    if (instruments.length <= 0) {\r\n        instruments[0] = 0;\r\n    }\r\n}\r\n\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n    for (const note of pattern.notes) {\r\n        for (const pitch of note.pitches) {\r\n            for (const pin of note.pins) {\r\n                const key: number = (pitch + pin.interval) % 12;\r\n                if (!flags[key]) {\r\n                    flags[key] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n    const newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n    const oldScale: number[] = [];\r\n    const newScale: number[] = [];\r\n    for (let i: number = 0; i < 12; i++) {\r\n        if (oldScaleFlags[i]) oldScale.push(i);\r\n        if (newScaleFlags[i]) newScale.push(i);\r\n    }\r\n    const largerToSmaller: boolean = oldScale.length > newScale.length;\r\n    const smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n    const largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n    const roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n    let bestScore: number = Number.MAX_SAFE_INTEGER;\r\n    let bestIndexMap: number[] = [];\r\n    const stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n    while (stack.length > 0) {\r\n        const indexMap: number[] = stack.pop()!;\r\n\r\n        if (indexMap.length == smallerScale.length) {\r\n            // Score this mapping.\r\n            let score: number = 0;\r\n            for (let i: number = 0; i < indexMap.length; i++) {\r\n                score += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n                if (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n                    // Penalize changing roles.\r\n                    score += 0.75;\r\n                }\r\n            }\r\n            if (bestScore > score) {\r\n                bestScore = score;\r\n                bestIndexMap = indexMap;\r\n            }\r\n        } else {\r\n            // Recursively choose next indices for mapping.\r\n            const lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n            const highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n            for (let i: number = lowIndex; i <= highIndex; i++) {\r\n                stack.push(indexMap.concat(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    const sparsePitchMap: number[][] = [];\r\n    for (let i: number = 0; i < bestIndexMap.length; i++) {\r\n        const smallerScalePitch = smallerScale[i];\r\n        const largerScalePitch = largerScale[bestIndexMap[i]];\r\n        sparsePitchMap[i] = largerToSmaller\r\n            ? [largerScalePitch, smallerScalePitch]\r\n            : [smallerScalePitch, largerScalePitch];\r\n    }\r\n\r\n    // To make it easier to wrap around.\r\n    sparsePitchMap.push([12, 12]);\r\n    newScale.push(12);\r\n\r\n    let sparseIndex: number = 0;\r\n    const fullPitchMap: number[] = [];\r\n    for (let i: number = 0; i < 12; i++) {\r\n        const oldLow: number = sparsePitchMap[sparseIndex][0];\r\n        const newLow: number = sparsePitchMap[sparseIndex][1];\r\n        const oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n        const newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n        if (i == oldHigh - 1) sparseIndex++;\r\n\r\n        const transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n        let nearestPitch: number = 0;\r\n        let nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n        for (const newPitch of newScale) {\r\n            let distance: number = Math.abs(newPitch - transformedPitch);\r\n            if (roles[newPitch] != roles[i]) {\r\n                // Again, penalize changing roles.\r\n                distance += 0.1;\r\n            }\r\n            if (nearestPitchDistance > distance) {\r\n                nearestPitchDistance = distance;\r\n                nearestPitch = newPitch;\r\n            }\r\n        }\r\n\r\n        fullPitchMap[i] = nearestPitch;\r\n    }\r\n\r\n    return fullPitchMap;\r\n}\r\n\r\nfunction removeRedundantPins(pins: NotePin[]): void {\r\n    for (let i: number = 1; i < pins.length - 1;) {\r\n        if (pins[i - 1].interval == pins[i].interval &&\r\n            pins[i].interval == pins[i + 1].interval &&\r\n            pins[i - 1].size == pins[i].size &&\r\n            pins[i].size == pins[i + 1].size) {\r\n            pins.splice(i, 1);\r\n        } else {\r\n            i++;\r\n        }\r\n    }\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n    // Create a new note, and interpret the pitch bend and size events\r\n    // to determine where we need to insert pins to control interval and volume.\r\n    const newNote: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\r\n    newNote.pins.length = 0;\r\n    newNote.pitches.length = 0;\r\n    const newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n    for (const pitch of oldNote.pitches) {\r\n        newNote.pitches.push(pitch);\r\n    }\r\n\r\n    for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n        const pin: NotePin = oldNote.pins[pinIndex];\r\n        const newPinTime: number = pin.time + timeOffset;\r\n        if (newPinTime < 0) {\r\n            if (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n            const nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n            const nextPinTime: number = nextPin.time + timeOffset;\r\n            if (nextPinTime > 0) {\r\n                // Insert an interpolated pin at the start of the new note.\r\n                const ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n                newNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.size + ratio * (nextPin.size - pin.size))));\r\n\r\n            }\r\n        } else if (newPinTime <= newNoteLength) {\r\n            newNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.size));\r\n        } else {\r\n            if (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n            const prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n            const prevPinTime: number = prevPin.time + timeOffset;\r\n            if (prevPinTime < newNoteLength) {\r\n                // Insert an interpolated pin at the end of the new note.\r\n                const ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n                newNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.size + ratio * (pin.size - prevPin.size))));\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n    const offsetInterval: number = newNote.pins[0].interval;\r\n    for (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n        newNote.pitches[pitchIdx] += offsetInterval;\r\n    }\r\n    for (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n        newNote.pins[pinIdx].interval -= offsetInterval;\r\n    }\r\n\r\n    let joinedWithPrevNote: boolean = false;\r\n    if (newNote.start == 0) {\r\n        newNote.continuesLastPattern = (timeOffset < 0 || oldNote.continuesLastPattern);\r\n    } else {\r\n        newNote.continuesLastPattern = false;\r\n        if (newNotes.length > 0 && oldNote.continuesLastPattern) {\r\n            const prevNote: Note = newNotes[newNotes.length - 1];\r\n            if (prevNote.end == newNote.start && Synth.adjacentNotesHaveMatchingPitches(prevNote, newNote)) {\r\n                joinedWithPrevNote = true;\r\n                const newIntervalOffset: number = prevNote.pins[prevNote.pins.length - 1].interval;\r\n                const newTimeOffset: number = prevNote.end - prevNote.start;\r\n                for (let pinIndex: number = 1; pinIndex < newNote.pins.length; pinIndex++) {\r\n                    const tempPin: NotePin = newNote.pins[pinIndex];\r\n                    const transformedPin: NotePin = makeNotePin(tempPin.interval + newIntervalOffset, tempPin.time + newTimeOffset, tempPin.size);\r\n                    prevNote.pins.push(transformedPin);\r\n                    prevNote.end = prevNote.start + transformedPin.time;\r\n                }\r\n                removeRedundantPins(prevNote.pins);\r\n            }\r\n        }\r\n    }\r\n    if (!joinedWithPrevNote) {\r\n        newNotes.push(newNote);\r\n    }\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n    constructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n        super();\r\n\r\n        const pitchChannels: Channel[] = [];\r\n        const noiseChannels: Channel[] = [];\r\n        const modChannels: Channel[] = []\r\n\r\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            const oldChannel: Channel = doc.song.channels[channelIndex];\r\n            const newChannel: Channel = new Channel();\r\n\r\n            if (channelIndex < doc.song.pitchChannelCount) {\r\n                pitchChannels.push(newChannel);\r\n            } else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n                noiseChannels.push(newChannel);\r\n            }\r\n            else {\r\n                modChannels.push(newChannel);\r\n            }\r\n\r\n            newChannel.muted = oldChannel.muted;\r\n            newChannel.octave = oldChannel.octave;\r\n            newChannel.name = oldChannel.name;\r\n\r\n            for (const instrument of oldChannel.instruments) {\r\n                newChannel.instruments.push(instrument);\r\n            }\r\n\r\n            const oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n            const newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n            let currentBar: number = -1;\r\n            let pattern: Pattern | null = null;\r\n\r\n            for (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n                const oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n                if (oldPattern != null) {\r\n                    const oldBarStart: number = oldBar * oldPartsPerBar;\r\n                    for (const oldNote of oldPattern.notes) {\r\n\r\n                        const absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n                        const absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n                        const startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n                        const endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n                        for (let bar: number = startBar; bar < endBar; bar++) {\r\n                            const barStartPart: number = bar * newPartsPerBar;\r\n                            const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n                            const noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n                            if (noteStartPart < noteEndPart) {\r\n\r\n                                // Ensure a pattern exists for the current bar before inserting notes into it.\r\n                                if (currentBar < bar || pattern == null) {\r\n                                    currentBar++;\r\n                                    while (currentBar < bar) {\r\n                                        newChannel.bars[currentBar] = 0;\r\n                                        currentBar++;\r\n                                    }\r\n                                    pattern = new Pattern();\r\n                                    newChannel.patterns.push(pattern);\r\n                                    newChannel.bars[currentBar] = newChannel.patterns.length;\r\n                                    pattern.instruments.length = 0;\r\n                                    pattern.instruments.push(...oldPattern.instruments);\r\n                                }\r\n\r\n                                // This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n                                pattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n                                projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        removeDuplicatePatterns(pitchChannels);\r\n        removeDuplicatePatterns(noiseChannels);\r\n        removeDuplicatePatterns(modChannels);\r\n        this.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n    }\r\n}\r\n\r\nclass ChangePins extends UndoableChange {\r\n    protected _oldStart: number;\r\n    protected _newStart: number;\r\n    protected _oldEnd: number;\r\n    protected _newEnd: number;\r\n    protected _oldPins: NotePin[];\r\n    protected _newPins: NotePin[];\r\n    protected _oldPitches: number[];\r\n    protected _newPitches: number[];\r\n    protected _oldContinuesLastPattern: boolean;\r\n    protected _newContinuesLastPattern: boolean;\r\n    constructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n        super(false);\r\n        this._oldStart = this._note.start;\r\n        this._oldEnd = this._note.end;\r\n        this._newStart = this._note.start;\r\n        this._newEnd = this._note.end;\r\n        this._oldPins = this._note.pins;\r\n        this._newPins = [];\r\n        this._oldPitches = this._note.pitches;\r\n        this._newPitches = [];\r\n        this._oldContinuesLastPattern = this._note.continuesLastPattern;\r\n        this._newContinuesLastPattern = this._note.continuesLastPattern;\r\n    }\r\n\r\n    protected _finishSetup(continuesLastPattern?: boolean): void {\r\n        for (let i: number = 0; i < this._newPins.length - 1;) {\r\n            if (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n                this._newPins.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        removeRedundantPins(this._newPins);\r\n\r\n        const firstInterval: number = this._newPins[0].interval;\r\n        const firstTime: number = this._newPins[0].time;\r\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\r\n            this._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n        }\r\n        for (let i: number = 0; i < this._newPins.length; i++) {\r\n            this._newPins[i].interval -= firstInterval;\r\n            this._newPins[i].time -= firstTime;\r\n        }\r\n        this._newStart = this._oldStart + firstTime;\r\n        this._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n        if (continuesLastPattern != undefined) {\r\n            this._newContinuesLastPattern = continuesLastPattern;\r\n        }\r\n        if (this._newStart != 0) {\r\n            this._newContinuesLastPattern = false;\r\n        }\r\n\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pins = this._newPins;\r\n        this._note.pitches = this._newPitches;\r\n        this._note.start = this._newStart;\r\n        this._note.end = this._newEnd;\r\n        this._note.continuesLastPattern = this._newContinuesLastPattern;\r\n        if (this._doc != null) this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pins = this._oldPins;\r\n        this._note.pitches = this._oldPitches;\r\n        this._note.start = this._oldStart;\r\n        this._note.end = this._oldEnd;\r\n        this._note.continuesLastPattern = this._oldContinuesLastPattern;\r\n        if (this._doc != null) this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (instrument.preset != instrument.type) {\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n    constructor(doc: SongDocument, newArray: Float32Array) {\r\n        super();\r\n        const oldArray: Float32Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n        var comparisonResult: boolean = true;\r\n        for (let i: number = 0; i < oldArray.length; i++) {\r\n            if (oldArray[i] != newArray[i]) {\r\n                comparisonResult = false;\r\n                i = oldArray.length;\r\n            }\r\n        }\r\n        if (comparisonResult == false) {\r\n            let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n            for (let i: number = 0; i < newArray.length; i++) {\r\n                instrument.customChipWave[i] = newArray[i];\r\n            }\r\n\r\n            let sum: number = 0.0;\r\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                sum += instrument.customChipWave[i];\r\n            }\r\n            const average: number = sum / instrument.customChipWave.length;\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = instrument.customChipWave[i] - average;\r\n                instrument.customChipWaveIntegral[i] = cumulative;\r\n            }\r\n\r\n            instrument.customChipWaveIntegral[64] = 0.0;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.preset;\r\n        if (oldValue != newValue) {\r\n            const preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n            if (preset != null) {\r\n                if (preset.customType != undefined) {\r\n                    instrument.type = preset.customType;\r\n                    if (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].customInterval) {\r\n                        instrument.chord = 0;\r\n                    }\r\n                    instrument.clearInvalidEnvelopeTargets();\r\n                } else if (preset.settings != undefined) {\r\n                    const tempVolume: number = instrument.volume;\r\n                    const tempPan: number = instrument.pan;\r\n                    const tempPanDelay = instrument.panDelay;\r\n                    //const usesPanning: boolean = effectsIncludePanning(instrument.effects);\r\n                    instrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n                    instrument.volume = tempVolume;\r\n                    instrument.pan = tempPan;\r\n                    instrument.panDelay = tempPanDelay;\r\n                    //@jummbus - Disable this check, pan will be on by default.\r\n                    //if (usesPanning && instrument.pan != Config.panCenter) {\r\n                        instrument.effects = (instrument.effects | (1 << EffectType.panning));\r\n                    //}\r\n                }\r\n            }\r\n            instrument.preset = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n\r\n        interface ItemWeight<T> {\r\n            readonly item: T;\r\n            readonly weight: number;\r\n        }\r\n        function selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n            let total: number = 0;\r\n            for (const entry of entries) {\r\n                total += entry.weight;\r\n            }\r\n            let random: number = Math.random() * total;\r\n            for (const entry of entries) {\r\n                random -= entry.weight;\r\n                if (random <= 0.0) return entry.item;\r\n            }\r\n            return entries[(Math.random() * entries.length) | 0].item;\r\n        }\r\n        function selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n            const entries: Array<ItemWeight<number>> = [];\r\n            for (let i: number = min; i <= max; i++) {\r\n                entries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n            }\r\n            return selectWeightedRandom(entries);\r\n        }\r\n\r\n        class PotentialFilterPoint {\r\n            constructor(\r\n                public readonly chance: number,\r\n                public readonly type: FilterType,\r\n                public readonly minFreq: number,\r\n                public readonly maxFreq: number,\r\n                public readonly centerHz: number,\r\n                public readonly centerGain: number,\r\n            ) { };\r\n        }\r\n        function applyFilterPoints(filter: FilterSettings, potentialPoints: ReadonlyArray<PotentialFilterPoint>): void {\r\n            filter.reset();\r\n            const usedFreqs: number[] = [];\r\n            for (const potentialPoint of potentialPoints) {\r\n                if (Math.random() > potentialPoint.chance) continue;\r\n                const point: FilterControlPoint = new FilterControlPoint();\r\n                point.type = potentialPoint.type;\r\n                point.freq = selectCurvedDistribution(potentialPoint.minFreq, potentialPoint.maxFreq, FilterControlPoint.getRoundedSettingValueFromHz(potentialPoint.centerHz), 1.0 / Config.filterFreqStep);\r\n                point.gain = selectCurvedDistribution(0, Config.filterGainRange - 1, Config.filterGainCenter + potentialPoint.centerGain, 2.0 / Config.filterGainStep);\r\n                if (point.type == FilterType.peak && point.gain == Config.filterGainCenter) continue; // skip pointless points. :P\r\n                if (usedFreqs.includes(point.freq)) continue;\r\n                usedFreqs.push(point.freq);\r\n                filter.controlPoints[filter.controlPointCount] = point;\r\n                filter.controlPointCount++;\r\n            }\r\n        }\r\n\r\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.effects = 1 << EffectType.panning; // disable all existing effects except panning, which should always be on.\r\n        instrument.aliases = false;\r\n        instrument.envelopeCount = 0;\r\n\r\n        const midFreq: number = FilterControlPoint.getRoundedSettingValueFromHz(700.0);\r\n        const maxFreq: number = Config.filterFreqRange - 1;\r\n        applyFilterPoints(instrument.eqFilter, [\r\n            new PotentialFilterPoint(0.8, FilterType.lowPass, midFreq, maxFreq, 4000.0, -1),\r\n            new PotentialFilterPoint(0.4, FilterType.highPass, 0, midFreq - 1, 250.0, -1),\r\n            new PotentialFilterPoint(0.5, FilterType.peak, 0, maxFreq, 2000.0, 0),\r\n            new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\r\n            new PotentialFilterPoint(0.3, FilterType.peak, 0, maxFreq, 1000.0, 0),\r\n            new PotentialFilterPoint(0.2, FilterType.peak, 0, maxFreq, 500.0, 0),\r\n        ]);\r\n\r\n        if (Math.random() < 0.5) {\r\n            instrument.invertWave = true;\r\n        } else {\r\n            instrument.invertWave = false;\r\n        }\r\n\r\n        if (isNoise) {\r\n            const type: InstrumentType = selectWeightedRandom([\r\n                { item: InstrumentType.noise, weight: 1 },\r\n                { item: InstrumentType.spectrum, weight: 3 },\r\n                { item: InstrumentType.fm, weight: 2 },\r\n            ]);\r\n            instrument.preset = instrument.type = type;\r\n\r\n            instrument.fadeIn = (Math.random() < 0.8) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\r\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\r\n\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.transition;\r\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n                    { item: \"normal\", weight: 30 },\r\n                    { item: \"interrupt\", weight: 1 },\r\n                    { item: \"slide\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.2) {\r\n                instrument.effects |= 1 << EffectType.chord;\r\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n                    { item: \"strum\", weight: 2 },\r\n                    { item: \"arpeggio\", weight: 1 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 2);\r\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\r\n                    instrument.effects |= 1 << EffectType.pitchShift;\r\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                        { item: \"flare 1\", weight: 2 },\r\n                        { item: \"flare 2\", weight: 1 },\r\n                        { item: \"flare 3\", weight: 1 },\r\n                        { item: \"twang 1\", weight: 16 },\r\n                        { item: \"twang 2\", weight: 8 },\r\n                        { item: \"twang 3\", weight: 4 },\r\n                        { item: \"tremolo1\", weight: 1 },\r\n                        { item: \"tremolo2\", weight: 1 },\r\n                        { item: \"tremolo3\", weight: 1 },\r\n                        { item: \"decay 1\", weight: 4 },\r\n                        { item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 1 },\r\n                    ])].index);\r\n                }\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.vibrato;\r\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n                    { item: \"light\", weight: 2 },\r\n                    { item: \"delayed\", weight: 2 },\r\n                    { item: \"heavy\", weight: 1 },\r\n                    { item: \"shaky\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.8) {\r\n                instrument.effects |= 1 << EffectType.noteFilter;\r\n                applyFilterPoints(instrument.noteFilter, [\r\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\r\n                ]);\r\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                    { item: \"punch\", weight: 4 },\r\n                    { item: \"flare 1\", weight: 2 },\r\n                    { item: \"flare 2\", weight: 2 },\r\n                    { item: \"flare 3\", weight: 2 },\r\n                    { item: \"twang 1\", weight: 8 },\r\n                    { item: \"twang 2\", weight: 8 },\r\n                    { item: \"twang 3\", weight: 8 },\r\n                    { item: \"swell 1\", weight: 2 },\r\n                    { item: \"swell 2\", weight: 2 },\r\n                    { item: \"swell 3\", weight: 1 },\r\n                    { item: \"tremolo1\", weight: 1 },\r\n                    { item: \"tremolo2\", weight: 1 },\r\n                    { item: \"tremolo3\", weight: 1 },\r\n                    { item: \"tremolo4\", weight: 1 },\r\n                    { item: \"tremolo5\", weight: 1 },\r\n                    { item: \"tremolo6\", weight: 1 },\r\n                    { item: \"decay 1\", weight: 4 },\r\n                    { item: \"decay 2\", weight: 4 },\r\n                    { item: \"decay 3\", weight: 4 },\r\n                ])].index);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.distortion;\r\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.bitcrusher;\r\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, Config.bitcrusherFreqRange >> 1, 2);\r\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.chorus;\r\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\r\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\r\n                    instrument.effects |= 1 << EffectType.echo;\r\n                }\r\n            }\r\n            if (Math.random() < 0.5) {\r\n                instrument.effects |= 1 << EffectType.reverb;\r\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\r\n            }\r\n\r\n            function normalize(harmonics: number[]): void {\r\n                let max: number = 0;\r\n                for (const value of harmonics) {\r\n                    if (value > max) max = value;\r\n                }\r\n                for (let i: number = 0; i < harmonics.length; i++) {\r\n                    harmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n                }\r\n            }\r\n            switch (type) {\r\n                case InstrumentType.noise: {\r\n                    instrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n                } break;\r\n                case InstrumentType.spectrum: {\r\n                    const spectrumGenerators: Function[] = [\r\n                        (): number[] => {\r\n                            const spectrum: number[] = [];\r\n                            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                                spectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n                            }\r\n                            return spectrum;\r\n                        },\r\n                        (): number[] => {\r\n                            let current: number = 1.0;\r\n                            const spectrum: number[] = [current];\r\n                            for (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n                                current *= Math.pow(2, Math.random() - 0.52);\r\n                                spectrum[i] = current;\r\n                            }\r\n                            return spectrum;\r\n                        },\r\n                        (): number[] => {\r\n                            let current: number = 1.0;\r\n                            const spectrum: number[] = [current];\r\n                            for (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n                                current *= Math.pow(2, Math.random() - 0.52);\r\n                                spectrum[i] = current * Math.random();\r\n                            }\r\n                            return spectrum;\r\n                        },\r\n                    ];\r\n                    const generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n                    const spectrum: number[] = generator();\r\n                    normalize(spectrum);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                } break;\r\n                case InstrumentType.fm: {\r\n                    instrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n                    instrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n                    const algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n                    for (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n                        instrument.operators[i].frequency = selectCurvedDistribution(1, Config.operatorFrequencies.length, 0, 3);\r\n                        instrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n                        //TODO: HzOffset and Invert randomness\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 3 },\r\n                            { item: \"triangle\", weight: 4 },\r\n                            { item: \"sawtooth\", weight: 10 },\r\n                            { item: \"pulse width\", weight: 4 },\r\n                            { item: \"ramp\", weight: 10 },\r\n                            { item: \"trapezoid\", weight: 6 },\r\n                            { item: \"white noise\", weight: 10 },\r\n                        ])].index;\r\n                        if (instrument.operators[i].waveform == 3/*\"pulse width\"*/) {\r\n                            instrument.operators[i].pulseWidth = selectWeightedRandom([\r\n                                { item: 0, weight: 3 },\r\n                                { item: 1, weight: 5 },\r\n                                { item: 2, weight: 7 },\r\n                                { item: 3, weight: 10 },\r\n                                { item: 4, weight: 15 },\r\n                                { item: 5, weight: 25 }, // 50%\r\n                                { item: 6, weight: 15 },\r\n                                { item: 7, weight: 10 },\r\n                                { item: 8, weight: 7 },\r\n                                { item: 9, weight: 5 },\r\n                                { item: 9, weight: 3 },\r\n                            ]);\r\n                        }\r\n                    }\r\n                    for (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n                        instrument.operators[i].frequency = selectCurvedDistribution(4, Config.operatorFrequencies.length, 0, 3);\r\n                        instrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\r\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\r\n                                { item: \"punch\", weight: 1 },\r\n                                { item: \"flare 1\", weight: 1 },\r\n                                { item: \"flare 2\", weight: 1 },\r\n                                { item: \"flare 3\", weight: 1 },\r\n                                { item: \"twang 1\", weight: 1 },\r\n                                { item: \"twang 2\", weight: 1 },\r\n                                { item: \"twang 3\", weight: 1 },\r\n                                { item: \"swell 1\", weight: 1 },\r\n                                { item: \"swell 2\", weight: 1 },\r\n                                { item: \"swell 3\", weight: 1 },\r\n                                { item: \"tremolo1\", weight: 2 },\r\n                                { item: \"tremolo2\", weight: 2 },\r\n                                { item: \"tremolo3\", weight: 2 },\r\n                                { item: \"tremolo4\", weight: 2 },\r\n                                { item: \"tremolo5\", weight: 2 },\r\n                                { item: \"tremolo6\", weight: 2 },\r\n                                { item: \"decay 1\", weight: 2 },\r\n                                { item: \"decay 2\", weight: 2 },\r\n                                { item: \"decay 3\", weight: 2 },\r\n                            ])].index);\r\n                            instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                                { item: \"sine\", weight: 3 },\r\n                                { item: \"triangle\", weight: 4 },\r\n                                { item: \"sawtooth\", weight: 10 },\r\n                                { item: \"pulse width\", weight: 4 },\r\n                                { item: \"ramp\", weight: 10 },\r\n                                { item: \"trapezoid\", weight: 6 },\r\n                                { item: \"white noise\", weight: 10 },\r\n                            ])].index;\r\n                            if (instrument.operators[i].waveform == 3) {\r\n                                instrument.operators[i].pulseWidth = selectWeightedRandom([\r\n                                    { item: 0, weight: 3 },\r\n                                    { item: 1, weight: 5 },\r\n                                    { item: 2, weight: 7 },\r\n                                    { item: 3, weight: 10 },\r\n                                    { item: 4, weight: 15 },\r\n                                    { item: 5, weight: 25 }, // 50%\r\n                                    { item: 6, weight: 15 },\r\n                                    { item: 7, weight: 10 },\r\n                                    { item: 8, weight: 7 },\r\n                                    { item: 9, weight: 5 },\r\n                                    { item: 9, weight: 3 },\r\n                                ]);\r\n                            }\r\n                        }\r\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.05) {\r\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorFrequency\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\r\n                                { item: \"punch\", weight: 2 },\r\n                                { item: \"flare 1\", weight: 2 },\r\n                                { item: \"flare 2\", weight: 4 },\r\n                                { item: \"flare 3\", weight: 16 },\r\n                                { item: \"twang 1\", weight: 1 },\r\n                                { item: \"twang 2\", weight: 4 },\r\n                                { item: \"twang 3\", weight: 16 },\r\n                                { item: \"swell 1\", weight: 2 },\r\n                                { item: \"swell 2\", weight: 4 },\r\n                                { item: \"swell 3\", weight: 16 },\r\n                                { item: \"decay 1\", weight: 4 },\r\n                                { item: \"decay 2\", weight: 16 },\r\n                                { item: \"decay 3\", weight: 16 },\r\n                            ])].index);\r\n                        }\r\n                    }\r\n                    instrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n                    if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\r\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                            { item: \"punch\", weight: 1 },\r\n                                { item: \"flare 1\", weight: 1 },\r\n                                { item: \"flare 2\", weight: 1 },\r\n                                { item: \"flare 3\", weight: 1 },\r\n                                { item: \"twang 1\", weight: 1 },\r\n                                { item: \"twang 2\", weight: 1 },\r\n                                { item: \"twang 3\", weight: 1 },\r\n                                { item: \"swell 1\", weight: 1 },\r\n                                { item: \"swell 2\", weight: 1 },\r\n                                { item: \"swell 3\", weight: 1 },\r\n                                { item: \"tremolo1\", weight: 2 },\r\n                                { item: \"tremolo2\", weight: 2 },\r\n                                { item: \"tremolo3\", weight: 2 },\r\n                                { item: \"tremolo4\", weight: 2 },\r\n                                { item: \"tremolo5\", weight: 2 },\r\n                                { item: \"tremolo6\", weight: 2 },\r\n                                { item: \"decay 1\", weight: 2 },\r\n                                { item: \"decay 2\", weight: 2 },\r\n                                { item: \"decay 3\", weight: 2 },\r\n                        ])].index);\r\n                    }\r\n                } break;\r\n                default: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n            }\r\n        } else {\r\n            const type: InstrumentType = selectWeightedRandom([\r\n                { item: InstrumentType.chip, weight: 4 },\r\n                { item: InstrumentType.pwm, weight: 4 },\r\n                { item: InstrumentType.supersaw, weight: 5 },\r\n                // { item: InstrumentType.customChipWave, weight: 3 },\r\n                { item: InstrumentType.harmonics, weight: 5 },\r\n                { item: InstrumentType.pickedString, weight: 5 },\r\n                { item: InstrumentType.spectrum, weight: 1 },\r\n                { item: InstrumentType.fm, weight: 5 },\r\n            ]);\r\n            instrument.preset = instrument.type = type;\r\n\r\n            instrument.fadeIn = (Math.random() < 0.5) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\r\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\r\n            if (type == InstrumentType.chip || type == InstrumentType.harmonics || type == InstrumentType.pickedString) {\r\n                instrument.unison = Config.unisons.dictionary[selectWeightedRandom([\r\n                    { item: \"none\", weight: 10 },\r\n                    { item: \"shimmer\", weight: 5 },\r\n                    { item: \"hum\", weight: 4 },\r\n                    { item: \"honky tonk\", weight: 3 },\r\n                    { item: \"dissonant\", weight: 1 },\r\n                    { item: \"fifth\", weight: 1 },\r\n                    { item: \"octave\", weight: 2 },\r\n                    { item: \"bowed\", weight: 2 },\r\n                    { item: \"piano\", weight: 5 },\r\n                    { item: \"warbled\", weight: 3 },\r\n                ])].index;\r\n            }\r\n\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.transition;\r\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n                    { item: \"interrupt\", weight: 1 },\r\n                    { item: \"slide\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.2) {\r\n                instrument.effects |= 1 << EffectType.chord;\r\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n                    { item: \"strum\", weight: 2 },\r\n                    { item: \"arpeggio\", weight: 1 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.05) {\r\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 1);\r\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\r\n                    instrument.effects |= 1 << EffectType.pitchShift;\r\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                        { item: \"flare 1\", weight: 2 },\r\n                        { item: \"flare 2\", weight: 1 },\r\n                        { item: \"flare 3\", weight: 1 },\r\n                        { item: \"twang 1\", weight: 16 },\r\n                        { item: \"twang 2\", weight: 8 },\r\n                        { item: \"twang 3\", weight: 4 },\r\n                        { item: \"decay 1\", weight: 4 },\r\n                        { item: \"decay 2\", weight: 2 },\r\n                        { item: \"decay 3\", weight: 1 },\r\n                    ])].index);\r\n                }\r\n            }\r\n            if (Math.random() < 0.25) {\r\n                instrument.effects |= 1 << EffectType.vibrato;\r\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n                    { item: \"light\", weight: 2 },\r\n                    { item: \"delayed\", weight: 2 },\r\n                    { item: \"heavy\", weight: 1 },\r\n                    { item: \"shaky\", weight: 2 },\r\n                ])].index;\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.distortion;\r\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\r\n            }\r\n            if (effectsIncludeDistortion(instrument.effects) && Math.random() < 0.8) {\r\n                instrument.effects |= 1 << EffectType.noteFilter;\r\n                applyFilterPoints(instrument.noteFilter, [\r\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 2000.0, -1),\r\n                    new PotentialFilterPoint(0.9, FilterType.highPass, 0, midFreq - 1, 500.0, -1),\r\n                    new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\r\n                ]);\r\n            } else if (Math.random() < 0.5) {\r\n                instrument.effects |= 1 << EffectType.noteFilter;\r\n                applyFilterPoints(instrument.noteFilter, [\r\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\r\n                ]);\r\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                    { item: \"punch\", weight: 6 },\r\n                    { item: \"flare 1\", weight: 2 },\r\n                    { item: \"flare 2\", weight: 4 },\r\n                    { item: \"flare 3\", weight: 2 },\r\n                    { item: \"twang 1\", weight: 2 },\r\n                    { item: \"twang 2\", weight: 4 },\r\n                    { item: \"twang 3\", weight: 4 },\r\n                    { item: \"swell 1\", weight: 4 },\r\n                    { item: \"swell 2\", weight: 2 },\r\n                    { item: \"swell 3\", weight: 1 },\r\n                    { item: \"tremolo1\", weight: 1 },\r\n                    { item: \"tremolo2\", weight: 1 },\r\n                    { item: \"tremolo3\", weight: 1 },\r\n                    { item: \"tremolo4\", weight: 1 },\r\n                    { item: \"tremolo5\", weight: 1 },\r\n                    { item: \"tremolo6\", weight: 1 },\r\n                    { item: \"decay 1\", weight: 1 },\r\n                    { item: \"decay 2\", weight: 2 },\r\n                    { item: \"decay 3\", weight: 2 },\r\n                ])].index);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.bitcrusher;\r\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, 0, 2);\r\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.effects |= 1 << EffectType.chorus;\r\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\r\n            }\r\n            if (Math.random() < 0.1) {\r\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\r\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\r\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\r\n                    instrument.effects |= 1 << EffectType.echo;\r\n                }\r\n            }\r\n            if (Math.random() < 0.5) {\r\n                instrument.effects |= 1 << EffectType.reverb;\r\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\r\n            }\r\n\r\n            function normalize(harmonics: number[]): void {\r\n                let max: number = 0;\r\n                for (const value of harmonics) {\r\n                    if (value > max) max = value;\r\n                }\r\n                for (let i: number = 0; i < harmonics.length; i++) {\r\n                    harmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n                }\r\n            }\r\n            switch (type) {\r\n                case InstrumentType.chip: {\r\n                    instrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n                } break;\r\n                case InstrumentType.pwm:\r\n                case InstrumentType.supersaw: {\r\n\t\t\t\t\tif (type == InstrumentType.supersaw) {\r\n\t\t\t\t\t\tinstrument.supersawDynamism = selectCurvedDistribution(0, Config.supersawDynamismMax, Config.supersawDynamismMax, 2);\r\n\t\t\t\t\t\tinstrument.supersawSpread = selectCurvedDistribution(0, Config.supersawSpreadMax, Math.ceil(Config.supersawSpreadMax / 3), 4);\r\n\t\t\t\t\t\tinstrument.supersawShape = selectCurvedDistribution(0, Config.supersawShapeMax, 0, 4);\r\n\t\t\t\t\t}\r\n                    instrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\r\n                    if (Math.random() < 0.6) {\r\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                            { item: \"punch\", weight: 6 },\r\n                            { item: \"flare 1\", weight: 2 },\r\n                            { item: \"flare 2\", weight: 4 },\r\n                            { item: \"flare 3\", weight: 2 },\r\n                            { item: \"twang 1\", weight: 2 },\r\n                            { item: \"twang 2\", weight: 4 },\r\n                            { item: \"twang 3\", weight: 4 },\r\n                            { item: \"swell 1\", weight: 4 },\r\n                            { item: \"swell 2\", weight: 2 },\r\n                            { item: \"swell 3\", weight: 1 },\r\n                            { item: \"tremolo1\", weight: 1 },\r\n                            { item: \"tremolo2\", weight: 1 },\r\n                            { item: \"tremolo3\", weight: 1 },\r\n                            { item: \"tremolo4\", weight: 1 },\r\n                            { item: \"tremolo5\", weight: 1 },\r\n                            { item: \"tremolo6\", weight: 1 },\r\n                            { item: \"decay 1\", weight: 1 },\r\n                            { item: \"decay 2\", weight: 2 },\r\n                            { item: \"decay 3\", weight: 2 },\r\n                        ])].index);\r\n                    }\r\n                } break;\r\n                case InstrumentType.pickedString:\r\n                case InstrumentType.harmonics: {\r\n                    if (type == InstrumentType.pickedString) {\r\n                        instrument.stringSustain = (Math.random() * Config.stringSustainRange) | 0;\r\n                    }\r\n\r\n                    const harmonicGenerators: Function[] = [\r\n                        (): number[] => {\r\n                            const harmonics: number[] = [];\r\n                            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                                harmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n                            }\r\n                            harmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n                            return harmonics;\r\n                        },\r\n                        (): number[] => {\r\n                            let current: number = 1.0;\r\n                            const harmonics: number[] = [current];\r\n                            for (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n                                current *= Math.pow(2, Math.random() - 0.55);\r\n                                harmonics[i] = current;\r\n                            }\r\n                            return harmonics;\r\n                        },\r\n                        (): number[] => {\r\n                            let current: number = 1.0;\r\n                            const harmonics: number[] = [current];\r\n                            for (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n                                current *= Math.pow(2, Math.random() - 0.55);\r\n                                harmonics[i] = current * Math.random();\r\n                            }\r\n                            return harmonics;\r\n                        },\r\n                    ];\r\n                    const generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n                    const harmonics: number[] = generator();\r\n                    normalize(harmonics);\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        instrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n                    }\r\n                    instrument.harmonicsWave.markCustomWaveDirty();\r\n                } break;\r\n                case InstrumentType.spectrum: {\r\n                    const spectrum: number[] = [];\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n                        if (isHarmonic) {\r\n                            spectrum[i] = Math.pow(Math.random(), 0.25);\r\n                        } else {\r\n                            spectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n                        }\r\n                    }\r\n                    normalize(spectrum);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                } break;\r\n                case InstrumentType.fm: {\r\n                    instrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n                    instrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n                    const algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n                    for (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n                        instrument.operators[i].frequency = selectCurvedDistribution(1, Config.operatorFrequencies.length, 0, 3);\r\n                        instrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                            { item: \"sine\", weight: 10 },\r\n                            { item: \"triangle\", weight: 6 },\r\n                            { item: \"sawtooth\", weight: 3 },\r\n                            { item: \"pulse width\", weight: 6 },\r\n                            { item: \"ramp\", weight: 3 },\r\n                            { item: \"trapezoid\", weight: 4 },\r\n                        ])].index;\r\n                        if (instrument.operators[i].waveform == 3/*\"pulse width\"*/) {\r\n                            instrument.operators[i].pulseWidth = selectWeightedRandom([\r\n                                { item: 0, weight: 3 },\r\n                                { item: 1, weight: 5 },\r\n                                { item: 2, weight: 7 },\r\n                                { item: 3, weight: 10 },\r\n                                { item: 4, weight: 15 },\r\n                                { item: 5, weight: 25 }, // 50%\r\n                                { item: 6, weight: 15 },\r\n                                { item: 7, weight: 10 },\r\n                                { item: 8, weight: 7 },\r\n                                { item: 9, weight: 5 },\r\n                                { item: 9, weight: 3 },\r\n                            ]);\r\n                        }\r\n                    }\r\n                    for (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n                        instrument.operators[i].frequency = selectCurvedDistribution(4, Config.operatorFrequencies.length, 0, 3);\r\n                        instrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\r\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\r\n                                { item: \"punch\", weight: 2 },\r\n                                { item: \"flare 1\", weight: 2 },\r\n                                { item: \"flare 2\", weight: 2 },\r\n                                { item: \"flare 3\", weight: 2 },\r\n                                { item: \"twang 1\", weight: 2 },\r\n                                { item: \"twang 2\", weight: 2 },\r\n                                { item: \"twang 3\", weight: 2 },\r\n                                { item: \"swell 1\", weight: 2 },\r\n                                { item: \"swell 2\", weight: 2 },\r\n                                { item: \"swell 3\", weight: 2 },\r\n                                { item: \"tremolo1\", weight: 1 },\r\n                                { item: \"tremolo2\", weight: 1 },\r\n                                { item: \"tremolo3\", weight: 1 },\r\n                                { item: \"tremolo4\", weight: 1 },\r\n                                { item: \"tremolo5\", weight: 1 },\r\n                                { item: \"tremolo6\", weight: 1 },\r\n                                { item: \"decay 1\", weight: 1 },\r\n                                { item: \"decay 2\", weight: 1 },\r\n                                { item: \"decay 3\", weight: 1 },\r\n                            ])].index);\r\n                            instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\r\n                                { item: \"sine\", weight: 10 },\r\n                                { item: \"triangle\", weight: 6 },\r\n                                { item: \"sawtooth\", weight: 3 },\r\n                                { item: \"pulse width\", weight: 6 },\r\n                                { item: \"ramp\", weight: 3 },\r\n                                { item: \"trapezoid\", weight: 4 },\r\n                            ])].index;\r\n                            if (instrument.operators[i].waveform == 3) {\r\n                                instrument.operators[i].pulseWidth = selectWeightedRandom([\r\n                                    { item: 0, weight: 3 },\r\n                                    { item: 1, weight: 5 },\r\n                                    { item: 2, weight: 7 },\r\n                                    { item: 3, weight: 10 },\r\n                                    { item: 4, weight: 15 },\r\n                                    { item: 5, weight: 25 }, // 50%\r\n                                    { item: 6, weight: 15 },\r\n                                    { item: 7, weight: 10 },\r\n                                    { item: 8, weight: 7 },\r\n                                    { item: 9, weight: 5 },\r\n                                    { item: 9, weight: 3 },\r\n                                ]);\r\n                            }\r\n                        }\r\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.05) {\r\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorFrequency\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\r\n                                { item: \"punch\", weight: 4 },\r\n                                { item: \"flare 1\", weight: 4 },\r\n                                { item: \"flare 2\", weight: 2 },\r\n                                { item: \"flare 3\", weight: 1 },\r\n                                { item: \"twang 1\", weight: 16 },\r\n                                { item: \"twang 2\", weight: 2 },\r\n                                { item: \"twang 3\", weight: 1 },\r\n                                { item: \"swell 1\", weight: 4 },\r\n                                { item: \"swell 2\", weight: 2 },\r\n                                { item: \"swell 3\", weight: 1 },\r\n                                { item: \"decay 1\", weight: 2 },\r\n                                { item: \"decay 2\", weight: 1 },\r\n                                { item: \"decay 3\", weight: 1 },\r\n                            ])].index);\r\n                        }\r\n                    }\r\n                    instrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n                    if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\r\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\r\n                            { item: \"punch\", weight: 2 },\r\n                            { item: \"flare 1\", weight: 2 },\r\n                            { item: \"flare 2\", weight: 2 },\r\n                            { item: \"flare 3\", weight: 2 },\r\n                            { item: \"twang 1\", weight: 2 },\r\n                            { item: \"twang 2\", weight: 2 },\r\n                            { item: \"twang 3\", weight: 2 },\r\n                            { item: \"swell 1\", weight: 2 },\r\n                            { item: \"swell 2\", weight: 2 },\r\n                            { item: \"swell 3\", weight: 2 },\r\n                            { item: \"tremolo1\", weight: 1 },\r\n                            { item: \"tremolo2\", weight: 1 },\r\n                            { item: \"tremolo3\", weight: 1 },\r\n                            { item: \"tremolo4\", weight: 1 },\r\n                            { item: \"tremolo5\", weight: 1 },\r\n                            { item: \"tremolo6\", weight: 1 },\r\n                            { item: \"decay 1\", weight: 1 },\r\n                            { item: \"decay 2\", weight: 1 },\r\n                            { item: \"decay 3\", weight: 1 },\r\n                        ])].index);\r\n                    }\r\n                } break;\r\n                default: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.transition;\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n            instrument.transition = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeToggleEffects extends Change {\r\n    constructor(doc: SongDocument, toggleFlag: number, useInstrument: Instrument | null) {\r\n        super();\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (useInstrument != null)\r\n            instrument = useInstrument;\r\n        const oldValue: number = instrument.effects;\r\n        const wasSelected: boolean = ((oldValue & (1 << toggleFlag)) != 0);\r\n        const newValue: number = wasSelected ? (oldValue & (~(1 << toggleFlag))) : (oldValue | (1 << toggleFlag));\r\n        instrument.effects = newValue;\r\n        // As a special case, toggling the panning effect doesn't remove the preset.\r\n        if (toggleFlag != EffectType.panning) instrument.preset = instrument.type;\r\n        // Remove AA when distortion is turned off.\r\n        if (toggleFlag == EffectType.distortion && wasSelected)\r\n            instrument.aliases = false;\r\n        if (wasSelected) instrument.clearInvalidEnvelopeTargets();\r\n        this._didSomething();\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n    constructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n        super();\r\n        if (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n        for (let bar: number = startBar; bar < startBar + width; bar++) {\r\n            for (let channelIndex: number = startChannel; channelIndex < startChannel + height; channelIndex++) {\r\n                if (doc.song.channels[channelIndex].bars[bar] != value) {\r\n                    doc.song.channels[channelIndex].bars[bar] = value;\r\n                    this._didSomething();\r\n                }\r\n            }\r\n        }\r\n\r\n        //Make mod channels shift viewed instrument over when pattern numbers change\r\n        if (startChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n            const pattern: Pattern | null = doc.getCurrentPattern();\r\n            if (pattern != null) {\r\n                doc.viewedInstrument[startChannel] = pattern.instruments[0];\r\n            }\r\n            else {\r\n                doc.viewedInstrument[startChannel] = 0;\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n    constructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n        super();\r\n        if (doc.song.barCount != newValue) {\r\n            for (const channel of doc.song.channels) {\r\n                if (atBeginning) {\r\n                    while (channel.bars.length < newValue) {\r\n                        channel.bars.unshift(0);\r\n                    }\r\n                    if (doc.song.barCount > newValue) {\r\n                        channel.bars.splice(0, doc.song.barCount - newValue);\r\n                    }\r\n                } else {\r\n                    while (channel.bars.length < newValue) {\r\n                        channel.bars.push(0);\r\n                    }\r\n                    channel.bars.length = newValue;\r\n                }\r\n            }\r\n\r\n            if (atBeginning) {\r\n                const diff: number = newValue - doc.song.barCount;\r\n                doc.bar = Math.max(0, doc.bar + diff);\r\n                if (diff < 0 || doc.barScrollPos > 0) {\r\n                    doc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n                }\r\n                doc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n            }\r\n            doc.bar = Math.min(doc.bar, newValue - 1);\r\n            doc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n            doc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n            doc.song.barCount = newValue;\r\n            doc.notifier.changed();\r\n\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n    constructor(doc: SongDocument, start: number, count: number) {\r\n        super();\r\n\r\n        const newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n        count = newLength - doc.song.barCount;\r\n        if (count == 0) return;\r\n\r\n        for (const channel of doc.song.channels) {\r\n            while (channel.bars.length < newLength) {\r\n                channel.bars.splice(start, 0, 0);\r\n            }\r\n        }\r\n        doc.song.barCount = newLength;\r\n\r\n        doc.bar += count;\r\n        doc.barScrollPos += count;\r\n        if (doc.song.loopStart >= start) {\r\n            doc.song.loopStart += count;\r\n        } else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n            doc.song.loopLength += count;\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n    constructor(doc: SongDocument, start: number, count: number) {\r\n        super();\r\n\r\n        for (const channel of doc.song.channels) {\r\n            channel.bars.splice(start, count);\r\n            if (channel.bars.length == 0) channel.bars.push(0);\r\n        }\r\n        doc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n        doc.bar = Math.max(0, doc.bar - count);\r\n\r\n        doc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n        if (doc.song.loopStart >= start) {\r\n            doc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n        } else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n            doc.song.loopLength -= count;\r\n        }\r\n        doc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n    constructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n        super();\r\n\r\n        // This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n        //if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n        doc.song.limitRatio = limitRatio;\r\n        doc.song.compressionRatio = compressionRatio;\r\n        doc.song.limitThreshold = limitThreshold;\r\n        doc.song.compressionThreshold = compressionThreshold;\r\n        doc.song.limitRise = limitRise;\r\n        doc.song.limitDecay = limitDecay;\r\n        doc.song.masterGain = masterGain;\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n        //}\r\n    }\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n    constructor(doc: SongDocument, selectionMin: number, selectionMax: number, offset: number) {\r\n        super();\r\n        // Change the order of two channels by swapping.\r\n        doc.song.channels.splice(selectionMin + offset, 0, ...doc.song.channels.splice(selectionMin, selectionMax - selectionMin + 1));\r\n\r\n        // Update mods for each channel\r\n        selectionMax = Math.max(selectionMax, selectionMin);\r\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\r\n                let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\r\n                for (let i: number = 0; i < Config.modCount; i++) {\r\n                    if (instrument.modChannels[i] >= selectionMin && instrument.modChannels[i] <= selectionMax) {\r\n                        instrument.modChannels[i] += offset;\r\n                    }\r\n                    else if (instrument.modChannels[i] >= selectionMin + offset && instrument.modChannels[i] <= selectionMax + offset) {\r\n                        instrument.modChannels[i] -= offset * (selectionMax - selectionMin + 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n\r\n    }\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n    constructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n        super();\r\n        if (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n            const newChannels: Channel[] = [];\r\n\r\n            function changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n                for (let i: number = 0; i < newCount; i++) {\r\n                    const channelIndex = i + newStart;\r\n                    const oldChannel = i + oldStart;\r\n                    if (i < oldCount) {\r\n                        newChannels[channelIndex] = doc.song.channels[oldChannel];\r\n                    } else {\r\n                        newChannels[channelIndex] = new Channel();\r\n                        newChannels[channelIndex].octave = octave;\r\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) {\r\n                            const instrument: Instrument = new Instrument(isNoise, isMod);\r\n                            if (!isMod) {\r\n                                const presetValue: number = pickRandomPresetValue(isNoise);\r\n                                const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n                                instrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n                                instrument.preset = presetValue;\r\n                            }\r\n                            newChannels[channelIndex].instruments[j] = instrument;\r\n                        }\r\n                        for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n                            newChannels[channelIndex].patterns[j] = new Pattern();\r\n                        }\r\n                        for (let j: number = 0; j < doc.song.barCount; j++) {\r\n                            newChannels[channelIndex].bars[j] = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            changeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 3, false, false);\r\n            changeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n            changeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n            let oldPitchCount: number = doc.song.pitchChannelCount;\r\n            doc.song.pitchChannelCount = newPitchChannelCount;\r\n            doc.song.noiseChannelCount = newNoiseChannelCount;\r\n            doc.song.modChannelCount = newModChannelCount;\r\n\r\n            for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n                doc.song.channels[channelIndex] = newChannels[channelIndex];\r\n            }\r\n            doc.song.channels.length = doc.song.getChannelCount();\r\n\r\n            doc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n            // Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n            for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                        let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\r\n                        let modChannel: number = instrument.modChannels[mod];\r\n\r\n                        // Boundary checking\r\n                        if ((modChannel >= doc.song.pitchChannelCount && modChannel < oldPitchCount) || modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n                            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\r\n                        }\r\n\r\n                        // Bump indices - new pitch channel added, bump all noise mods.\r\n                        if (modChannel >= oldPitchCount && oldPitchCount < newPitchChannelCount) {\r\n                            instrument.modChannels[mod] += newPitchChannelCount - oldPitchCount;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            doc.notifier.changed();\r\n\r\n            ColorConfig.resetColors();\r\n\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeAddChannel extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, index: number, isNoise: boolean, isMod: boolean) {\r\n\t\tsuper();\r\n\t\tconst newPitchChannelCount: number = doc.song.pitchChannelCount + (isNoise || isMod ? 0 : 1);\r\n        const newNoiseChannelCount: number = doc.song.noiseChannelCount + (!isNoise || isMod ? 0 : 1);\r\n        const newModChannelCount: number = doc.song.modChannelCount + (isNoise || !isMod ? 0 : 1);\r\n\r\n        if (newPitchChannelCount <= Config.pitchChannelCountMax && newNoiseChannelCount <= Config.noiseChannelCountMax && newModChannelCount <= Config.modChannelCountMax) {\r\n            const addedChannelIndex: number = isNoise ? doc.song.pitchChannelCount + doc.song.noiseChannelCount : doc.song.pitchChannelCount;\r\n            this.append(new ChangeChannelCount(doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n            if (addedChannelIndex - 1 >= index) {\r\n                this.append(new ChangeChannelOrder(doc, index, addedChannelIndex - 1, 1));\r\n            }\r\n\r\n            doc.synth.computeLatestModValues();\r\n            doc.recalcChannelNames = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRemoveChannel extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, minIndex: number, maxIndex: number) {\r\n        super();\r\n\r\n        const oldMax: number = maxIndex;\r\n\r\n        // Update modulators - if a higher index was removed, shift down\r\n        for (let modChannel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; modChannel < doc.song.channels.length; modChannel++) {\r\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[modChannel].instruments.length; instrumentIndex++) {\r\n                const modInstrument: Instrument = doc.song.channels[modChannel].instruments[instrumentIndex];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (modInstrument.modChannels[mod] >= minIndex && modInstrument.modChannels[mod] <= oldMax) {\r\n                        this.append(new ChangeModChannel(doc, mod, 0, modInstrument));\r\n                    }\r\n                    else if (modInstrument.modChannels[mod] > oldMax) {\r\n                        this.append(new ChangeModChannel(doc, mod, modInstrument.modChannels[mod] - (oldMax - minIndex + 1) + 2, modInstrument));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\t\twhile (maxIndex >= minIndex) {\r\n            const isNoise: boolean = doc.song.getChannelIsNoise(maxIndex);\r\n            const isMod: boolean = doc.song.getChannelIsMod(maxIndex);\r\n\t\t\tdoc.song.channels.splice(maxIndex, 1);\r\n            if (isNoise) {\r\n                doc.song.noiseChannelCount--;\r\n            } else if (isMod) {\r\n                doc.song.modChannelCount--;\r\n            } else {\r\n\t\t\t\tdoc.song.pitchChannelCount--;\r\n\t\t\t}\r\n            maxIndex--;\r\n\t\t}\r\n\t\t\r\n        if (doc.song.pitchChannelCount < Config.pitchChannelCountMin) {\r\n            this.append(new ChangeChannelCount(doc, Config.pitchChannelCountMin, doc.song.noiseChannelCount, doc.song.modChannelCount));\r\n        }\r\n\r\n        ColorConfig.resetColors();\r\n        doc.recalcChannelNames = true;\r\n\r\n\t\tthis.append(new ChangeChannelBar(doc, Math.max(0, minIndex - 1), doc.bar));\r\n\r\n        doc.synth.computeLatestModValues();\r\n\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n    constructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n        super();\r\n        const oldChannel: number = doc.channel;\r\n        const oldBar: number = doc.bar;\r\n        doc.channel = newChannel;\r\n        doc.bar = newBar;\r\n        if (!silently) {\r\n            doc.selection.scrollToSelectedPattern();\r\n        }\r\n        // Mod channels always jump to viewing the active instrument for the mod.\r\n        if (doc.song.getChannelIsMod(doc.channel)) {\r\n            const pattern: Pattern | null = doc.song!.getPattern(doc.channel, doc.bar);\r\n            if (pattern != null)\r\n                doc.viewedInstrument[doc.channel] = pattern.instruments[0];\r\n        }\r\n        doc.notifier.changed();\r\n        if (oldChannel != newChannel || oldBar != newBar) {\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeUnison extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.unison;\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n            instrument.unison = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.chord;\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n            instrument.chord = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.vibrato;\r\n        if (oldValue != newValue) {\r\n            instrument.vibrato = newValue;\r\n            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n            instrument.vibratoSpeed = 10; // default\r\n            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        let prevVibrato: number = instrument.vibrato;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato depth\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoDepth = newValue / 25;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeEnvelopeSpeed extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"envelope speed\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.envelopeSpeed = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        let prevVibrato: number = instrument.vibrato;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato speed\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoSpeed = newValue;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        let prevVibrato: number = instrument.vibrato;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato delay\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoDelay = newValue;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.vibratoType;\r\n        let prevVibrato: number = instrument.vibrato;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n            instrument.vibratoType = newValue;\r\n            instrument.vibrato = Config.vibratos.length; // Custom\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.arpeggioSpeed = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"arp speed\"].index, doc.channel, doc.getCurrentInstrument());\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.fastTwoNoteArp;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.fastTwoNoteArp = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.clicklessTransition;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.clicklessTransition = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeAliasing extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.aliases;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.aliases = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeDiscreteEnvelope extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.discreteEnvelope;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.discreteEnvelope = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n        super();\r\n        spectrumWave.markCustomWaveDirty();\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n        super();\r\n        harmonicsWave.markCustomWaveDirty();\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n    constructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n        if (oldValue != newValue) {\r\n            instrument.drumsetEnvelopes[drumIndex] = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n    protected _instrument: Instrument;\r\n    constructor(private _doc: SongDocument) {\r\n        super();\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n    }\r\n\r\n    public commit(): void {\r\n        if (!this.isNoop()) {\r\n            this._instrument.preset = this._instrument.type;\r\n            this._doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.pulseWidth = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pulse width\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSupersawDynamism extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.supersawDynamism = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"dynamism\"].index, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\nexport class ChangeSupersawSpread extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.supersawSpread = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"spread\"].index, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\nexport class ChangeSupersawShape extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.supersawShape = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"saw shape\"].index, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchShift extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.pitchShift = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDetune extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.detune = newValue + Config.detuneCenter;\r\n        doc.notifier.changed();\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"detune\"].index, doc.channel, doc.getCurrentInstrument());\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDistortion extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.distortion = newValue;\r\n        doc.notifier.changed();\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"distortion\"].index, doc.channel, doc.getCurrentInstrument());\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeBitcrusherFreq extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.bitcrusherFreq = newValue;\r\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"bit crush\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeBitcrusherQuantization extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"freq crush\"].index, doc.channel, doc.getCurrentInstrument());\r\n        this._instrument.bitcrusherQuantization = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeStringSustain extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.stringSustain = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"sustain\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeStringSustainType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: SustainType) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: SustainType = instrument.stringSustainType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.stringSustainType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEQFilterType extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\r\n        super();\r\n        instrument.eqFilterType = newValue;\r\n        if (newValue == true) { // To Simple - clear eq filter\r\n            instrument.eqFilter.reset();\r\n            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n            instrument.tmpEqFilterEnd = null;\r\n        }\r\n        else {\r\n            // To Advanced - convert filter\r\n            instrument.eqFilter.convertLegacySettings(instrument.eqFilterSimpleCut, instrument.eqFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\r\n            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n            instrument.tmpEqFilterEnd = null;\r\n        }\r\n        instrument.clearInvalidEnvelopeTargets();\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteFilterType extends Change {\r\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\r\n        super();\r\n        instrument.noteFilterType = newValue;\r\n        if (newValue == true) { // To Simple - clear note filter, kill modulators\r\n            instrument.noteFilter.reset();\r\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n            instrument.tmpNoteFilterEnd = null;\r\n        }\r\n        else {\r\n            // To Advanced - convert filter, kill modulators\r\n            instrument.noteFilter.convertLegacySettings(instrument.noteFilterSimpleCut, instrument.noteFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\r\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n            instrument.tmpNoteFilterEnd = null;\r\n        }\r\n        instrument.clearInvalidEnvelopeTargets();\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEQFilterSimpleCut extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.eqFilterSimpleCut = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt cut\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEQFilterSimplePeak extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.eqFilterSimplePeak = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt peak\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteFilterSimpleCut extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.noteFilterSimpleCut = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt cut\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteFilterSimplePeak extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.noteFilterSimplePeak = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt peak\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeFilterAddPoint extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _filterSettings: FilterSettings;\r\n    private _point: FilterControlPoint;\r\n    private _index: number;\r\n    private _envelopeTargetsAdd: number[] = [];\r\n    private _envelopeIndicesAdd: number[] = [];\r\n    private _envelopeTargetsRemove: number[] = [];\r\n    private _envelopeIndicesRemove: number[] = [];\r\n    constructor(doc: SongDocument, filterSettings: FilterSettings, point: FilterControlPoint, index: number, isNoteFilter: boolean, deletion: boolean = false) {\r\n        super(deletion);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = deletion ? this._instrument.preset : this._instrument.type;\r\n        this._instrumentPrevPreset = deletion ? this._instrument.type : this._instrument.preset;\r\n        this._filterSettings = filterSettings;\r\n        this._point = point;\r\n        this._index = index;\r\n\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\r\n            let target: number = this._instrument.envelopes[envelopeIndex].target;\r\n            let targetIndex: number = this._instrument.envelopes[envelopeIndex].index;\r\n            this._envelopeTargetsAdd.push(target);\r\n            this._envelopeIndicesAdd.push(targetIndex);\r\n            if (deletion) {\r\n                // When deleting a filter control point, find all envelopes that targeted that\r\n                // point and clear them, and all envelopes that targeted later points and\r\n                // decrement those to keep them in sync with the new list of points.\r\n                const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\r\n                if (automationTarget.isFilter && (automationTarget.effect == EffectType.noteFilter) == isNoteFilter) {\r\n                    if (automationTarget.maxCount == Config.filterMaxPoints) {\r\n                        if (targetIndex == index) {\r\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                            targetIndex = 0;\r\n                        } else if (targetIndex > index) {\r\n                            targetIndex--;\r\n                        }\r\n                    } else {\r\n                        if (filterSettings.controlPointCount <= 1) {\r\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                            targetIndex = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._envelopeTargetsRemove.push(target);\r\n            this._envelopeIndicesRemove.push(targetIndex);\r\n        }\r\n\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._filterSettings.controlPoints.splice(this._index, 0, this._point);\r\n        this._filterSettings.controlPointCount++;\r\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\r\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsAdd[envelopeIndex];\r\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesAdd[envelopeIndex];\r\n        }\r\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n        this._instrument.tmpEqFilterEnd = null;\r\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n        this._instrument.tmpNoteFilterEnd = null;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._filterSettings.controlPoints.splice(this._index, 1);\r\n        this._filterSettings.controlPointCount--;\r\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\r\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsRemove[envelopeIndex];\r\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesRemove[envelopeIndex];\r\n        }\r\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n        this._instrument.tmpEqFilterEnd = null;\r\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n        this._instrument.tmpNoteFilterEnd = null;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class FilterMoveData {\r\n    public point: FilterControlPoint;\r\n    public freq: number;\r\n    public gain: number;\r\n\r\n    constructor(usePoint: FilterControlPoint, useFreq: number, useGain: number) {\r\n        this.point = usePoint;\r\n        this.freq = useFreq;\r\n        this.gain = useGain;\r\n    }\r\n}\r\n\r\nexport class ChangeFilterMovePoint extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _point: FilterControlPoint;\r\n    private _oldFreq: number;\r\n    private _newFreq: number;\r\n    private _oldGain: number;\r\n    private _newGain: number;\r\n    public useNoteFilter: boolean;\r\n    public pointIndex: number;\r\n    public pointType: FilterType;\r\n    constructor(doc: SongDocument, point: FilterControlPoint, oldFreq: number, newFreq: number, oldGain: number, newGain: number, useNoteFilter: boolean, pointIndex: number) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = this._instrument.type;\r\n        this._instrumentPrevPreset = this._instrument.preset;\r\n        this._point = point;\r\n        this._oldFreq = oldFreq;\r\n        this._newFreq = newFreq;\r\n        this._oldGain = oldGain;\r\n        this._newGain = newGain;\r\n        this.useNoteFilter = useNoteFilter;\r\n        this.pointIndex = pointIndex;\r\n        this.pointType = point.type;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    public getMoveData(beforeChange: boolean): FilterMoveData {\r\n        if (beforeChange) {\r\n            return new FilterMoveData(this._point, this._oldFreq, this._oldGain);\r\n        }\r\n        return new FilterMoveData(this._point, this._newFreq, this._newGain);\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._point.freq = this._newFreq;\r\n        this._point.gain = this._newGain;\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._point.freq = this._oldFreq;\r\n        this._point.gain = this._oldGain;\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeFilterSettings extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _filterSettings: FilterSettings;\r\n    private _subFilters: (FilterSettings | null)[];\r\n    private _oldSubFilters: (FilterSettings | null)[];\r\n    private _oldSettings: FilterSettings;\r\n    private _useNoteFilter: boolean;\r\n    constructor(doc: SongDocument, settings: FilterSettings, oldSettings: FilterSettings, useNoteFilter: boolean, subFilters: (FilterSettings | null)[] | null = null, oldSubFilters: (FilterSettings | null)[] | null = null) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = this._instrument.type;\r\n        this._instrumentPrevPreset = this._instrument.preset;\r\n        this._oldSettings = oldSettings;\r\n        this._useNoteFilter = useNoteFilter;\r\n        this._filterSettings = settings;\r\n        if (subFilters != null && oldSubFilters != null) {\r\n            this._subFilters = subFilters;\r\n            this._oldSubFilters = oldSubFilters;\r\n        }\r\n        this._instrument.clearInvalidEnvelopeTargets();\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n\r\n        if (this._useNoteFilter) {\r\n            this._instrument.noteFilter = this._filterSettings;\r\n            if (this._subFilters != null)\r\n                this._instrument.noteSubFilters = this._subFilters;\r\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n            this._instrument.tmpNoteFilterEnd = null;\r\n        } else {\r\n            this._instrument.eqFilter = this._filterSettings;\r\n            if (this._subFilters != null)\r\n                this._instrument.eqSubFilters = this._subFilters;\r\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n            this._instrument.tmpEqFilterEnd = null;\r\n        }\r\n\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        this._instrument.clearInvalidEnvelopeTargets();\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        if (this._useNoteFilter) {\r\n            this._instrument.noteFilter = this._oldSettings;\r\n            if (this._oldSubFilters != null)\r\n                this._instrument.noteSubFilters = this._oldSubFilters;\r\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\r\n            this._instrument.tmpNoteFilterEnd = null;\r\n        } else {\r\n            this._instrument.eqFilter = this._oldSettings;\r\n            if (this._oldSubFilters != null)\r\n                this._instrument.eqSubFilters = this._oldSubFilters;\r\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\r\n            this._instrument.tmpEqFilterEnd = null;\r\n        }\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        this._instrument.clearInvalidEnvelopeTargets();\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeFadeInOut extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _instrument: Instrument;\r\n    private _instrumentPrevPreset: number;\r\n    private _instrumentNextPreset: number;\r\n    private _oldFadeIn: number;\r\n    private _oldFadeOut: number;\r\n    private _newFadeIn: number;\r\n    private _newFadeOut: number;\r\n    constructor(doc: SongDocument, fadeIn: number, fadeOut: number) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        this._instrumentNextPreset = this._instrument.type;\r\n        this._instrumentPrevPreset = this._instrument.preset;\r\n        this._oldFadeIn = this._instrument.fadeIn;\r\n        this._oldFadeOut = this._instrument.fadeOut;\r\n        this._newFadeIn = fadeIn;\r\n        this._newFadeOut = fadeOut;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._instrument.fadeIn = this._newFadeIn;\r\n        this._instrument.fadeOut = this._newFadeOut;\r\n        this._instrument.preset = this._instrumentNextPreset;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._instrument.fadeIn = this._oldFadeIn;\r\n        this._instrument.fadeOut = this._oldFadeOut;\r\n        this._instrument.preset = this._instrumentPrevPreset;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.algorithm;\r\n        if (oldValue != newValue) {\r\n            instrument.algorithm = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.feedbackType;\r\n        if (oldValue != newValue) {\r\n            instrument.feedbackType = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class ChangeOperatorWaveform extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].waveform;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].waveform = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorPulseWidth extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.operators[operatorIndex].pulseWidth = newValue;\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].frequency;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].frequency = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorHzOffset extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.operators[operatorIndex].hzOffset;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].hzOffset = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorInvert extends Change {\r\n    constructor(doc: SongDocument, operatorIndex: number, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: boolean = instrument.operators[operatorIndex].invert;\r\n        if (oldValue != newValue) {\r\n            instrument.operators[operatorIndex].invert = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n    public operatorIndex: number = 0;\r\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this.operatorIndex = operatorIndex;\r\n        this._instrument.operators[operatorIndex].amplitude = newValue;\r\n        // Not used currently as mod is implemented as multiplicative\r\n        //doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.feedbackAmplitude = newValue;\r\n        // Not used currently as mod is implemented as multiplicative\r\n        //doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeAddChannelInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const channel: Channel = doc.song.channels[doc.channel];\r\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n        const isMod: boolean = doc.song.getChannelIsMod(doc.channel);\r\n        const maxInstruments: number = doc.song.getMaxInstrumentsPerChannel();\r\n        if (channel.instruments.length >= maxInstruments) return;\r\n        const presetValue: number = pickRandomPresetValue(isNoise);\r\n        const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n        const instrument: Instrument = new Instrument(isNoise, isMod);\r\n        instrument.fromJsonObject(preset.settings, isNoise, isMod, false, false, 1);\r\n        instrument.preset = presetValue;\r\n        instrument.volume = 0;\r\n        channel.instruments.push(instrument);\r\n        if (!isMod) { // Mod channels lose information when changing set instrument\r\n            doc.viewedInstrument[doc.channel] = channel.instruments.length - 1;\r\n        }\r\n\r\n        // Determine if any mod instruments were setting 'all' or 'active'. If so, bump indices since there is now a new instrument in the list.\r\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIndex];\r\n                    let modInstrument: number = instrument.modInstruments[mod];\r\n                    let modChannel: number = instrument.modChannels[mod];\r\n\r\n                    if (modChannel == doc.channel && modInstrument >= doc.song.channels[modChannel].instruments.length-1 ) {\r\n                        instrument.modInstruments[mod]++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Also, make synth re-compute mod values, since 'all'/'active' mods now retroactively apply to this new instrument.\r\n        doc.synth.computeLatestModValues();\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeRemoveChannelInstrument extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const channel: Channel = doc.song.channels[doc.channel];\r\n        if (channel.instruments.length <= Config.instrumentCountMin) return;\r\n        const removedIndex: number = doc.viewedInstrument[doc.channel];\r\n        channel.instruments.splice(removedIndex, 1);\r\n        if (doc.song.patternInstruments) {\r\n            for (const pattern of channel.patterns) {\r\n                for (let i: number = 0; i < pattern.instruments.length; i++) {\r\n                    if (pattern.instruments[i] == removedIndex) {\r\n                        pattern.instruments.splice(i, 1);\r\n                        i--;\r\n                    } else if (pattern.instruments[i] > removedIndex) {\r\n                        pattern.instruments[i]--;\r\n                    }\r\n                }\r\n                if (pattern.instruments.length <= 0) {\r\n                    pattern.instruments[0] = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\r\n                    let modInstrument: number = instrument.modInstruments[mod];\r\n                    let modChannel: number = instrument.modChannels[mod];\r\n\r\n                    if (modChannel == doc.channel) {\r\n                        // Boundary checking - check if setting was previously higher index\r\n                        if (modInstrument > removedIndex) {\r\n                            instrument.modInstruments[mod]--;\r\n                        }\r\n                        // Boundary checking - check if setting was set to the last instrument before splice\r\n                        else if (modInstrument == removedIndex) {\r\n                            instrument.modInstruments[mod] = 0;\r\n                            instrument.modulators[mod] = 0;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeViewInstrument extends Change {\r\n    constructor(doc: SongDocument, index: number) {\r\n        super();\r\n        if (doc.viewedInstrument[doc.channel] != index) {\r\n            doc.viewedInstrument[doc.channel] = index;\r\n            if ( doc.channel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount )\r\n                doc.recentPatternInstruments[doc.channel] = [index];\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeInstrumentsFlags extends Change {\r\n    constructor(doc: SongDocument, newLayeredInstruments: boolean, newPatternInstruments: boolean) {\r\n        super();\r\n        const oldLayeredInstruments: boolean = doc.song.layeredInstruments;\r\n        const oldPatternInstruments: boolean = doc.song.patternInstruments;\r\n        if (oldLayeredInstruments == newLayeredInstruments && oldPatternInstruments == newPatternInstruments) return;\r\n        doc.song.layeredInstruments = newLayeredInstruments;\r\n        doc.song.patternInstruments = newPatternInstruments;\r\n\r\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = doc.song.channels[channelIndex];\r\n            if (channel.instruments.length > doc.song.getMaxInstrumentsPerChannel()) {\r\n                channel.instruments.length = doc.song.getMaxInstrumentsPerChannel();\r\n            }\r\n            for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n                const pattern: Pattern = channel.patterns[j];\r\n                if (!oldPatternInstruments && newPatternInstruments) {\r\n                    // patternInstruments was enabled, set up pattern instruments as appropriate.\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                        pattern.instruments[i] = i;\r\n                    }\r\n                    pattern.instruments.length = channel.instruments.length;\r\n                }\r\n                discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\n\r\nexport class ChangeKey extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        if (doc.song.key != newValue) {\r\n            doc.song.key = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n    constructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n        super();\r\n        this._doc.song.loopStart = this.newStart;\r\n        this._doc.song.loopLength = this.newLength;\r\n        this._doc.notifier.changed();\r\n        if (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _note: Note;\r\n    private _pitch: number;\r\n    private _index: number;\r\n    constructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n        super(deletion);\r\n        this._doc = doc;\r\n        this._note = note;\r\n        this._pitch = pitch;\r\n        this._index = index;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pitches.splice(this._index, 0, this._pitch);\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pitches.splice(this._index, 1);\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n    constructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].octave = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n\r\n        if (doc.song.rhythm != newValue) {\r\n            doc.song.rhythm = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n    constructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n        super();\r\n\r\n        // Erase the current contents of the selection:\r\n        this.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n        // Mods don't follow this sequence, so skipping for now.\r\n        let noteInsertionIndex: number = 0;\r\n        if (!doc.song.getChannelIsMod(doc.channel)) {\r\n            for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                if (pattern.notes[i].start < selectionStart) {\r\n                    if (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n                    noteInsertionIndex = i + 1;\r\n                } else if (pattern.notes[i].start < selectionEnd) {\r\n                    throw new Error();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            noteInsertionIndex = pattern.notes.length;\r\n        }\r\n\r\n        while (selectionStart < selectionEnd) {\r\n            for (const noteObject of notes) {\r\n                const noteStart: number = noteObject[\"start\"] + selectionStart;\r\n                const noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n                if (noteStart >= selectionEnd) break;\r\n                const note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"size\"], false);\r\n                note.pitches.length = 0;\r\n                for (const pitch of noteObject[\"pitches\"]) {\r\n                    note.pitches.push(pitch);\r\n                }\r\n                note.pins.length = 0;\r\n                for (const pin of noteObject[\"pins\"]) {\r\n                    note.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\r\n                }\r\n                note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true) && (note.start == 0);\r\n                pattern.notes.splice(noteInsertionIndex++, 0, note);\r\n                if (note.end > selectionEnd) {\r\n                    this.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n                }\r\n            }\r\n\r\n            selectionStart += oldPartDuration;\r\n        }\r\n\r\n        // Need to re-sort the notes by start time as they might change order because of paste.\r\n        if (pattern != null && doc.song.getChannelIsMod(doc.channel)) pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n    constructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n        super();\r\n        instrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeAppendInstrument extends ChangeGroup {\r\n    constructor(doc: SongDocument, channel: Channel, instrument: any) {\r\n        super();\r\n        let newInsturm: Instrument = new Instrument(instrument[\"isDrum\"], instrument[\"isMod\"])\r\n        newInsturm.fromJsonObject(instrument, instrument[\"isDrum\"], instrument[\"isMod\"], false, false);\r\n        channel.instruments.push(newInsturm);\r\n        this._didSomething();\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeSetPatternInstruments extends Change {\r\n    constructor(doc: SongDocument, channelIndex: number, instruments: number[], pattern: Pattern) {\r\n        super();\r\n        if (!patternsContainSameInstruments(instruments, pattern.instruments)) {\r\n            pattern.instruments.length = 0;\r\n            pattern.instruments.push(...instruments);\r\n            discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\r\n            this._didSomething();\r\n            doc.notifier.changed();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n    constructor(doc: SongDocument, mod: number, index: number, useInstrument?: Instrument) {\r\n        super();\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (useInstrument != undefined)\r\n            instrument = useInstrument;\r\n\r\n        // None, or swapping from song to instrument/vice-versa\r\n        if (index == 0 || (Config.modulators[instrument.modulators[mod]].forSong && index >= 2) || (!Config.modulators[instrument.modulators[mod]].forSong && index < 2)) {\r\n            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\r\n        }\r\n\r\n        instrument.modChannels[mod] = index - 2;\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n    constructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n        super();\r\n\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n        if (instrument.modInstruments[mod] != tgtInstrument) {\r\n            instrument.modInstruments[mod] = tgtInstrument;\r\n\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n    constructor(doc: SongDocument, mod: number, text: string) {\r\n        super();\r\n\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n        // Populate all instruments that could be targeted by this mod setting.\r\n        let tgtChannel: number = instrument.modChannels[mod];\r\n        let usedInstruments: Instrument[] = [];\r\n        if (tgtChannel >= 0) { // Ignore song/none.\r\n            if (instrument.modInstruments[mod] == doc.song.channels[tgtChannel].instruments.length) {\r\n                // All - Populate list of all instruments\r\n                usedInstruments = usedInstruments.concat(doc.song.channels[tgtChannel].instruments);\r\n            } else if (instrument.modInstruments[mod] > doc.song.channels[tgtChannel].instruments.length) {\r\n                // Active - Populate list of only used instruments\r\n                let tgtPattern: Pattern | null = doc.song.getPattern(tgtChannel, doc.bar);\r\n                if (tgtPattern != null) {\r\n                    for (let i: number = 0; i < tgtPattern.instruments.length; i++) {\r\n                        usedInstruments.push(doc.song.channels[tgtChannel].instruments[tgtPattern.instruments[i]]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Single instrument used.\r\n                usedInstruments.push(doc.song.channels[tgtChannel].instruments[instrument.modInstruments[mod]]);\r\n            }\r\n        }\r\n\r\n        // Check if a new effect is being added - if so add the proper associated effect to the instrument(s), and truncate \"+ \" from start of text.\r\n        if (text.startsWith(\"+ \")) {\r\n            text = text.substr(2);\r\n            for (let i: number = 0; i < usedInstruments.length; i++) {\r\n                const tgtInstrument: Instrument = usedInstruments[i];\r\n                if (!(tgtInstrument.effects & (1 << Config.modulators.dictionary[text].associatedEffect))) {\r\n                    doc.record(new ChangeToggleEffects(doc, Config.modulators.dictionary[text].associatedEffect, tgtInstrument));\r\n                }\r\n            }\r\n        }\r\n\r\n        let setting: number = Config.modulators.dictionary[text].index;\r\n\r\n        if (instrument.modulators[mod] != setting) {\r\n\r\n            instrument.modulators[mod] = setting;\r\n\r\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n            let cap: number = Config.modulators[setting].maxRawVol;\r\n\r\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\r\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\r\n                        const note: Note = pattern.notes[j];\r\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.size > cap)\r\n                                    pin.size = cap;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeModFilter extends Change {\r\n    constructor(doc: SongDocument, mod: number, type: number) {\r\n        super();\r\n\r\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n        if (instrument.modFilterTypes[mod] != type) {\r\n\r\n            instrument.modFilterTypes[mod] = type;\r\n\r\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n            let cap: number = doc.song.getVolumeCapForSetting(true, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n\r\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\r\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\r\n                        const note: Note = pattern.notes[j];\r\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.size > cap)\r\n                                    pin.size = cap;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        if (doc.song.patternsPerChannel != newValue) {\r\n            for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n                const channelBars: number[] = doc.song.channels[i].bars;\r\n                const channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n                for (let j: number = 0; j < channelBars.length; j++) {\r\n                    if (channelBars[j] > newValue) channelBars[j] = 0;\r\n                }\r\n                for (let j: number = channelPatterns.length; j < newValue; j++) {\r\n                    channelPatterns[j] = new Pattern();\r\n                }\r\n                channelPatterns.length = newValue;\r\n            }\r\n            doc.song.patternsPerChannel = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _bar: number;\r\n    private _channelIndex: number;\r\n    private _patternIndex: number;\r\n    private _patternOldNotes: Note[] | null = null;\r\n    private _oldPatternCount: number;\r\n    private _newPatternCount: number;\r\n    private _oldPatternInstruments: number[] | null = null;\r\n    private _newPatternInstruments: number[];\r\n\r\n    constructor(doc: SongDocument, channelIndex: number, bar: number) {\r\n        super(false);\r\n        const song: Song = doc.song;\r\n        if (song.channels[channelIndex].bars[bar] != 0) return;\r\n\r\n        this._doc = doc;\r\n        this._bar = bar;\r\n        this._channelIndex = channelIndex;\r\n        this._oldPatternCount = song.patternsPerChannel;\r\n        this._newPatternCount = song.patternsPerChannel;\r\n        if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount)\r\n            this._newPatternInstruments = doc.recentPatternInstruments[channelIndex].concat();\r\n        else\r\n            this._newPatternInstruments = [doc.viewedInstrument[channelIndex]];\r\n\r\n        let firstEmptyUnusedIndex: number | null = null;\r\n        let firstUnusedIndex: number | null = null;\r\n        for (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n            let used = false;\r\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n                if (song.channels[channelIndex].bars[barIndex] == patternIndex) {\r\n                    used = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (used) continue;\r\n            if (firstUnusedIndex == null) {\r\n                firstUnusedIndex = patternIndex;\r\n            }\r\n            const pattern: Pattern = song.channels[channelIndex].patterns[patternIndex - 1];\r\n            if (pattern.notes.length == 0) {\r\n                firstEmptyUnusedIndex = patternIndex;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (firstEmptyUnusedIndex != null) {\r\n            this._patternIndex = firstEmptyUnusedIndex;\r\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstEmptyUnusedIndex - 1].instruments.concat();\r\n        } else if (song.patternsPerChannel < song.barCount) {\r\n            this._newPatternCount = song.patternsPerChannel + 1;\r\n            this._patternIndex = song.patternsPerChannel + 1;\r\n        } else if (firstUnusedIndex != null) {\r\n            this._patternIndex = firstUnusedIndex;\r\n            this._patternOldNotes = song.channels[channelIndex].patterns[firstUnusedIndex - 1].notes;\r\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstUnusedIndex - 1].instruments.concat();\r\n        } else {\r\n            throw new Error();\r\n        }\r\n\r\n        this._didSomething();\r\n        this._doForwards();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        const song: Song = this._doc.song;\r\n        for (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n            for (let i: number = 0; i < song.getChannelCount(); i++) {\r\n                song.channels[i].patterns[j] = new Pattern();\r\n            }\r\n        }\r\n        song.patternsPerChannel = this._newPatternCount;\r\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\r\n        pattern.notes = [];\r\n        pattern.instruments.length = 0;\r\n        pattern.instruments.push(...this._newPatternInstruments);\r\n        song.channels[this._channelIndex].bars[this._bar] = this._patternIndex;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        const song: Song = this._doc.song;\r\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\r\n        if (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n        if (this._oldPatternInstruments != null) {\r\n            pattern.instruments.length = 0;\r\n            pattern.instruments.push(...this._oldPatternInstruments);\r\n        }\r\n        song.channels[this._channelIndex].bars[this._bar] = 0;\r\n        for (let i: number = 0; i < song.getChannelCount(); i++) {\r\n            song.channels[i].patterns.length = this._oldPatternCount;\r\n        }\r\n        song.patternsPerChannel = this._oldPatternCount;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number, continuesLastPattern: boolean) {\r\n        super(doc, note);\r\n\r\n        shiftedTime -= this._oldStart;\r\n        const originalTime: number = this._oldPins[pinIndex].time;\r\n        const skipStart: number = Math.min(originalTime, shiftedTime);\r\n        const skipEnd: number = Math.max(originalTime, shiftedTime);\r\n        let setPin: boolean = false;\r\n        for (let i: number = 0; i < this._oldPins.length; i++) {\r\n            const oldPin: NotePin = note.pins[i];\r\n            const time: number = oldPin.time;\r\n            if (time < skipStart) {\r\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\r\n            } else if (time > skipEnd) {\r\n                if (!setPin) {\r\n                    if (this._newPins.length > 0) continuesLastPattern = note.continuesLastPattern;\r\n                    this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\r\n                    setPin = true;\r\n                }\r\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\r\n            }\r\n        }\r\n        if (!setPin) {\r\n            continuesLastPattern = note.continuesLastPattern;\r\n            this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\r\n        }\r\n\r\n        this._finishSetup(continuesLastPattern);\r\n    }\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n        super(doc, note);\r\n\r\n        bendStart -= this._oldStart;\r\n        bendEnd -= this._oldStart;\r\n        bendTo -= note.pitches[pitchIndex];\r\n\r\n        let setStart: boolean = false;\r\n        let setEnd: boolean = false;\r\n        let prevInterval: number = 0;\r\n        let prevSize: number = Config.noteSizeMax;\r\n        let persist: boolean = true;\r\n        let i: number;\r\n        let direction: number;\r\n        let stop: number;\r\n        let push: (item: NotePin) => void;\r\n        if (bendEnd > bendStart) {\r\n            i = 0;\r\n            direction = 1;\r\n            stop = note.pins.length;\r\n            push = (item: NotePin) => { this._newPins.push(item); };\r\n        } else {\r\n            i = note.pins.length - 1;\r\n            direction = -1;\r\n            stop = -1;\r\n            push = (item: NotePin) => { this._newPins.unshift(item); };\r\n        }\r\n        for (; i != stop; i += direction) {\r\n            const oldPin: NotePin = note.pins[i];\r\n            const time: number = oldPin.time;\r\n            for (; ;) {\r\n                if (!setStart) {\r\n                    if (time * direction <= bendStart * direction) {\r\n                        prevInterval = oldPin.interval;\r\n                        prevSize = oldPin.size;\r\n                    }\r\n                    if (time * direction < bendStart * direction) {\r\n                        push(makeNotePin(oldPin.interval, time, oldPin.size));\r\n                        break;\r\n                    } else {\r\n                        push(makeNotePin(prevInterval, bendStart, prevSize));\r\n                        setStart = true;\r\n                    }\r\n                } else if (!setEnd) {\r\n                    if (time * direction <= bendEnd * direction) {\r\n                        prevInterval = oldPin.interval;\r\n                        prevSize = oldPin.size;\r\n                    }\r\n                    if (time * direction < bendEnd * direction) {\r\n                        break;\r\n                    } else {\r\n                        push(makeNotePin(bendTo, bendEnd, prevSize));\r\n                        setEnd = true;\r\n                    }\r\n                } else {\r\n                    if (time * direction == bendEnd * direction) {\r\n                        break;\r\n                    } else {\r\n                        if (oldPin.interval != prevInterval) persist = false;\r\n                        push(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.size));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!setEnd) {\r\n            push(makeNotePin(bendTo, bendEnd, prevSize));\r\n        }\r\n\r\n        this._finishSetup();\r\n    }\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n    constructor(doc: SongDocument, pattern: Pattern) {\r\n        super();\r\n        const minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n        const changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n            let thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n            if (thresholds != null) {\r\n                const beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n                const remainder: number = oldTime - beatStart;\r\n                let newTime: number = beatStart;\r\n                for (const threshold of thresholds) {\r\n                    if (remainder >= threshold) {\r\n                        newTime += minDivision;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                return newTime;\r\n            } else {\r\n                return Math.round(oldTime / minDivision) * minDivision;\r\n            }\r\n        };\r\n\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n            } else {\r\n                this.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n        super(doc, note);\r\n\r\n        for (const oldPin of this._oldPins) {\r\n            this._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.size));\r\n        }\r\n\r\n        this._finishSetup();\r\n    }\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n    constructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n        super();\r\n        let partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n        if (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n        if (partsToMove == 0.0) return;\r\n\r\n        switch (strategy) {\r\n            case \"wrapAround\": {\r\n                const partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n                for (const channel of doc.song.channels) {\r\n                    for (const pattern of channel.patterns) {\r\n                        const newNotes: Note[] = [];\r\n\r\n                        for (let bar: number = 1; bar >= 0; bar--) {\r\n                            const barStartPart: number = bar * partsPerBar;\r\n\r\n                            for (const oldNote of pattern.notes) {\r\n                                const absoluteNoteStart: number = oldNote.start + partsToMove;\r\n                                const absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n                                const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n                                const noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n                                if (noteStartPart < noteEndPart) {\r\n                                    projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        pattern.notes = newNotes;\r\n                    }\r\n                }\r\n            } break;\r\n            case \"overflow\": {\r\n                let originalBarCount: number = doc.song.barCount;\r\n                let originalLoopStart: number = doc.song.loopStart;\r\n                let originalLoopLength: number = doc.song.loopLength;\r\n\r\n                this.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n                if (beatsToMove < 0) {\r\n                    let firstBarIsEmpty: boolean = true;\r\n                    for (const channel of doc.song.channels) {\r\n                        if (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n                    }\r\n                    if (firstBarIsEmpty) {\r\n                        for (const channel of doc.song.channels) {\r\n                            channel.bars.shift();\r\n                        }\r\n                        doc.song.barCount--;\r\n                    } else {\r\n                        originalBarCount++;\r\n                        originalLoopStart++;\r\n                        doc.bar++;\r\n                    }\r\n                }\r\n                while (doc.song.barCount < originalBarCount) {\r\n                    for (const channel of doc.song.channels) {\r\n                        channel.bars.push(0);\r\n                    }\r\n                    doc.song.barCount++;\r\n                }\r\n                doc.song.loopStart = originalLoopStart;\r\n                doc.song.loopLength = originalLoopLength;\r\n            } break;\r\n            default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n        }\r\n\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n    constructor(doc: SongDocument, newValue: number, strategy: string) {\r\n        super();\r\n        if (doc.song.beatsPerBar != newValue) {\r\n            switch (strategy) {\r\n                case \"splice\": {\r\n                    if (doc.song.beatsPerBar > newValue) {\r\n                        const sequence: ChangeSequence = new ChangeSequence();\r\n                        for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n                            for (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n                                sequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n                            }\r\n                        }\r\n                    }\r\n                } break;\r\n                case \"stretch\": {\r\n                    const changeRhythm = function (oldTime: number): number {\r\n                        return Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n                    };\r\n                    for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n                        for (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n                            const pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n                            let noteIndex: number = 0;\r\n                            while (noteIndex < pattern.notes.length) {\r\n                                const note: Note = pattern.notes[noteIndex];\r\n                                if (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n                                    this.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n                                } else {\r\n                                    this.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n                                    noteIndex++;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n                } break;\r\n                case \"overflow\": {\r\n                    this.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n                    doc.song.loopStart = 0;\r\n                    doc.song.loopLength = doc.song.barCount;\r\n                } break;\r\n                default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n            }\r\n\r\n            doc.song.beatsPerBar = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        if (doc.song.scale != newValue) {\r\n            doc.song.scale = newValue;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const song: Song = doc.song;\r\n        const basePitch: number = Config.keys[song.key].basePitch;\r\n        const keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n                const pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n                if (pattern != null) {\r\n                    for (const note of pattern.notes) {\r\n                        const prevPin: NotePin = note.pins[0];\r\n                        for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n                            const nextPin: NotePin = note.pins[pinIndex];\r\n                            if (prevPin.interval == nextPin.interval) {\r\n                                let weight: number = nextPin.time - prevPin.time;\r\n                                weight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n                                weight *= nextPin.size + prevPin.size;\r\n                                for (const pitch of note.pitches) {\r\n                                    const key = (basePitch + prevPin.interval + pitch) % 12;\r\n                                    keyWeights[key] += weight;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let bestKey: number = 0;\r\n        let bestKeyWeight: number = 0;\r\n        for (let key: number = 0; key < 12; key++) {\r\n            // Look for the root of the most prominent major or minor chord.\r\n            const keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n            if (bestKeyWeight < keyWeight) {\r\n                bestKeyWeight = keyWeight;\r\n                bestKey = key;\r\n            }\r\n        }\r\n\r\n        if (bestKey != song.key) {\r\n            const diff: number = song.key - bestKey;\r\n            const absoluteDiff: number = Math.abs(diff);\r\n\r\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n                for (const pattern of song.channels[channelIndex].patterns) {\r\n                    for (let i: number = 0; i < absoluteDiff; i++) {\r\n                        this.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n                    }\r\n                }\r\n            }\r\n\r\n            song.key = bestKey;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n    const eligiblePresetValues: number[] = [];\r\n    for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n        if (category.name == \"Novelty Presets\") continue;\r\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n            const preset: Preset = category.presets[presetIndex];\r\n            if (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n                eligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n            }\r\n        }\r\n    }\r\n    return eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n    for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n        for (const instrument of song.channels[channelIndex].instruments) {\r\n            const isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n            const isMod: boolean = song.getChannelIsMod(channelIndex);\r\n            const presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n            const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n            instrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2, 1);\r\n            instrument.preset = presetValue;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n    constructor(doc: SongDocument, newHash: string) {\r\n        super();\r\n        let pitchChannelCount = doc.song.pitchChannelCount;\r\n        let noiseChannelCount = doc.song.noiseChannelCount;\r\n        let modChannelCount = doc.song.modChannelCount;\r\n        doc.song.fromBase64String(newHash);\r\n        if (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n            ColorConfig.resetColors();\r\n        }\r\n        if (newHash == \"\") {\r\n            this.append(new ChangePatternSelection(doc, 0, 0));\r\n            doc.selection.resetBoxSelection();\r\n            setDefaultInstruments(doc.song);\r\n            doc.song.scale = doc.prefs.defaultScale;\r\n\r\n            for (let i: number = 0; i <= doc.song.channels.length; i++) {\r\n                doc.viewedInstrument[i] = 0;\r\n                doc.recentPatternInstruments[i] = [0];\r\n            }\r\n            doc.viewedInstrument.length = doc.song.channels.length;\r\n        } else {\r\n            this.append(new ChangeValidateTrackSelection(doc));\r\n        }\r\n        doc.synth.computeLatestModValues();\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const channelIndex: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n        const bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n        if (doc.channel != channelIndex || doc.bar != bar) {\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.channel = channelIndex;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t\tdoc.selection.scrollToSelectedPattern();\r\n\t\tdoc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n    constructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n        super();\r\n\r\n        const song: Song = doc.song;\r\n\r\n        function removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n            while (channels.length > maxLength) {\r\n                let sparsestIndex: number = channels.length - 1;\r\n                let mostZeroes: number = 0;\r\n                for (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n                    let zeroes: number = 0;\r\n                    for (const bar of channels[channelIndex].bars) {\r\n                        if (bar == 0) zeroes++;\r\n                    }\r\n                    if (zeroes >= mostZeroes) {\r\n                        sparsestIndex = channelIndex;\r\n                        mostZeroes = zeroes;\r\n                    }\r\n                }\r\n                channels.splice(sparsestIndex, 1);\r\n            }\r\n        }\r\n\r\n        removeExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n        removeExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n        removeExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n        while (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n        while (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n        while (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n        // Set minimum counts.\r\n        song.barCount = 1;\r\n        song.patternsPerChannel = 8;\r\n        const combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n        for (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n            const channel: Channel = combinedChannels[channelIndex];\r\n            song.barCount = Math.max(song.barCount, channel.bars.length);\r\n            song.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n            song.channels[channelIndex] = channel;\r\n        }\r\n        song.channels.length = combinedChannels.length;\r\n        song.pitchChannelCount = pitchChannels.length;\r\n        song.noiseChannelCount = noiseChannels.length;\r\n        song.modChannelCount = modChannels.length;\r\n\r\n        song.barCount = Math.min(Config.barCountMax, song.barCount);\r\n        song.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n        for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n            const channel: Channel = song.channels[channelIndex];\r\n\r\n            for (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n                if (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n                    channel.bars[barIndex] = 0;\r\n                }\r\n            }\r\n            while (channel.bars.length < song.barCount) {\r\n                channel.bars.push(0);\r\n            }\r\n            channel.bars.length = song.barCount;\r\n\r\n            if (channel.instruments.length > song.getMaxInstrumentsPerChannel()) {\r\n                channel.instruments.length = song.getMaxInstrumentsPerChannel();\r\n            }\r\n\r\n            for (const pattern of channel.patterns) {\r\n                discardInvalidPatternInstruments(pattern.instruments, song, channelIndex);\r\n            }\r\n            while (channel.patterns.length < song.patternsPerChannel) {\r\n                channel.patterns.push(new Pattern());\r\n            }\r\n\r\n            channel.patterns.length = song.patternsPerChannel;\r\n        }\r\n\r\n        song.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n        song.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n        this.append(new ChangeValidateTrackSelection(doc));\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n\r\n        ColorConfig.resetColors();\r\n    }\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n    if (a.length != b.length) return false;\r\n\r\n    for (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n        const oldNote: Note = a[noteIndex];\r\n        const newNote: Note = b[noteIndex];\r\n        if (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n            return false;\r\n        }\r\n\r\n        for (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n            if (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n            if (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].size != oldNote.pins[pinIndex].size) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n    for (const channel of channels) {\r\n        const newPatterns: Pattern[] = [];\r\n        for (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n            if (channel.bars[bar] == 0) continue;\r\n\r\n            const oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n            let foundMatchingPattern: boolean = false;\r\n            for (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n                const newPattern: Pattern = newPatterns[newPatternIndex];\r\n\r\n                if (!patternsContainSameInstruments(oldPattern.instruments, newPattern.instruments) || newPattern.notes.length != oldPattern.notes.length) {\r\n                    continue;\r\n                }\r\n\r\n                if (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n                    foundMatchingPattern = true;\r\n                    channel.bars[bar] = newPatternIndex + 1;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!foundMatchingPattern) {\r\n                newPatterns.push(oldPattern);\r\n                channel.bars[bar] = newPatterns.length;\r\n            }\r\n        }\r\n\r\n        for (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n            channel.patterns[patternIndex] = newPatterns[patternIndex];\r\n        }\r\n        channel.patterns.length = newPatterns.length;\r\n    }\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"tempo\"].index);\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEchoDelay extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.echoDelay = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo delay\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeEchoSustain extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.echoSustain = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeChorus extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.chorus = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeReverb extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.reverb = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"reverb\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeUpperLimit extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.upperNoteLimit = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeLowerLimit extends ChangeInstrumentSlider {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super(doc);\r\n        this._instrument.lowerNoteLimit = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSongReverb extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.reverb = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"song reverb\"].index);\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSongDetune extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        //doc.song.detune = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"song detune\"].index);\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _pattern: Pattern;\r\n    private _note: Note;\r\n    private _index: number;\r\n    constructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n        super(deletion);\r\n        this._doc = doc;\r\n        this._pattern = pattern;\r\n        this._note = note;\r\n        this._index = index;\r\n        this._didSomething();\r\n        this.redo();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._pattern.notes.splice(this._index, 0, this._note);\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._pattern.notes.splice(this._index, 1);\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n    constructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n        super(doc, note);\r\n        const continuesLastPattern: boolean = ((this._oldStart < 0 || note.continuesLastPattern) && truncStart == 0);\r\n\r\n        truncStart -= this._oldStart;\r\n        truncEnd -= this._oldStart;\r\n        let setStart: boolean = false;\r\n        let prevSize: number = this._oldPins[0].size;\r\n        let prevInterval: number = this._oldPins[0].interval;\r\n        let pushLastPin: boolean = true;\r\n        let i: number;\r\n        for (i = 0; i < this._oldPins.length; i++) {\r\n            const oldPin: NotePin = this._oldPins[i];\r\n            if (oldPin.time < truncStart) {\r\n                prevSize = oldPin.size;\r\n                prevInterval = oldPin.interval;\r\n            } else {\r\n                if (oldPin.time > truncStart && !setStart) {\r\n                    this._newPins.push(makeNotePin(prevInterval, truncStart, prevSize));\r\n                    setStart = true;\r\n                }\r\n                if (oldPin.time <= truncEnd) {\r\n                    this._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.size));\r\n                    if (oldPin.time == truncEnd) {\r\n                        pushLastPin = false;\r\n                        break;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].size));\r\n\r\n        this._finishSetup(continuesLastPattern);\r\n    }\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n    constructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\r\n        super();\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (note == skipNote && skipNote != null) {\r\n                i++;\r\n            } else if (note.end <= start) {\r\n                i++;\r\n            } else if (note.start >= end) {\r\n                // Allow out-of-order notes for mods so that all get checked.\r\n                if (!doc.song.getChannelIsMod(doc.channel)) {\r\n                    break;\r\n                } else {\r\n                    i++;\r\n                }\r\n            } else if (note.start < start && note.end > end) {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n                    const copy: Note = note.clone();\r\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\r\n                    i++;\r\n                    this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n                    this.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n                }\r\n                i++;\r\n            } else if (note.start < start) {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\r\n                i++;\r\n            } else if (note.end > end) {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n                    this.append(new ChangeNoteLength(doc, note, end, note.end));\r\n                i++;\r\n            } else {\r\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n                    this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n                else\r\n                    i++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n    constructor(doc: SongDocument, pattern: Pattern) {\r\n        super();\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n                const copy: Note = note.clone();\r\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n                i++;\r\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n                // i++; // The second note might be split again at the end of the selection. Check it again.\r\n            } else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n                const copy: Note = note.clone();\r\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n                i++;\r\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n                i++;\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n    protected _doc: SongDocument;\r\n    protected _note: Note;\r\n    protected _oldStart: number;\r\n    protected _newStart: number;\r\n    protected _oldEnd: number;\r\n    protected _newEnd: number;\r\n    protected _oldPins: NotePin[];\r\n    protected _newPins: NotePin[];\r\n    protected _oldPitches: number[];\r\n    protected _newPitches: number[];\r\n    constructor(doc: SongDocument, channelIndex: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._note = note;\r\n        this._oldPins = note.pins;\r\n        this._newPins = [];\r\n        this._oldPitches = note.pitches;\r\n        this._newPitches = [];\r\n\r\n        // I'm disabling pitch transposing for noise channels to avoid\r\n        // accidentally messing up noise channels when pitch shifting all\r\n        // channels at once.\r\n        const isNoise: boolean = doc.song.getChannelIsNoise(channelIndex);\r\n        if (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n        // Can't transpose mods\r\n        if (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n        const maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\r\n            let pitch: number = this._oldPitches[i];\r\n            if (octave && !isNoise) {\r\n                if (upward) {\r\n                    pitch = Math.min(maxPitch, pitch + 12);\r\n                } else {\r\n                    pitch = Math.max(0, pitch - 12);\r\n                }\r\n            } else {\r\n                if (upward) {\r\n                    for (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n                            pitch = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let j: number = pitch - 1; j >= 0; j--) {\r\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n                            pitch = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let foundMatch: boolean = false;\r\n            for (let j: number = 0; j < this._newPitches.length; j++) {\r\n                if (this._newPitches[j] == pitch) {\r\n                    foundMatch = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!foundMatch) this._newPitches.push(pitch);\r\n        }\r\n\r\n        let min: number = 0;\r\n        let max: number = maxPitch;\r\n\r\n        for (let i: number = 1; i < this._newPitches.length; i++) {\r\n            const diff: number = this._newPitches[0] - this._newPitches[i];\r\n            if (min < diff) min = diff;\r\n            if (max > diff + maxPitch) max = diff + maxPitch;\r\n        }\r\n\r\n        for (const oldPin of this._oldPins) {\r\n            let interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n            if (interval < min) interval = min;\r\n            if (interval > max) interval = max;\r\n            if (octave && !isNoise) {\r\n                if (upward) {\r\n                    interval = Math.min(max, interval + 12);\r\n                } else {\r\n                    interval = Math.max(min, interval - 12);\r\n                }\r\n            } else {\r\n                if (upward) {\r\n                    for (let i: number = interval + 1; i <= max; i++) {\r\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n                            interval = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i: number = interval - 1; i >= min; i--) {\r\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n                            interval = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            interval -= this._newPitches[0];\r\n            this._newPins.push(makeNotePin(interval, oldPin.time, oldPin.size));\r\n        }\r\n\r\n        if (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n        for (let i: number = 1; i < this._newPins.length - 1;) {\r\n            if (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n                this._newPins[i].interval == this._newPins[i + 1].interval &&\r\n                this._newPins[i - 1].size == this._newPins[i].size &&\r\n                this._newPins[i].size == this._newPins[i + 1].size) {\r\n                this._newPins.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pins = this._newPins;\r\n        this._note.pitches = this._newPitches;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pins = this._oldPins;\r\n        this._note.pitches = this._oldPitches;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n        super();\r\n        if (doc.selection.patternSelectionActive) {\r\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n        }\r\n        for (const note of pattern.notes) {\r\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n                continue;\r\n            }\r\n            this.append(new ChangeTransposeNote(doc, channelIndex, note, upward, ignoreScale, octave));\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n    constructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n        super();\r\n        doc.selection.boxSelectionX0 = newX0;\r\n        doc.selection.boxSelectionX1 = newX1;\r\n        doc.selection.boxSelectionY0 = newY0;\r\n        doc.selection.boxSelectionY1 = newY1;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _oldStart: number;\r\n    private _oldEnd: number;\r\n    private _oldActive: boolean;\r\n    private _newStart: number;\r\n    private _newEnd: number;\r\n    private _newActive: boolean;\r\n\r\n    constructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._oldStart = doc.selection.patternSelectionStart;\r\n        this._oldEnd = doc.selection.patternSelectionEnd;\r\n        this._oldActive = doc.selection.patternSelectionActive;\r\n        this._newStart = newStart;\r\n        this._newEnd = newEnd;\r\n        this._newActive = newStart < newEnd;\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._doc.selection.patternSelectionStart = this._newStart;\r\n        this._doc.selection.patternSelectionEnd = this._newEnd;\r\n        this._doc.selection.patternSelectionActive = this._newActive;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._doc.selection.patternSelectionStart = this._oldStart;\r\n        this._doc.selection.patternSelectionEnd = this._oldEnd;\r\n        this._doc.selection.patternSelectionActive = this._oldActive;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, parts: number, transpose: number) {\r\n        super();\r\n\r\n        if (parts == 0 && transpose == 0) return;\r\n\r\n        if (doc.selection.patternSelectionActive) {\r\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n        }\r\n\r\n        const oldStart: number = doc.selection.patternSelectionStart;\r\n        const oldEnd: number = doc.selection.patternSelectionEnd;\r\n        const newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n        const newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n        if (newStart == newEnd) {\r\n            // Just erase the current contents of the selection:\r\n            this.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n        } else if (parts < 0) {\r\n            // Clear space for the dragged notes:\r\n            this.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n        } else {\r\n            // Clear space for the dragged notes:\r\n            this.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n        }\r\n\r\n        this.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n        const draggedNotes = [];\r\n        let noteInsertionIndex: number = 0;\r\n        let i: number = 0;\r\n        while (i < pattern.notes.length) {\r\n            const note: Note = pattern.notes[i];\r\n            if (note.end <= oldStart || note.start >= oldEnd) {\r\n                i++;\r\n                if (note.end <= newStart) noteInsertionIndex = i;\r\n            } else {\r\n                draggedNotes.push(note.clone());\r\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n            }\r\n        }\r\n\r\n        for (const note of draggedNotes) {\r\n            note.start += parts;\r\n            note.end += parts;\r\n            if (note.end <= newStart) continue;\r\n            if (note.start >= newEnd) continue;\r\n\r\n            this.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\r\n            this.append(new ChangeNoteLength(doc, note, Math.max(note.start, newStart), Math.min(newEnd, note.end)));\r\n\r\n            for (let i: number = 0; i < Math.abs(transpose); i++) {\r\n                this.append(new ChangeTransposeNote(doc, channelIndex, note, transpose > 0, doc.prefs.notesOutsideScale));\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeHoldingModRecording extends Change {\r\n    public storedChange: Change | null;\r\n    public storedValues: number[] | null;\r\n    public storedSlider: Slider | null;\r\n    constructor(doc: SongDocument, storedChange: Change | null, storedValues: number[] | null, slider: Slider | null) {\r\n        super();\r\n        this.storedChange = storedChange;\r\n        this.storedValues = storedValues;\r\n        this.storedSlider = slider;\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n    constructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n        super();\r\n        for (let channelIndex: number = channelStart; channelIndex < channelStart + channelHeight; channelIndex++) {\r\n            const reusablePatterns: Dictionary<number> = {};\r\n\r\n            for (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n                const currentPatternIndex: number = doc.song.channels[channelIndex].bars[bar];\r\n                if (currentPatternIndex == 0) continue;\r\n\r\n                if (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n                    let isUsedElsewhere = false;\r\n                    for (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n                        if (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n                            if (doc.song.channels[channelIndex].bars[bar2] == currentPatternIndex) {\r\n                                isUsedElsewhere = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (isUsedElsewhere) {\r\n                        // Need to duplicate the pattern.\r\n                        const copiedPattern: Pattern = doc.song.getPattern(channelIndex, bar)!;\r\n                        this.append(new ChangePatternNumbers(doc, 0, bar, channelIndex, 1, 1));\r\n                        this.append(new ChangeEnsurePatternExists(doc, channelIndex, bar));\r\n                        const newPattern: Pattern | null = doc.song.getPattern(channelIndex, bar);\r\n                        if (newPattern == null) throw new Error();\r\n                        this.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\r\n                        // Copy the instruments into the new pattern.\r\n                        newPattern.instruments.length = 0;\r\n                        newPattern.instruments.push(...copiedPattern.instruments);\r\n\r\n                        reusablePatterns[String(currentPatternIndex)] = doc.song.channels[channelIndex].bars[bar];\r\n                    } else {\r\n                        reusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n                    }\r\n                }\r\n\r\n                this.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channelIndex, 1, 1));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n    constructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n        super();\r\n        if (doc.selection.patternSelectionActive) {\r\n            new ChangeSplitNotesAtSelection(doc, pattern);\r\n        }\r\n        const maxPitch: number = Config.maxPitch;\r\n        for (const note of pattern.notes) {\r\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n                continue;\r\n            }\r\n\r\n            const newPitches: number[] = [];\r\n            const newPins: NotePin[] = [];\r\n            for (let i: number = 0; i < note.pitches.length; i++) {\r\n                const pitch: number = note.pitches[i];\r\n                const transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n                if (newPitches.indexOf(transformedPitch) == -1) {\r\n                    newPitches.push(transformedPitch);\r\n                }\r\n            }\r\n\r\n            let min: number = 0;\r\n            let max: number = maxPitch;\r\n\r\n            for (let i: number = 1; i < newPitches.length; i++) {\r\n                const diff: number = newPitches[0] - newPitches[i];\r\n                if (min < diff) min = diff;\r\n                if (max > diff + maxPitch) max = diff + maxPitch;\r\n            }\r\n\r\n            for (const oldPin of note.pins) {\r\n                let interval: number = oldPin.interval + note.pitches[0];\r\n                if (interval < min) interval = min;\r\n                if (interval > max) interval = max;\r\n                const transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n                newPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.size));\r\n            }\r\n\r\n            if (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n            for (let i: number = 1; i < newPins.length - 1;) {\r\n                if (newPins[i - 1].interval == newPins[i].interval &&\r\n                    newPins[i].interval == newPins[i + 1].interval &&\r\n                    newPins[i - 1].size == newPins[i].size &&\r\n                    newPins[i].size == newPins[i + 1].size) {\r\n                    newPins.splice(i, 1);\r\n                } else {\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            note.pitches = newPitches;\r\n            note.pins = newPins;\r\n        }\r\n        this._didSomething();\r\n        doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n        // Not used currently as mod is implemented as multiplicative.\r\n        //doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n        super();\r\n        if (newValue.length > 30) {\r\n            newValue = newValue.substring(0, 30);\r\n        }\r\n\r\n        doc.song.title = newValue;\r\n        document.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n        super();\r\n        if (newValue.length > 15) {\r\n            newValue = newValue.substring(0, 15);\r\n        }\r\n\r\n        doc.song.channels[doc.muteEditorChannel].name = newValue;\r\n        doc.recalcChannelNames = true;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pan\"].index, doc.channel, doc.getCurrentInstrument());\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n        super();\r\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSizeBend extends UndoableChange {\r\n    private _doc: SongDocument;\r\n    private _note: Note;\r\n    private _oldPins: NotePin[];\r\n    private _newPins: NotePin[];\r\n    constructor(doc: SongDocument, note: Note, bendPart: number, bendSize: number, bendInterval: number, uniformSize: boolean) {\r\n        super(false);\r\n        this._doc = doc;\r\n        this._note = note;\r\n        this._oldPins = note.pins;\r\n        this._newPins = [];\r\n\r\n        let inserted: boolean = false;\r\n\r\n        for (const pin of note.pins) {\r\n            if (pin.time < bendPart) {\r\n                if (uniformSize) {\r\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\r\n                } else {\r\n                    this._newPins.push(pin);\r\n                }\r\n            } else if (pin.time == bendPart) {\r\n                this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\r\n                inserted = true;\r\n            } else {\r\n                if (!uniformSize && !inserted) {\r\n                    this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\r\n                    inserted = true;\r\n                }\r\n                if (uniformSize) {\r\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\r\n                } else {\r\n                    this._newPins.push(pin);\r\n                }\r\n            }\r\n        }\r\n\r\n        removeRedundantPins(this._newPins);\r\n\r\n        this._doForwards();\r\n        this._didSomething();\r\n    }\r\n\r\n    protected _doForwards(): void {\r\n        this._note.pins = this._newPins;\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    protected _doBackwards(): void {\r\n        this._note.pins = this._oldPins;\r\n        this._doc.notifier.changed();\r\n    }\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (instrument.chipWave != newValue) {\r\n            instrument.chipWave = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n    constructor(doc: SongDocument, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        if (instrument.chipNoise != newValue) {\r\n            instrument.chipNoise = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeAddEnvelope extends Change {\r\n    constructor(doc: SongDocument) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.addEnvelope(0, 0, 0);\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeRemoveEnvelope extends Change {\r\n    constructor(doc: SongDocument, index: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        instrument.envelopeCount--;\r\n        for (let i: number = index; i < instrument.envelopeCount; i++) {\r\n            instrument.envelopes[i].target = instrument.envelopes[i + 1].target;\r\n            instrument.envelopes[i].index = instrument.envelopes[i + 1].index;\r\n            instrument.envelopes[i].envelope = instrument.envelopes[i + 1].envelope;\r\n        }\r\n        // TODO: Shift any envelopes that were targeting other envelope indices after the removed one.\r\n        instrument.preset = instrument.type;\r\n        doc.notifier.changed();\r\n        this._didSomething();\r\n    }\r\n}\r\n\r\nexport class ChangeSetEnvelopeTarget extends Change {\r\n    constructor(doc: SongDocument, envelopeIndex: number, target: number, targetIndex: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldTarget: number = instrument.envelopes[envelopeIndex].target;\r\n        const oldIndex: number = instrument.envelopes[envelopeIndex].index;\r\n        if (oldTarget != target || oldIndex != targetIndex) {\r\n            instrument.envelopes[envelopeIndex].target = target;\r\n            instrument.envelopes[envelopeIndex].index = targetIndex;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeSetEnvelopeType extends Change {\r\n    constructor(doc: SongDocument, envelopeIndex: number, newValue: number) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.envelopes[envelopeIndex].envelope;\r\n        if (oldValue != newValue) {\r\n            instrument.envelopes[envelopeIndex].envelope = newValue;\r\n            instrument.preset = instrument.type;\r\n            doc.notifier.changed();\r\n            this._didSomething();\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChangeInvertWave extends Change {\r\n    constructor(doc: SongDocument, newValue: boolean) {\r\n        super();\r\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n        const oldValue = instrument.invertWave;\r\n\r\n        doc.notifier.changed();\r\n        if (oldValue != newValue) {\r\n            instrument.invertWave = newValue;\r\n            this._didSomething();\r\n        }\r\n    }\r\n} ","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"splice\"}, \"Splice beats at end of bars.\"),\r\n\t\toption({value: \"stretch\"}, \"Stretch notes to fit in bars.\"),\r\n\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\tdiv({style: \"text-align: right;\"},\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: ${ColorConfig.secondaryText};\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\t\t\t\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._beatsStepper.select();\r\n\t\t\tsetTimeout(()=>this._beatsStepper.focus());\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\t\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\t\t\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport {ChangePatternsPerChannel, ChangeInstrumentsFlags, ChangeChannelCount} from \"./changes\";\r\n\r\nconst {button, div, label, br, h2, input} = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\t\tprivate readonly _patternsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _drumChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\t\tprivate readonly _layeredInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\r\n\t\tprivate readonly _patternInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\r\n\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px; text-align: right;\"},\r\n\t\th2(\"Channel Settings\"),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Available patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Simultaneous instruments\",\r\n\t\t\tbr(),\r\n\t\t\t\"per channel:\",\r\n\t\t\tthis._layeredInstrumentsBox,\r\n\t\t),\r\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Different instruments\",\r\n\t\t\tbr(),\r\n\t\t\t\"per pattern:\",\r\n\t\t\tthis._patternInstrumentsBox,\r\n\t\t),\r\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\t\t\t\r\n\t\t\t\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\t\t\t\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\t\t\t\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\t\t\r\n\t\tthis._layeredInstrumentsBox.checked = this._doc.song.layeredInstruments;\r\n\t\tthis._patternInstrumentsBox.checked = this._doc.song.patternInstruments;\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\t\tsetTimeout(()=>this._pitchChannelStepper.focus());\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", this._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", this._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\t\r\n\tprivate _validateNumber = (event: Event): void => {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\t\t\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeInstrumentsFlags(this._doc, this._layeredInstrumentsBox.checked, this._patternInstrumentsBox.checked));\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float32Array = new Float32Array(64);\r\n\tpublic startingChipData: Float32Array = new Float32Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float32Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tthis._songEditor.togglePlay();\r\n\t\tthis.updatePlayButton();\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\telse if (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse if (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 219) { // [\r\n\t\t\tthis._doc.synth.goToPrevBar();\r\n\t\t}\r\n\t\telse if (event.keyCode == 221) { // ]\r\n\t\t\tthis._doc.synth.goToNextBar();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { FilterCoefficients, FrequencyResponse } from \"../synth/filtering\";\r\nimport { FilterType, Config } from \"../synth/SynthConfig\";\r\nimport { FilterSettings, FilterControlPoint, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeFilterAddPoint, ChangeFilterMovePoint, ChangeFilterSettings, FilterMoveData } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nexport class FilterEditor {\r\n    private _editorWidth: number = 120;\r\n    private _editorHeight: number = 26;\r\n    private readonly _responsePath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n    //private readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\", overflow: \"visible\"});\r\n    private _indicators: SVGTextElement[] = [];\r\n    private _subFilters: FilterSettings[] = [];\r\n    private _writingMods: boolean = false;\r\n    private readonly _controlPointPath: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n    private readonly _dottedLinePath: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\" });\r\n    private readonly _highlight: SVGCircleElement = SVG.circle({ fill: \"white\", stroke: \"none\", \"pointer-events\": \"none\", r: 4 });\r\n    private readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n        this._responsePath,\r\n        //this._octaves,\r\n        this._dottedLinePath,\r\n        this._highlight,\r\n        this._controlPointPath,\r\n    );\r\n    private selfUndoSettings: String[] = [];\r\n    private selfUndoHistoryPos: number = 0;\r\n    private readonly _label: HTMLDivElement = HTML.div({ style: \"position: absolute; bottom: 0; left: 2px; font-size: 8px; line-height: 1; pointer-events: none;\" });\r\n\r\n    public coordText: HTMLElement | null = null;\r\n    public readonly container: HTMLElement = HTML.div({ class: \"filterEditor\", style: \"height: 100%; position: relative;\" },\r\n        this._svg,\r\n        this._label,\r\n    );\r\n    private _pointRadius: number = 2;\r\n\r\n    private _useNoteFilter: boolean = false;\r\n    private _larger: boolean = false;\r\n    private _touchMode: boolean = false;\r\n    private _mouseX: number = 0;\r\n    private _mouseY: number = 0;\r\n    private _mouseOver: boolean = false;\r\n    private _mouseDown: boolean = false;\r\n    private _mouseDragging: boolean = false;\r\n    private _addingPoint: boolean = false;\r\n    private _deletingPoint: boolean = false;\r\n    private _addedType: FilterType = FilterType.peak;\r\n    private _selectedIndex: number = 0;\r\n    private _freqStart: number = 0;\r\n    private _gainStart: number = 0;\r\n    private _dragChange: UndoableChange | null = null;\r\n    private _subfilterIndex: number = 0;\r\n\r\n    private _filterSettings: FilterSettings;\r\n    private _useFilterSettings: FilterSettings;\r\n    private _renderedSelectedIndex: number = -1;\r\n    private _renderedPointCount: number = -1;\r\n    private _renderedPointTypes: number = -1;\r\n    private _renderedPointFreqs: number = -1;\r\n    private _renderedPointGains: number = -1;\r\n    //private _renderedKey: number = -1;\r\n\r\n    constructor(private _doc: SongDocument, useNoteFilter: boolean = false, larger: boolean = false) {\r\n        this._useNoteFilter = useNoteFilter;\r\n        this._larger = larger;\r\n\r\n        if (this._larger) {\r\n            this.container.addEventListener(\"keydown\", this._whenKeyPressed)\r\n            this._editorWidth = 1200;\r\n            this._editorHeight = 260;\r\n            this._pointRadius = 14;\r\n            // A bit of vertical spacing on viewBox so that numbers will show.\r\n            this._svg.setAttribute(\"viewBox\", \"0 -20 \" + this._editorWidth + \" \" + (this._editorHeight + 30));\r\n            this._label.style.setProperty(\"font-size\", \"16px\");\r\n            this._label.style.setProperty(\"position\", \"\");\r\n            this._label.style.setProperty(\"bottom\", \"-16px\");\r\n            this._label.style.setProperty(\"min-height\", \"1em\");\r\n            this._dottedLinePath.style.setProperty(\"stroke-width\", \"3\");\r\n            this._dottedLinePath.style.setProperty(\"stroke-dasharray\", \"6, 4\");\r\n            this._dottedLinePath.setAttribute(\"color\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n            this.container.style.setProperty(\"width\", \"85%\");\r\n            this._highlight.setAttribute(\"r\", \"20\");\r\n            this._controlPointPath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\r\n            for (let i: number = 0; i < Config.filterMaxPoints; i++) {\r\n                this._indicators[i] = SVG.text();\r\n                this._indicators[i].setAttribute(\"fill\", ColorConfig.invertedText);\r\n                this._indicators[i].setAttribute(\"text-anchor\", \"start\");\r\n                this._indicators[i].setAttribute(\"dominant-baseline\", \"central\");\r\n                this._indicators[i].setAttribute(\"pointer-events\", \"none\");\r\n                this._indicators[i].setAttribute(\"font-weight\", \"bolder\");\r\n                this._indicators[i].textContent = \"\" + (i + 1);\r\n                this._indicators[i].style.setProperty(\"display\", \"none\");\r\n                this._indicators[i].style.setProperty(\"font-size\", \"24px\");\r\n                this._svg.appendChild(this._indicators[i]);\r\n            }\r\n\r\n            // Push initial state\r\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n            const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\r\n            this.selfUndoSettings.push(JSON.stringify(filterSettings.toJsonObject()));\r\n\r\n            this._subFilters[0] = filterSettings;\r\n            for (let i: number = 1; i < Config.filterMorphCount; i++) {\r\n                const subFilter: FilterSettings | null = this._useNoteFilter ? instrument.noteSubFilters[i] : instrument.eqSubFilters[i];\r\n                if (subFilter != null) {\r\n                    let parsedFilter: FilterSettings = new FilterSettings();\r\n                    parsedFilter.fromJsonObject(subFilter.toJsonObject());\r\n                    this._subFilters[i] = parsedFilter;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n        this.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n        this.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n        document.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n        document.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n        this.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n        this.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n        this.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n        this.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if (event.keyCode == 90) { // z\r\n            this.undo();\r\n            event.stopPropagation();\r\n        }\r\n        if (event.keyCode == 89) { // y\r\n            this.redo();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private _xToFreq(x: number): number {\r\n        return Config.filterFreqRange * x / this._editorWidth - 0.5;\r\n    }\r\n    private _freqToX(freq: number): number {\r\n        return this._editorWidth * (freq + 0.5) / Config.filterFreqRange;\r\n    }\r\n    private _yToGain(y: number): number {\r\n        return (Config.filterGainRange - 1) * (1 - (y - .5) / (this._editorHeight - 1));\r\n    }\r\n    private _gainToY(gain: number): number {\r\n        return (this._editorHeight - 1) * (1 - gain / (Config.filterGainRange - 1)) + .5;\r\n    }\r\n\r\n    private _whenMouseOver = (event: MouseEvent): void => {\r\n        this._mouseOver = true;\r\n\r\n        if (!this._larger)\r\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\r\n    }\r\n\r\n    private _whenMouseOut = (event: MouseEvent): void => {\r\n        this._mouseOver = false;\r\n        this._updatePath();\r\n\r\n        if (this.coordText != null) {\r\n            this.coordText.innerText = \"\";\r\n        }\r\n    }\r\n\r\n    private _whenMousePressed = (event: MouseEvent): void => {\r\n        event.preventDefault();\r\n        this._touchMode = false;\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    private _whenTouchPressed = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n        this._touchMode = true;\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    private _whenMouseMoved = (event: MouseEvent): void => {\r\n        if (this.container.offsetParent == null) return;\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        if (!this._mouseDown) this._updateCursor();\r\n\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenTouchMoved = (event: TouchEvent): void => {\r\n        if (this.container.offsetParent == null) return;\r\n        if (this._mouseDown) event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        if (!this._mouseDown) this._updateCursor();\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenCursorPressed(): void {\r\n        this._mouseDown = true;\r\n        const sequence: ChangeSequence = new ChangeSequence();\r\n        this._dragChange = sequence;\r\n        this._doc.setProspectiveChange(this._dragChange);\r\n        this._updateCursor();\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _updateCursor(): void {\r\n        this._freqStart = this._xToFreq(this._mouseX);\r\n        this._gainStart = this._yToGain(this._mouseY);\r\n\r\n        this._addingPoint = true;\r\n        this._selectedIndex = -1;\r\n        let nearestDistance: number = Number.POSITIVE_INFINITY;\r\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\r\n            const distance: number = Math.sqrt(Math.pow(this._freqToX(point.freq) - this._mouseX, 2) + Math.pow(this._gainToY(point.gain) - this._mouseY, 2));\r\n            if ((distance <= 13 * (1 + +this._larger) || this._useFilterSettings.controlPointCount >= Config.filterMaxPoints) && distance < nearestDistance) {\r\n                nearestDistance = distance;\r\n                this._selectedIndex = i;\r\n                this._addingPoint = false;\r\n            }\r\n        }\r\n        if (this._addingPoint) {\r\n            const ratio: number = this._mouseX / this._editorWidth;\r\n            if (ratio < 0.2) {\r\n                this._addedType = FilterType.highPass;\r\n            } else if (ratio < 0.8) {\r\n                this._addedType = FilterType.peak;\r\n            } else {\r\n                this._addedType = FilterType.lowPass;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenCursorMoved(): void {\r\n        if (this._writingMods) {\r\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n            this._useFilterSettings = this._getTargetFilterSettings(instrument);\r\n            if (this._dragChange != null) {\r\n                if (this._dragChange instanceof ChangeSequence && this._dragChange.checkFirst() instanceof ChangeFilterMovePoint) {\r\n                    const data: FilterMoveData = ((this._dragChange as ChangeSequence).checkFirst() as ChangeFilterMovePoint).getMoveData(true);\r\n                    const newPoint: FilterControlPoint | null = this._useFilterSettings.controlPoints[this._selectedIndex];\r\n\r\n                    if (newPoint == null || newPoint.type != data.point.type) {\r\n                        this._dragChange = null;\r\n                        this._writingMods = false;\r\n                        this._mouseDown = false;\r\n                    }\r\n                    else {\r\n                        newPoint.freq = data.freq;\r\n                        newPoint.gain = data.gain;\r\n                    }\r\n                } else {\r\n                    this._dragChange = null;\r\n                    this._writingMods = false;\r\n                    this._mouseDown = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._dragChange != null && (this._doc.lastChangeWas(this._dragChange) || this._writingMods )) {\r\n            this._dragChange.undo();\r\n        } else {\r\n            this._mouseDown = false;\r\n        }\r\n        this._dragChange = null;\r\n        this._deletingPoint = false;\r\n\r\n        if (this.coordText != null && !this._mouseDown) {\r\n            let gain: number = Math.round(this._yToGain(this._mouseY));\r\n            let freq: number = Math.round(this._xToFreq(this._mouseX));\r\n            if (freq >= 0 && freq < Config.filterFreqRange && gain >= 0 && gain < Config.filterGainRange)\r\n                this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\r\n            else\r\n                this.coordText.innerText = \"\";\r\n        }\r\n\r\n        if (this._mouseDown) {\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            if (this._addingPoint) {\r\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(this._yToGain(this._mouseY))));\r\n                const freq: number = this._findNearestFreqSlot(this._useFilterSettings, this._xToFreq(this._mouseX), -1);\r\n                if (freq >= 0 && freq < Config.filterFreqRange) {\r\n                    const point: FilterControlPoint = new FilterControlPoint();\r\n                    point.type = this._addedType;\r\n                    point.freq = freq;\r\n                    point.gain = gain;\r\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._useFilterSettings, point, this._useFilterSettings.controlPointCount, this._useNoteFilter));\r\n\r\n                    if (this.coordText != null) {\r\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\r\n                    }\r\n                } else {\r\n                    this._deletingPoint = true;\r\n                }\r\n            } else if (this._selectedIndex >= this._useFilterSettings.controlPointCount || this._selectedIndex == -1) {\r\n                this._dragChange = null;\r\n                this._mouseDown = false;\r\n            } else {\r\n                const freqDelta: number = this._xToFreq(this._mouseX) - this._freqStart;\r\n                const gainDelta: number = this._yToGain(this._mouseY) - this._gainStart;\r\n                let point: FilterControlPoint = this._useFilterSettings.controlPoints[this._selectedIndex];\r\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(point.gain + gainDelta)));\r\n                const freq: number = this._findNearestFreqSlot(this._useFilterSettings, point.freq + freqDelta, this._selectedIndex);\r\n\r\n                if (Math.round(freqDelta) != 0.0 || Math.round(gainDelta) != 0.0 || freq != point.freq || gain != point.gain) {\r\n                    this._mouseDragging = true;\r\n                }\r\n\r\n                if (freq >= 0 && freq < Config.filterFreqRange) {\r\n                    sequence.append(new ChangeFilterMovePoint(this._doc, point, point.freq, freq, point.gain, gain, this._useNoteFilter, this._selectedIndex));\r\n                    if (this.coordText != null) {\r\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\r\n                        if (!this._writingMods) {\r\n                            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                            instrument.tmpEqFilterEnd = null;\r\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                            instrument.tmpNoteFilterEnd = null;\r\n                        }\r\n                    }\r\n                } else {\r\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._useFilterSettings, point, this._selectedIndex, this._useNoteFilter, true));\r\n                    this._deletingPoint = true;\r\n                }\r\n            }\r\n        }\r\n        if (this._mouseDown || this._mouseOver) {\r\n            this._updatePath();\r\n        }\r\n    }\r\n\r\n    private _whenCursorReleased = (event: Event): void => {\r\n        if (this._writingMods) {\r\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n            this._useFilterSettings = this._getTargetFilterSettings(instrument);\r\n        }\r\n\r\n        if (this.container.offsetParent == null) return;\r\n        if (this._mouseDown && (this._doc.lastChangeWas(this._dragChange) || this._writingMods ) && this._dragChange != null) {\r\n            if (!this._addingPoint && !this._mouseDragging && !this._touchMode) {\r\n                if (this._selectedIndex < this._useFilterSettings.controlPointCount && this._selectedIndex != -1) {\r\n                    const point: FilterControlPoint = this._useFilterSettings.controlPoints[this._selectedIndex];\r\n                    let change: ChangeFilterAddPoint = new ChangeFilterAddPoint(this._doc, this._useFilterSettings, point, this._selectedIndex, this._useNoteFilter, true);\r\n                    if (!this._larger) {\r\n                        this._doc.record(change);\r\n                    }\r\n                }\r\n            } else if (!this._larger) {\r\n                this._doc.record(this._dragChange);\r\n            }\r\n            this._updatePath();\r\n            if (this._larger) {\r\n                this.selfUndoSettings.length = this.selfUndoHistoryPos+1;\r\n                this.selfUndoSettings.push(JSON.stringify(this._filterSettings.toJsonObject()));\r\n                this.selfUndoHistoryPos++;\r\n            }\r\n        }\r\n        this._dragChange = null;\r\n        this._mouseDragging = false;\r\n        this._deletingPoint = false;\r\n        this._mouseDown = false;\r\n        this._writingMods = false;\r\n        this._updateCursor();\r\n    }\r\n\r\n    private _findNearestFreqSlot(filterSettings: FilterSettings, targetFreq: number, ignoreIndex: number): number {\r\n        const roundedFreq: number = Math.round(targetFreq);\r\n        let lowerFreq: number = roundedFreq;\r\n        let upperFreq: number = roundedFreq;\r\n        let tryingLower: boolean = (roundedFreq <= targetFreq);\r\n        while (true) {\r\n            let foundConflict: boolean = false;\r\n            const currentFreq: number = tryingLower ? lowerFreq : upperFreq;\r\n            for (let i: number = 0; i < filterSettings.controlPointCount; i++) {\r\n                if (i == ignoreIndex) continue;\r\n                if (filterSettings.controlPoints[i].freq == currentFreq) {\r\n                    foundConflict = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!foundConflict) return currentFreq;\r\n            tryingLower = !tryingLower;\r\n            if (tryingLower) lowerFreq--;\r\n            if (!tryingLower) upperFreq++;\r\n        }\r\n    }\r\n\r\n    private static _circlePath(cx: number, cy: number, radius: number, reverse: boolean = false): string {\r\n        return `M ${cx - radius} ${cy} ` +\r\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${radius * 2} 0 ` +\r\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${-radius * 2} 0 `;\r\n    }\r\n\r\n    private _updatePath(): void {\r\n        this._highlight.style.display = \"none\";\r\n        this._label.textContent = \"\";\r\n\r\n        let controlPointPath: string = \"\";\r\n        let dottedLinePath: string = \"\";\r\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\r\n            const pointX: number = this._freqToX(point.freq);\r\n            const pointY: number = this._gainToY(point.gain);\r\n\r\n            controlPointPath += FilterEditor._circlePath(pointX, pointY, this._pointRadius);\r\n\r\n            if (point.type == FilterType.highPass) {\r\n                dottedLinePath += \"M \" + 0 + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\r\n            } else if (point.type == FilterType.lowPass) {\r\n                dottedLinePath += \"M \" + this._editorWidth + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\r\n            }\r\n\r\n            if (this._selectedIndex == i && this._mouseOver && !this._mouseDown) {\r\n                this._highlight.setAttribute(\"cx\", String(pointX));\r\n                this._highlight.setAttribute(\"cy\", String(pointY));\r\n                this._highlight.style.display = \"\";\r\n\r\n                if (this.coordText != null) {\r\n                    this.coordText.innerText = \"(\" + point.freq + \", \" + point.gain + \")\";\r\n                }\r\n            }\r\n            if ((this._selectedIndex == i || (this._addingPoint && this._mouseDown && i == this._useFilterSettings.controlPointCount - 1)) && (this._mouseOver || this._mouseDown) && !this._deletingPoint) {\r\n                this._label.textContent = (i + 1) + \": \" + Config.filterTypeNames[point.type] + (this._larger ? \" @\" + prettyNumber(point.getHz()) + \"Hz\" : \"\");\r\n            }\r\n\r\n            if (this._larger) {\r\n                this._indicators[i].style.setProperty(\"display\", \"\");\r\n                this._indicators[i].setAttribute(\"x\", \"\" + (pointX - 7));\r\n                this._indicators[i].setAttribute(\"y\", \"\" + (pointY + 2));\r\n            }\r\n        }\r\n        this._controlPointPath.setAttribute(\"d\", controlPointPath);\r\n        this._dottedLinePath.setAttribute(\"d\", dottedLinePath);\r\n        if (this._addingPoint && !this._mouseDown && this._mouseOver) {\r\n            this._label.textContent = \"+ \" + Config.filterTypeNames[this._addedType];\r\n        }\r\n\r\n        // Hide unused control point labels\r\n        if (this._larger) {\r\n            for (let i: number = this._useFilterSettings.controlPointCount; i < Config.filterMaxPoints; i++) {\r\n                this._indicators[i].style.setProperty(\"display\", \"none\");\r\n            }\r\n        }\r\n\r\n        //let volumeCompensation: number = 1.0;\r\n        const standardSampleRate: number = 44800;\r\n        const filters: FilterCoefficients[] = [];\r\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\r\n            const filter: FilterCoefficients = new FilterCoefficients();\r\n            point.toCoefficients(filter, standardSampleRate);\r\n            filters.push(filter);\r\n            //volumeCompensation *= point.getVolumeCompensationMult();\r\n        }\r\n\r\n        const response: FrequencyResponse = new FrequencyResponse();\r\n        let responsePath: string = \"M 0 \" + this._editorHeight + \" \";\r\n        for (let i: number = -1; i <= Config.filterFreqRange; i++) {\r\n            const hz: number = FilterControlPoint.getHzFromSettingValue(i);\r\n            const cornerRadiansPerSample: number = 2.0 * Math.PI * hz / standardSampleRate;\r\n            const real: number = Math.cos(cornerRadiansPerSample);\r\n            const imag: number = Math.sin(cornerRadiansPerSample);\r\n\r\n            let linearGain: number = 1.0; //volumeCompensation;\r\n            for (const filter of filters) {\r\n                response.analyzeComplex(filter, real, imag);\r\n                linearGain *= response.magnitude();\r\n            }\r\n\r\n            const gainSetting: number = Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter;\r\n            const y: number = this._gainToY(gainSetting);\r\n            const x: number = this._freqToX(i);\r\n            responsePath += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y) + \" \";\r\n        }\r\n\r\n        responsePath += \"L \" + this._editorWidth + \" \" + this._editorHeight + \" L 0 \" + this._editorHeight + \" z \";\r\n        this._responsePath.setAttribute(\"d\", responsePath);\r\n    }\r\n\r\n    // Swap to new filter settings all at once.\r\n    public swapToSettings(settings: FilterSettings, useHistory: boolean = false) {\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        new ChangeFilterSettings(this._doc, settings, this._filterSettings, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters);\r\n        this._filterSettings = settings;\r\n        this._subFilters[this._subfilterIndex] = settings;\r\n        if (useHistory && this._larger) {\r\n            this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\r\n            this.selfUndoSettings.push(JSON.stringify((this._filterSettings.toJsonObject())));\r\n            this.selfUndoHistoryPos++;\r\n        }\r\n        this._useFilterSettings = this._filterSettings;\r\n        this._updatePath();\r\n    }\r\n\r\n    // Save settings on prompt close (record a change from first settings to newest)\r\n    public saveSettings() {\r\n        let firstFilter: FilterSettings = new FilterSettings;\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        firstFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[0])));\r\n        this._doc.record(new ChangeFilterSettings(this._doc, this._subFilters[0], firstFilter, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters), true);\r\n    }\r\n\r\n    // Self-undo history management\r\n    // Returns the subfilter index to swap to, if any\r\n    public undo(): number {\r\n        if (this.selfUndoHistoryPos > 0) {\r\n            this.selfUndoHistoryPos--;\r\n            // Jump back and load latest state of this subfilter. Also save subfilter settings for current index\r\n            if (this.selfUndoSettings[this.selfUndoHistoryPos + 1] != null && this.selfUndoSettings[this.selfUndoHistoryPos + 1].startsWith(\"jmp\")) {\r\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos + 1];\r\n                let jumpIndex = +str.substring(3, str.indexOf(\"|\"));\r\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex);\r\n                return jumpIndex;\r\n            // Jumping to FIRST state of this subfilter\r\n            } else if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\r\n                let savedFilter: FilterSettings = new FilterSettings();\r\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\r\n                savedFilter.fromJsonObject(JSON.parse(str.substring(str.indexOf(\":\") + 1)));\r\n                this.swapToSettings(savedFilter, false);\r\n            } else {\r\n                let savedFilter: FilterSettings = new FilterSettings();\r\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\r\n                this.swapToSettings(savedFilter, false);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Returns the subfilter index to swap to, if any\r\n    public redo(): number {\r\n        if (this.selfUndoHistoryPos < this.selfUndoSettings.length-1) {\r\n            this.selfUndoHistoryPos++;\r\n            // Check if next index in undo queue is a command to jump to a new filter index\r\n            if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\r\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\r\n                let jumpIndex = +str.substring(str.indexOf(\"|\") + 1, str.indexOf(\":\"));\r\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex, false);\r\n                return jumpIndex;\r\n            } else {\r\n                let savedFilter: FilterSettings = new FilterSettings();\r\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\r\n                this.swapToSettings(savedFilter, false);\r\n            }\r\n        }\r\n        return -1;\r\n\r\n    }\r\n\r\n    public resetToInitial() {\r\n        this.selfUndoHistoryPos = 1;\r\n        this.undo();\r\n    }\r\n\r\n    public swapSubfilterIndices(newIndex: number) {\r\n        if (this._selectedIndex == -1)\r\n            return;\r\n\r\n        if (newIndex >= this._useFilterSettings.controlPointCount)\r\n            return;\r\n\r\n        let tmp: FilterControlPoint = this._useFilterSettings.controlPoints[this._selectedIndex];\r\n        this._useFilterSettings.controlPoints[this._selectedIndex] = this._useFilterSettings.controlPoints[newIndex];\r\n        this._useFilterSettings.controlPoints[newIndex] = tmp;\r\n\r\n        this.render();\r\n    }\r\n\r\n    public swapToSubfilter(oldIndex: number, newIndex: number, useHistory: boolean = false) {\r\n        if (oldIndex != newIndex) {\r\n            // Save current subfilter\r\n            let currFilter: FilterSettings = new FilterSettings();\r\n            currFilter.fromJsonObject(this._filterSettings.toJsonObject());\r\n            this._subFilters[oldIndex] = currFilter;\r\n\r\n            // Copy main filter at this time\r\n            if (this._subFilters[newIndex] == undefined) {\r\n                let parsedFilter: FilterSettings = new FilterSettings();\r\n                parsedFilter.fromJsonObject(this._subFilters[0].toJsonObject());\r\n                this._subFilters[newIndex] = parsedFilter;\r\n            }\r\n\r\n            // Record the swap in undo history\r\n            if (useHistory) {\r\n                this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\r\n                // Swap from|to:filterInitSettings\r\n                this.selfUndoSettings.push(\"jmp\" + oldIndex + \"|\" + newIndex + \":\" + JSON.stringify(this._subFilters[newIndex].toJsonObject()));\r\n                this.selfUndoHistoryPos++;\r\n            }\r\n\r\n            this._subfilterIndex = newIndex;\r\n            // Never use history here since the swap action is itself history-generating\r\n            this.swapToSettings(this._subFilters[newIndex], false);\r\n        }\r\n\r\n    }\r\n\r\n    private _getTargetFilterSettings(instrument: Instrument): FilterSettings {\r\n        // TODO: Re-compute default point freqs/gains only when needed\r\n        let targetSettings: FilterSettings = (this._useNoteFilter) ? instrument.tmpNoteFilterStart! : instrument.tmpEqFilterStart!;\r\n        if (targetSettings == null) targetSettings = (this._useNoteFilter) ? instrument.noteFilter : instrument.eqFilter;\r\n\r\n        return targetSettings;\r\n    }\r\n\r\n    public render(activeMods: boolean = false, forceModRender: boolean = false): void {\r\n        this._writingMods = forceModRender && this._mouseDown;\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\r\n        let displayMods: boolean = (activeMods && !this._larger && (forceModRender || (!this._mouseOver && !this._mouseDragging && !this._mouseDown) ) && this._doc.synth.playing)\r\n        if (displayMods)\r\n            this._controlPointPath.style.setProperty(\"fill\", `${ColorConfig.overwritingModSlider}`);\r\n        else if (!this._larger)\r\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\r\n\r\n        if (this._useFilterSettings != filterSettings && !this._writingMods) {\r\n            this._dragChange = null;\r\n            this._mouseDown = false;\r\n        }\r\n        this._filterSettings = filterSettings;\r\n\r\n        // If modulators are active, show synth's current filter point settings instead of real points.\r\n        // Will auto update, but if the user is writing directly to mod values then the writing point will be\r\n        // forcibly maintained at the cursor position.\r\n        if ( displayMods ) {\r\n            this._useFilterSettings = this._getTargetFilterSettings(instrument);\r\n\r\n            if (this._writingMods)\r\n                this._whenCursorMoved();\r\n        }\r\n        else {\r\n            this._useFilterSettings = filterSettings;\r\n        }\r\n\r\n        if (!this._mouseDown) this._updateCursor();\r\n\r\n        let pointTypes: number = 0;\r\n        let pointFreqs: number = 0;\r\n        let pointGains: number = 0;\r\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\r\n            pointTypes = pointTypes * FilterType.length + point.type;\r\n            pointFreqs = pointFreqs * Config.filterFreqRange + point.freq;\r\n            pointGains = pointGains * Config.filterGainRange + point.gain;\r\n        }\r\n        if (this._renderedSelectedIndex != this._selectedIndex ||\r\n            this._renderedPointCount != this._useFilterSettings.controlPointCount ||\r\n            this._renderedPointTypes != pointTypes ||\r\n            this._renderedPointFreqs != pointFreqs ||\r\n            this._renderedPointGains != pointGains) {\r\n            this._renderedSelectedIndex = this._selectedIndex;\r\n            this._renderedPointCount = this._useFilterSettings.controlPointCount;\r\n            this._renderedPointTypes = pointTypes;\r\n            this._renderedPointFreqs = pointFreqs;\r\n            this._renderedPointGains = pointGains;\r\n            this._updatePath();\r\n        }\r\n\r\n        /*\r\n        if (this._renderedKey != this._doc.song.key) {\r\n            this._renderedKey = this._doc.song.key;\r\n            const tonicHz: number = Instrument.frequencyFromPitch(Config.keys[this._doc.song.key].basePitch);\r\n            const x: number = this._freqToX(FilterControlPoint.getSettingValueFromHz(tonicHz));\r\n            this._octaves.setAttribute(\"x\", String(x));\r\n        }\r\n        */\r\n    }\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { FilterEditor } from \"./FilterEditor\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { FilterSettings } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p } = HTML;\r\n\r\nexport class CustomFilterPrompt implements Prompt {\r\n\r\n\tpublic filterEditor: FilterEditor;\r\n\r\n\tpublic filterData: FilterSettings = new FilterSettings;\r\n\tpublic startingFilterData: FilterSettings = new FilterSettings;\r\n\r\n\tprivate _subfilterIndex = 0;\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly _filterButtons: HTMLButtonElement[] = [];\r\n\r\n\tpublic readonly _filterButtonContainer: HTMLDivElement = div({class: \"instrument-bar\", style: \"justify-content: center;\"});\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tprivate readonly _filterContainer: HTMLDivElement = div({ style: \"width: 100%; display: flex; flex-direction: row; align-items: center; justify-content: center;\" });\r\n\r\n\tprivate readonly _editorTitle: HTMLDivElement = div({}, h2(\"Edit Filter\"));\r\n\r\n\tprivate readonly _filterCopyButton: HTMLButtonElement = button({ style: \"width:86px; margin-right: 5px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _filterPasteButton: HTMLButtonElement = button({ style: \"width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _filterCopyPasteContainer: HTMLDivElement = div({ style: \"width: 185px;\" }, this._filterCopyButton, this._filterPasteButton);\r\n\r\n\tprivate readonly _filterCoordinateText: HTMLDivElement = div({ style: \"text-align: left; margin-bottom: 0px; font-size: x-small; height: 1.3em; color: \" + ColorConfig.secondaryText + \";\"}, p(\"\"));\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\tthis._editorTitle,\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton\r\n\t\t),\r\n\t\tthis._filterButtonContainer,\r\n\t\tthis._filterContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._filterCopyPasteContainer,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor, private _useNoteFilter: boolean) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._filterCopyButton.addEventListener(\"click\", this._copyFilterSettings);\r\n\t\tthis._filterPasteButton.addEventListener(\"click\", this._pasteFilterSettings);\r\n\t\tthis.updatePlayButton();\r\n\t\tlet colors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\r\n\r\n\t\tthis.filterEditor = new FilterEditor(_doc, _useNoteFilter, true);\r\n\t\tthis._filterContainer.appendChild(this.filterEditor.container);\r\n\r\n\t\t// Add coordinates to editor\r\n\t\tthis.filterEditor.container.insertBefore(this._filterCoordinateText, this.filterEditor.container.firstChild);\r\n\t\tthis.filterEditor.coordText = this._filterCoordinateText;\r\n\r\n\t\tthis._editorTitle.children[0].innerHTML = (_useNoteFilter) ? \"Edit Note Filter\" : \"Edit EQ Filter\";\r\n\r\n\t\tlet newButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 5em;\"}, \"Main\");\r\n\t\tthis._filterButtonContainer.appendChild(newButton);\r\n\t\tthis._filterButtons.push(newButton);\r\n\t\tnewButton.addEventListener(\"click\", () => { this._setSubfilter(0); });\r\n\t\tfor (let i: number = 1; i < Config.filterMorphCount; i++) {\r\n\t\t\tlet newSubButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 2em;\"}, \"\" + i);\r\n\t\t\tthis._filterButtons.push(newSubButton);\r\n\t\t\tthis._filterButtonContainer.appendChild(newSubButton);\r\n\t\t\tnewSubButton.addEventListener(\"click\", () => { this._setSubfilter(i); });\r\n\t\t}\r\n\t\tthis._filterButtons[Config.filterMorphCount - 1].classList.add(\"last-button\");\r\n\t\tthis._filterButtons[0].classList.add(\"selected-instrument\");\r\n\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\r\n\t\tthis._filterContainer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.filterEditor.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\t\tthis.filterEditor.render();\r\n\t}\r\n\r\n\tprivate _setSubfilter = (index: number, useHistory: boolean = true, doSwap: boolean = true): void => {\r\n\t\tthis._filterButtons[this._subfilterIndex].classList.remove(\"selected-instrument\");\r\n\t\tif ( doSwap ) this.filterEditor.swapToSubfilter(this._subfilterIndex, index, useHistory);\r\n\t\tthis._subfilterIndex = index;\r\n\t\tthis._filterButtons[index].classList.add(\"selected-instrument\");\r\n    }\r\n\r\n\tprivate _copyFilterSettings = (): void => {\r\n\t\tconst filterCopy: any = this._useNoteFilter\r\n\t\t\t? this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].noteFilter.toJsonObject()\r\n\t\t\t: this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].eqFilter.toJsonObject();\r\n\t\twindow.localStorage.setItem(\"filterCopy\", JSON.stringify(filterCopy));\r\n\t}\r\n\r\n\tprivate _pasteFilterSettings = (): void => {\r\n\r\n\t\tlet filterCopy: FilterSettings = new FilterSettings();\r\n\t\tfilterCopy.fromJsonObject(JSON.parse(String(window.localStorage.getItem(\"filterCopy\"))));\r\n\t\tif (filterCopy != null) {\r\n\t\t\tthis.filterEditor.swapToSettings(filterCopy, true);\r\n\t\t}\r\n    }\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tlet newIdx = this.filterEditor.undo();\r\n\t\t\tif (newIdx >= 0) {\r\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\r\n            }\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tlet newIdx = this.filterEditor.redo();\r\n\t\t\tif (newIdx >= 0) {\r\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\r\n\t\t\t}\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\t// Number 1-9\r\n\t\tif (event.keyCode >= 49 && event.keyCode <= 57) {\r\n\t\t\tif (!event.shiftKey) {\r\n\t\t\t\tthis.filterEditor.swapSubfilterIndices(event.keyCode - 49);\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tthis._songEditor.togglePlay();\r\n\t\tthis.updatePlayButton();\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore filter settings to default\r\n\t\tthis.filterEditor.resetToInitial();\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\telse if (event.keyCode == 32) { // space\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse if (event.keyCode == 90) { // z\r\n\t\t\tthis.filterEditor.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 89) { // y\r\n\t\t\tthis.filterEditor.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\telse if (event.keyCode == 219) { // [\r\n\t\t\tthis._doc.synth.goToPrevBar();\r\n\t\t}\r\n\t\telse if (event.keyCode == 221) { // ]\r\n\t\t\tthis._doc.synth.goToNextBar();\r\n\t\t}\r\n\t\telse if (event.keyCode >= 48 && event.keyCode <= 57) { // 0-9\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._setSubfilter(event.keyCode - 48);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis.filterEditor.saveSettings();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\n// import { SongEditor } from \"./SongEditor\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Channel, Instrument } from \"../synth/synth\";\r\n\r\nconst {button, div, h2, input, label, br} = HTML;\r\nexport class InstrumentExportPrompt implements Prompt {\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n        private readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n        private readonly _exportMultipleBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\r\n        private readonly _channelName: String = this._doc.song.channels[this._doc.channel].name == \"\" ? \"Dogebox2-Instrument\" : this._doc.song.channels[this._doc.channel].name;\r\n        private readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: this._channelName, maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\r\n\t\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\t    h2(\"Export Instruments Options\"),\r\n            div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n            \"File name:\",\r\n            this._fileName,\r\n            ),\r\n            label({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\"Export all instruments\",\r\n            br(),\r\n            \"in channel:\",\r\n\t\t\tthis._exportMultipleBox,\r\n\t\t    ),\r\n            div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n            this._exportButton,\r\n            ),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) { //, private _editor: SongEditor\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n        this._exportButton.addEventListener(\"click\", this._decide_export);\r\n        this._fileName.addEventListener(\"input\", InstrumentExportPrompt._validateFileName)\r\n\t}\r\n\r\n\t\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\t\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n        this._exportButton.removeEventListener(\"click\", this._decide_export);\r\n        this._fileName.removeEventListener(\"input\", InstrumentExportPrompt._validateFileName)\r\n\t}\r\n\r\n        public _decide_export = (): void => {\r\n            this._exportMultipleBox.checked ? this._export_multiple() : this._export_single()\r\n        }\r\n        public _export_multiple = (): void => {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instruments: Instrument[] = channel.instruments.map((instrument) => {\r\n            const instrumentCopy: any = instrument.toJsonObject();\r\n            instrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n            return instrumentCopy;\r\n        });\r\n\r\n        const jsonBlob = new Blob([JSON.stringify(instruments)], { type: 'application/json' });\r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.href = URL.createObjectURL(jsonBlob);\r\n        downloadLink.download = this._fileName.value + '.json';\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n\r\n        // this._editor.refocusStage();\r\n        this._close();\r\n    }\r\n        public _export_single = (): void => {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        const instrumentCopy: any = instrument.toJsonObject();\r\n        instrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\r\n        const jsonBlob = new Blob([JSON.stringify(instrumentCopy)], { type: 'application/json' });\r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.href = URL.createObjectURL(jsonBlob);\r\n        downloadLink.download = this._fileName.value + '.json';\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n\r\n        // this._editor.refocusStage();\r\n        this._close();\r\n    }\r\n\r\n    private static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n        let input: HTMLInputElement;\r\n        if (event != null) {\r\n            input = <HTMLInputElement>event.target;\r\n        } else if (use != undefined) {\r\n            input = use;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n        if (deleteChars.test(input.value)) {\r\n            let cursorPos: number = <number>input.selectionStart;\r\n            input.value = input.value.replace(deleteChars, \"\");\r\n            cursorPos--;\r\n            input.setSelectionRange(cursorPos, cursorPos);\r\n        }\r\n    }\r\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\n//import { SongEditor } from \"./SongEditor\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Channel, Instrument } from \"../synth/synth\";\r\nimport { ChangePasteInstrument, ChangeAppendInstrument, ChangeViewInstrument } from \"./changes\";\r\n\r\nconst {button, div, h2, input, select, option } = HTML;\r\n\r\nexport class InstrumentImportPrompt implements Prompt {\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _importStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\t\toption({value: \"append\"}, \"Append instruments to the end of the list.\"),\r\n\t\t\toption({value: \"replace\"}, \"Replace only the selected instrument.\"),\r\n\t\t\toption({value: \"all\"}, \"Replace all instruments in the channel.\"),\r\n\t\t);\r\n\t\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json\"});\r\n\r\n\t\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\t    h2(\"Import Instrument(s)\"),\r\n            div({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._importStrategySelect),\r\n\t\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\r\n\t\t//If file has 1 instrument, and no checkboxes are selected, add all the instrument to the end\r\n\t\t//If file has multiple instruments, and no checkboxes are selected, add all the instruments to the end\r\n\r\n\t\t//If file has 1 instrument, and checkbox 1 is selected, clear all current isntruments and add the file instrument\r\n\t\t//If file has multiple instruments, and checkbox 1 is selected, clear all current isntruments and add the file instruments\r\n\r\n\t\t//If file has 1 instrument, and checkbox 2 is selected, replace the currently selected instrument with the file instrument\r\n\t\t//If file has multiple instruments, and checkbox 2 is selected, replace the currently selected instrument with the file instrument 1, add all the rest of the instruments to the end\r\n\r\n\t\t//importing a multi instrument with no multi instrument settings turned on will alert an a warning and not import the instrument\r\n\t\t//checkbox 1 and 2 will always be grayed out if multi instruments arent enabled.\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tif ((_doc.song.patternInstruments||_doc.song.layeredInstruments)==false) {\r\n\t\t\tthis._importStrategySelect.disabled = true;\r\n\t\t\tthis._importStrategySelect.value = \"replace\";\r\n\t\t} else {\r\n\t\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"instrumentImportStrategy\");\r\n\t\t\tif (lastStrategy != null) this._importStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\t\tprivate _whenFileSelected = (): void => {\r\n\t\t\tconst file: File = this._fileInput.files![0];\r\n\t\t\tif (!file) return;\r\n\t\t\tconst reader: FileReader = new FileReader()\r\n\t\t\treader.onload = (e) => {\r\n\t\t\ttry {\r\n\t\t\t\t\tconst fileParsed: any = JSON.parse(String(e.target?.result));\r\n\t\t\t\t\tconsole.log(\"Processing file:\", fileParsed)\r\n\t\t\t\t\tif (fileParsed.constructor.name == \"Array\") {\r\n\t\t\t\t\t\tif ((this._doc.song.patternInstruments||this._doc.song.layeredInstruments)==false) {\r\n\t\t\t\t\t\t\talert(\"Instrument file contains multiple instruments! Please turn on pattern or layered instruments!\");\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._import_multiple(fileParsed);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._import_single(fileParsed);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('Error reading file:', error);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treader.readAsText(file);\r\n\t}\r\n\r\n\t\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\t\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n        public _import_multiple = (file: any): void => {\r\n\t\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\t\tconst currentInstrum: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tswitch (this._importStrategySelect.value) {\r\n\t\t\t\tcase \"replace\":\r\n\t\t\t\t\t// console.log(\"multi replace\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"instrumentImportStrategy\", this._importStrategySelect.value);\r\n\t\t\t\t\t//Replace the current instrument with the first one, then add the rest\r\n\t\t\t\t\tconst firstInstrum = file[0];\r\n\t\t\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, currentInstrum, firstInstrum));\r\n\t\t\t\t\tfor (let i = 1; i < file.length; i++) {\r\n\t\t\t\t\t\tconst insturm: any = file[i];\r\n\t\t\t\t\t\tif (!this._validate_instrument_limit(channel)) {\r\n\t\t\t\t\t\t\talert(\"Max instruments reached! Some instruments were not imported.\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._doc.record(new ChangeAppendInstrument(this._doc, channel, insturm));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeViewInstrument(this._doc, this._doc.getCurrentInstrument()))\r\n\t\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\t\t// console.log(\"multi all\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"instrumentImportStrategy\", this._importStrategySelect.value);\r\n\t\t\t\t\t//Delete all instruments then add these ones\r\n\t\t\t\t\tchannel.instruments.length = 0;\r\n\t\t\t\t\tfor (let insturm of file) {\r\n\t\t\t\t\t\tif (!this._validate_instrument_limit(channel)) {\r\n\t\t\t\t\t\t\talert(\"Max instruments reached! Some instruments were not imported.\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._doc.record(new ChangeAppendInstrument(this._doc, channel, insturm));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeViewInstrument(this._doc, channel.instruments.length-1))\r\n\t\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// console.log(\"multi append\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"instrumentImportStrategy\", this._importStrategySelect.value);\r\n\t\t\t\t\t//Add these instruments\r\n\t\t\t\t\tfor (let insturm of file) {\r\n\t\t\t\t\t\tif (!this._validate_instrument_limit(channel)) {\r\n\t\t\t\t\t\t\talert(\"Max instruments reached! Some instruments were not imported.\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._doc.record(new ChangeAppendInstrument(this._doc, channel, insturm));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeViewInstrument(this._doc, channel.instruments.length-1))\r\n\t\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n    }\r\n\r\n\t\tpublic _validate_instrument_limit = (channel: Channel): boolean => {\r\n\t\t\tif (this._doc.song.getMaxInstrumentsPerChannel()<=channel.instruments.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n        public _import_single = (file: any): void => {\r\n\t\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\t\tconst currentInstrum: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tswitch (this._importStrategySelect.value) {\r\n\t\t\t\tcase \"replace\":\r\n\t\t\t\t\t//Replace the current instrument with this one\r\n\t\t\t\t\t// console.log(\"single replace\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"instrumentImportStrategy\", this._importStrategySelect.value);\r\n\t\t\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, currentInstrum, file));\r\n\t\t\t\t\tthis._doc.record(new ChangeViewInstrument(this._doc, this._doc.getCurrentInstrument()))\r\n\t\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase \"all\":\r\n\t\t\t\t\t//Delete all instruments then add this one\r\n\t\t\t\t\t// console.log(\"single all\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"instrumentImportStrategy\", this._importStrategySelect.value);\r\n\t\t\t\t\tchannel.instruments.length = 1;\r\n\t\t\t\t\tconst firstInstrum = channel.instruments[0];\r\n\t\t\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, firstInstrum, file));\r\n\t\t\t\t\tthis._doc.record(new ChangeViewInstrument(this._doc, 0))\r\n\t\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t//Add this instrument\r\n\t\t\t\t\tif (!this._validate_instrument_limit(channel)) { alert(\"Max instruments reached! The instrument was not imported.\"); this._doc.prompt = null; return; }\r\n\t\t\t\t\t// console.log(\"single append\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"instrumentImportStrategy\", this._importStrategySelect.value);\r\n\t\t\t\t\tthis._doc.record(new ChangeAppendInstrument(this._doc, channel, file));\r\n\t\t\t\t\tthis._doc.record(new ChangeViewInstrument(this._doc, channel.instruments.length-1))\r\n\t\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n    }\r\n\r\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\t\t\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\t\t\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\t\t\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\t\t\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\t\t\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\t\t\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\t\t\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\t\t\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\t\t\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\t\t\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t\t35: { frequency:  0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t\t36: { frequency:  0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t\t37: { frequency:  5, duration: 1, volume: 3 }, // Side Stick\r\n\t\t38: { frequency:  4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t\t39: { frequency:  5, duration: 2, volume: 3 }, // Hand Clap\r\n\t\t40: { frequency:  4, duration: 2, volume: 3 }, // Electric Snare\r\n\t\t41: { frequency:  1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t\t42: { frequency:  8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t\t43: { frequency:  1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t\t44: { frequency:  8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t\t45: { frequency:  2, duration: 2, volume: 3 }, // Low Tom\r\n\t\t46: { frequency:  8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t\t47: { frequency:  2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t\t48: { frequency:  3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t\t49: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t\t50: { frequency:  3, duration: 2, volume: 3 }, // High Tom\r\n\t\t51: { frequency:  6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t\t52: { frequency:  7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t\t53: { frequency:  6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t\t55: { frequency:  9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t\t56: { frequency:  7, duration: 1, volume: 2 }, // Cowbell\r\n\t\t57: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t\t59: { frequency:  6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { InstrumentType, /*EnvelopeType,*/ Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n    return low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n    if ((<any>navigator).msSaveOrOpenBlob) {\r\n        (<any>navigator).msSaveOrOpenBlob(blob, name);\r\n        return;\r\n    }\r\n\r\n    const anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n    if (anchor.download != undefined) {\r\n        const url: string = URL.createObjectURL(blob);\r\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n        anchor.href = url;\r\n        anchor.download = name;\r\n        // Chrome bug regression: We need to delay dispatching the click\r\n        // event. Seems to be related to going back in the browser history.\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n        setTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n    } else {\r\n        const url: string = URL.createObjectURL(blob);\r\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n        if (!window.open(url, \"_blank\")) window.location.href = url;\r\n    }\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n    private synth: Synth;\r\n    private thenExportTo: string;\r\n    private recordedSamplesL: Float32Array;\r\n    private recordedSamplesR: Float32Array;\r\n    private sampleFrames: number;\r\n    private totalChunks: number;\r\n    private currentChunk: number;\r\n    private outputStarted: boolean = false;\r\n    private readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n    private readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n    private readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n    private readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n    private readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n    private readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ value: \"wav\" }, \"Export to .wav file.\"),\r\n        option({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n        option({ value: \"midi\" }, \"Export to .mid file.\"),\r\n        option({ value: \"json\" }, \"Export to .json file.\"),\r\n        option({ value: \"html\" }, \"Export to .html file.\"),\r\n    );\r\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n    private readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n    private readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n    private readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n    private readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n        this._outputProgressBar,\r\n        this._outputProgressLabel,\r\n    );\r\n    private static readonly midiChipInstruments: number[] = [\r\n        0x4A, // rounded -> recorder\r\n        0x47, // triangle -> clarinet\r\n        0x50, // square -> square wave\r\n        0x46, // ¹/₄ pulse -> bassoon\r\n        0x44, // ¹/₈ pulse -> oboe\r\n        0x51, // sawtooth -> sawtooth wave\r\n        0x51, // double saw -> sawtooth wave\r\n        0x51, // double pulse -> sawtooth wave\r\n        0x51, // spiky -> sawtooth wave\r\n    ];\r\n\r\n    public readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n        h2(\"Export Options\"),\r\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n            \"File name:\",\r\n            this._fileName,\r\n        ),\r\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n            \"Length:\",\r\n            this._computedSamplesLabel,\r\n        ),\r\n        div({ style: \"display: table; width: 100%;\" },\r\n            div({ style: \"display: table-row;\" },\r\n                div({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n                div({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n                div({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n            ),\r\n            div({ style: \"display: table-row;\" },\r\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n            ),\r\n        ),\r\n        div({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n        div({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n        this._outputProgressContainer,\r\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n            this._exportButton,\r\n        ),\r\n        this._cancelButton,\r\n    );\r\n\r\n    constructor(private _doc: SongDocument) {\r\n        this._loopDropDown.value = \"1\";\r\n\r\n        if (this._doc.song.loopStart == 0) {\r\n            this._enableIntro.checked = false;\r\n            this._enableIntro.disabled = true;\r\n        } else {\r\n            this._enableIntro.checked = true;\r\n            this._enableIntro.disabled = false;\r\n        }\r\n        if (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n            this._enableOutro.checked = false;\r\n            this._enableOutro.disabled = true;\r\n        } else {\r\n            this._enableOutro.checked = true;\r\n            this._enableOutro.disabled = false;\r\n        }\r\n\r\n        const lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n        if (lastExportFormat != null) {\r\n            this._formatSelect.value = lastExportFormat;\r\n        }\r\n\r\n        this._fileName.select();\r\n        setTimeout(() => this._fileName.focus());\r\n\r\n        this._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n        this._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n        this._exportButton.addEventListener(\"click\", this._export);\r\n        this._cancelButton.addEventListener(\"click\", this._close);\r\n        this._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n        this._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n        this._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n        this._fileName.value = _doc.song.title;\r\n        ExportPrompt._validateFileName(null, this._fileName);\r\n\r\n        (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n    }\r\n\r\n    // Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n    private samplesToTime(samples: number): string {\r\n        const rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n        const seconds: number = rawSeconds % 60;\r\n        const minutes: number = Math.floor(rawSeconds / 60);\r\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n    }\r\n\r\n    private _close = (): void => {\r\n        if (this.synth != null)\r\n            this.synth.renderingSong = false;\r\n        this.outputStarted = false;\r\n        this._doc.undo();\r\n    }\r\n\r\n    public changeFileName(newValue: string) {\r\n        this._fileName.value = newValue;\r\n    }\r\n\r\n    public cleanUp = (): void => {\r\n        this._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n        this._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n        this._exportButton.removeEventListener(\"click\", this._export);\r\n        this._cancelButton.removeEventListener(\"click\", this._close);\r\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n            this._export();\r\n        }\r\n    }\r\n\r\n    private static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n        let input: HTMLInputElement;\r\n        if (event != null) {\r\n            input = <HTMLInputElement>event.target;\r\n        } else if (use != undefined) {\r\n            input = use;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n        if (deleteChars.test(input.value)) {\r\n            let cursorPos: number = <number>input.selectionStart;\r\n            input.value = input.value.replace(deleteChars, \"\");\r\n            cursorPos--;\r\n            input.setSelectionRange(cursorPos, cursorPos);\r\n        }\r\n    }\r\n\r\n    private static _validateNumber(event: Event): void {\r\n        const input: HTMLInputElement = <HTMLInputElement>event.target;\r\n        input.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n    }\r\n\r\n    private _export = (): void => {\r\n        if (this.outputStarted == true)\r\n            return;\r\n        window.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n        switch (this._formatSelect.value) {\r\n            case \"wav\":\r\n                this.outputStarted = true;\r\n                this._exportTo(\"wav\");\r\n                break;\r\n            case \"mp3\":\r\n                this.outputStarted = true;\r\n                this._exportTo(\"mp3\");\r\n                break;\r\n            case \"midi\":\r\n                this.outputStarted = true;\r\n                this._exportToMidi();\r\n                break;\r\n            case \"json\":\r\n                this.outputStarted = true;\r\n                this._exportToJson();\r\n                break;\r\n            case \"html\":\r\n                this._exportToHtml();\r\n                break;\r\n            default:\r\n                throw new Error(\"Unhandled file export type.\");\r\n        }\r\n    }\r\n\r\n    private _synthesize(): void {\r\n        //const timer: number = performance.now();\r\n\r\n        // If output was stopped e.g. user clicked the close button, abort.\r\n        if (this.outputStarted == false) {\r\n            return;\r\n        }\r\n\r\n        // Update progress bar UI once per 5 sec of exported data\r\n        const samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n        const currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n        const samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n        const tempSamplesL = new Float32Array(samplesInChunk);\r\n        const tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n        this.synth.renderingSong = true;\r\n        this.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n        // Concatenate chunk data into final array\r\n        this.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n        this.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n        // Update UI\r\n        this._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n        this._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n        // Next call, synthesize the next chunk.\r\n        this.currentChunk++;\r\n\r\n        if (this.currentChunk >= this.totalChunks) {\r\n            // Done, call final function\r\n            this.synth.renderingSong = false;\r\n            this._outputProgressLabel.innerText = \"Encoding...\";\r\n            if (this.thenExportTo == \"wav\") {\r\n                this._exportToWavFinish();\r\n            }\r\n            else if (this.thenExportTo == \"mp3\") {\r\n                this._exportToMp3Finish();\r\n            }\r\n            else {\r\n                throw new Error(\"Unrecognized file export type chosen!\");\r\n            }\r\n        }\r\n        else {\r\n            // Continue batch export\r\n            setTimeout(() => { this._synthesize(); });\r\n        }\r\n\r\n        //console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n    }\r\n\r\n    private _exportTo(type: string): void {\r\n        // Batch the export operation\r\n        this.thenExportTo = type;\r\n        this.currentChunk = 0;\r\n        this.synth = new Synth(this._doc.song);\r\n        if (type == \"wav\") {\r\n            this.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n        }\r\n        else if (type == \"mp3\") {\r\n            this.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized file export type chosen!\");\r\n        }\r\n\r\n        this._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n        this._outputProgressLabel.innerText = \"0%\";\r\n\r\n        this.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n        if (!this._enableIntro.checked) {\r\n            for (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n                this.synth.goToNextBar();\r\n            }\r\n        }\r\n\r\n        this.synth.initModFilters(this._doc.song);\r\n        this.synth.computeLatestModValues();\r\n        this.synth.warmUpSynthesizer(this._doc.song);\r\n\r\n        this.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n        // Compute how many UI updates will need to run to determine how many \r\n        this.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n        this.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n        this.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n        // Batch the actual export\r\n        setTimeout(() => { this._synthesize(); });\r\n    }\r\n\r\n    private _exportToWavFinish(): void {\r\n        const sampleFrames: number = this.recordedSamplesL.length;\r\n        const sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n        const wavChannelCount: number = 2;\r\n        const bytesPerSample: number = 2;\r\n        const bitsPerSample: number = 8 * bytesPerSample;\r\n        const sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n        const totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n        let index: number = 0;\r\n        const arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n        const data: DataView = new DataView(arrayBuffer);\r\n        data.setUint32(index, 0x52494646, false); index += 4;\r\n        data.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n        data.setUint32(index, 0x57415645, false); index += 4;\r\n        data.setUint32(index, 0x666D7420, false); index += 4;\r\n        data.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n        data.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n        data.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n        data.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n        data.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n        data.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n        data.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n        data.setUint32(index, 0x64617461, false); index += 4;\r\n        data.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n        if (bytesPerSample > 1) {\r\n            // usually samples are signed. \r\n            const range: number = (1 << (bitsPerSample - 1)) - 1;\r\n            for (let i: number = 0; i < sampleFrames; i++) {\r\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n                if (bytesPerSample == 2) {\r\n                    data.setInt16(index, valL, true); index += 2;\r\n                    data.setInt16(index, valR, true); index += 2;\r\n                } else if (bytesPerSample == 4) {\r\n                    data.setInt32(index, valL, true); index += 4;\r\n                    data.setInt32(index, valR, true); index += 4;\r\n                } else {\r\n                    throw new Error(\"unsupported sample size\");\r\n                }\r\n            }\r\n        } else {\r\n            // 8 bit samples are a special case: they are unsigned.\r\n            for (let i: number = 0; i < sampleFrames; i++) {\r\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n                data.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n                data.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n            }\r\n        }\r\n\r\n        const blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n        save(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n        this._close();\r\n    }\r\n\r\n    private _exportToMp3Finish(): void {\r\n        const whenEncoderIsAvailable = (): void => {\r\n\r\n            const lamejs: any = (<any>window)[\"lamejs\"];\r\n            const channelCount: number = 2;\r\n            const kbps: number = 192;\r\n            const sampleBlockSize: number = 1152;\r\n            const mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n            const mp3Data: any[] = [];\r\n\r\n            const left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n            const right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n            const range: number = (1 << 15) - 1;\r\n            for (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n                left[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n                right[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n            }\r\n\r\n            for (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n                const leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n                const rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n                const mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n                if (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n            }\r\n\r\n            const mp3buf: any = mp3encoder.flush();\r\n            if (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n            const blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n            save(blob, this._fileName.value.trim() + \".mp3\");\r\n            this._close();\r\n        }\r\n\r\n        if (\"lamejs\" in window) {\r\n            whenEncoderIsAvailable();\r\n        } else {\r\n            var script = document.createElement(\"script\");\r\n            script.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n            script.onload = whenEncoderIsAvailable;\r\n            document.head.appendChild(script);\r\n        }\r\n    }\r\n\r\n    private _exportToMidi(): void {\r\n        const song: Song = this._doc.song;\r\n        const midiTicksPerBeepBoxTick: number = 2;\r\n        const midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n        const midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n        const secondsPerMinute: number = 60;\r\n        const microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n        const beatsPerMinute: number = song.getBeatsPerMinute();\r\n        const microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n        //const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n        const midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n        const pitchBendRange: number = 24;\r\n        const defaultNoteVelocity: number = 90;\r\n\r\n        const unrolledBars: number[] = [];\r\n        if (this._enableIntro.checked) {\r\n            for (let bar: number = 0; bar < song.loopStart; bar++) {\r\n                unrolledBars.push(bar);\r\n            }\r\n        }\r\n        for (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n            for (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n                unrolledBars.push(bar);\r\n            }\r\n        }\r\n        if (this._enableOutro.checked) {\r\n            for (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n                unrolledBars.push(bar);\r\n            }\r\n        }\r\n\r\n        const tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n        let midiChannelCounter: number = 0;\r\n        let foundADrumset: boolean = false;\r\n        for (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n            if (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n                tracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n                foundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n            } else {\r\n                if (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n                tracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n                if (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n            }\r\n        }\r\n\r\n        const writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n        writer.writeUint32(MidiChunkType.header);\r\n        writer.writeUint32(6); // length of headers is 6 bytes\r\n        writer.writeUint16(MidiFileFormat.simultaneousTracks);\r\n        writer.writeUint16(tracks.length);\r\n        writer.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n        for (const track of tracks) {\r\n            writer.writeUint32(MidiChunkType.track);\r\n\r\n            const { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n            // We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n            const trackStartIndex: number = writer.getWriteIndex();\r\n            writer.writeUint32(0); // placeholder for track size\r\n\r\n            let prevTime: number = 0;\r\n            let barStartTime: number = 0;\r\n            const writeEventTime = function (time: number): void {\r\n                if (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n                writer.writeMidiVariableLength(time - prevTime);\r\n                prevTime = time;\r\n            }\r\n\r\n            const writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n                if (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n                writer.writeUint8(MidiEventType.controlChange | midiChannel);\r\n                writer.writeMidi7Bits(message);\r\n                writer.writeMidi7Bits(value | 0);\r\n            }\r\n\r\n            if (isMeta) {\r\n                // for first midi track, include tempo, time signature, and key signature information.\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.text);\r\n                writer.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n                writer.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n                writer.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n                writer.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n                writer.writeUint8(song.beatsPerBar); // numerator.\r\n                writer.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n                writer.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n                writer.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n                const isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n                const key: number = song.key; // C=0, C#=1, counting up to B=11\r\n                let numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n                if ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n                if (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n                while (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n                writer.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n                writer.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n                writer.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n                if (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n                writeEventTime(barStartTime);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n                writer.writeMidiAscii(\"Loop Start\");\r\n\r\n                for (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n                    barStartTime += midiTicksPerBar * song.loopLength;\r\n                    writeEventTime(barStartTime);\r\n                    writer.writeUint8(MidiEventType.meta);\r\n                    writer.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n                    writer.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n                }\r\n\r\n                if (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n                if (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n            } else {\r\n                // For remaining tracks, set up the instruments and write the notes:\r\n\r\n                let channelName: string = isNoise\r\n                    ? \"noise channel \" + channel\r\n                    : \"pitch channel \" + channel;\r\n                writeEventTime(0);\r\n                writer.writeUint8(MidiEventType.meta);\r\n                writer.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n                writer.writeMidiAscii(channelName);\r\n\r\n                // This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n                let prevInstrumentIndex: number = -1;\r\n                function writeInstrumentSettings(instrumentIndex: number): void {\r\n                    const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n                    const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n                    if (prevInstrumentIndex != instrumentIndex) {\r\n                        prevInstrumentIndex = instrumentIndex;\r\n                        writeEventTime(barStartTime);\r\n                        writer.writeUint8(MidiEventType.meta);\r\n                        writer.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n                        writer.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n                        if (!isDrumset) {\r\n                            let instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n                            if (preset != null && preset.midiProgram != undefined) {\r\n                                instrumentProgram = preset.midiProgram;\r\n                            } else if (instrument.type == InstrumentType.drumset) {\r\n                                // The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n                                instrumentProgram = 116; // taiko\r\n                            } else {\r\n                                if (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n                                    if (isNoise) {\r\n                                        instrumentProgram = 116; // taiko\r\n                                    } else {\r\n                                        instrumentProgram = 75; // pan flute\r\n                                    }\r\n                                } else if (instrument.type == InstrumentType.chip) {\r\n                                    if (ExportPrompt.midiChipInstruments.length > instrument.chipWave) {\r\n                                        instrumentProgram = ExportPrompt.midiChipInstruments[instrument.chipWave];\r\n                                    }\r\n                                } else if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.supersaw) {\r\n                                    instrumentProgram = 81; // sawtooth\r\n                                } else if (instrument.type == InstrumentType.pickedString) {\r\n                                    instrumentProgram = 0x19; // steel guitar\r\n                                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                                    instrumentProgram = 81; // sawtooth\r\n                                } else {\r\n                                    throw new Error(\"Unrecognized instrument type.\");\r\n                                }\r\n                            }\r\n\r\n                            // Program (instrument) change event:\r\n                            writeEventTime(barStartTime);\r\n                            writer.writeUint8(MidiEventType.programChange | midiChannel);\r\n                            writer.writeMidi7Bits(instrumentProgram);\r\n                        }\r\n\r\n                        // Instrument volume:\r\n                        writeEventTime(barStartTime);\r\n                        let instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n                        writeControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n                        // Instrument pan:\r\n                        writeEventTime(barStartTime);\r\n                        let instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n                        writeControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n                    }\r\n                }\r\n                if (song.getPattern(channel, 0) == null) {\r\n                    // Go ahead and apply the instrument settings at the beginning of the channel\r\n                    // even if a bar doesn't kick in until later.\r\n                    writeInstrumentSettings(0);\r\n                }\r\n\r\n                let prevPitchBend: number = defaultMidiPitchBend;\r\n                let prevExpression: number = defaultMidiExpression;\r\n                let shouldResetExpressionAndPitchBend: boolean = false;\r\n                //let prevTremolo: number = -1;\r\n                const channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n                const intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n                for (const bar of unrolledBars) {\r\n                    const pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n\r\n                        const instrumentIndex: number = pattern.instruments[0]; // Don't bother trying to export multiple instruments per pattern to midi, just pick the first one.\r\n                        const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n                        const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n                        writeInstrumentSettings(instrumentIndex);\r\n\r\n                        let usesArpeggio: boolean = instrument.getChord().arpeggiates;\r\n                        let polyphony: number = usesArpeggio ? 1 : Config.maxChordSize;\r\n                        if (instrument.getChord().customInterval) {\r\n                            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics) {\r\n                                polyphony = 2;\r\n                                usesArpeggio = true;\r\n                            } else if (instrument.type == InstrumentType.fm) {\r\n                                polyphony = Config.operatorCount;\r\n                            } else {\r\n                                console.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n                            }\r\n                        }\r\n\r\n                        for (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n                            const note: Note = pattern.notes[noteIndex];\r\n\r\n                            const noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n                            let pinTime: number = noteStartTime;\r\n                            let pinSize: number = note.pins[0].size;\r\n                            let pinInterval: number = note.pins[0].interval;\r\n                            const prevPitches: number[] = [-1, -1, -1, -1];\r\n                            const nextPitches: number[] = [-1, -1, -1, -1];\r\n                            const toneCount: number = Math.min(polyphony, note.pitches.length);\r\n                            const velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].size / Config.noteSizeMax)) : defaultNoteVelocity;\r\n\r\n                            // The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n                            // To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n                            // This may involve offsetting this base pitch from BeepBox's note pitch.\r\n                            let mainInterval: number = note.pickMainInterval();\r\n                            let pitchOffset: number = mainInterval * intervalScale;\r\n                            if (!isDrumset) {\r\n                                let maxPitchOffset: number = pitchBendRange;\r\n                                let minPitchOffset: number = -pitchBendRange;\r\n                                for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n                                    const interval = note.pins[pinIndex].interval * intervalScale;\r\n                                    maxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n                                    minPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n                                }\r\n                                /*\r\n                                // I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n                                if (usesArpeggio && note.pitches.length > polyphony) {\r\n                                    let lowestArpeggioOffset: number = 0;\r\n                                    let highestArpeggioOffset: number = 0;\r\n                                    const basePitch: number = note.pitches[toneCount - 1];\r\n                                    for (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n                                        lowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n                                        highestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n                                    }\r\n                                    maxPitchOffset -= lowestArpeggioOffset;\r\n                                    minPitchOffset += lowestArpeggioOffset;\r\n                                }\r\n                                */\r\n                                pitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n                            }\r\n\r\n                            for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n                                const nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n                                const nextPinSize: number = note.pins[pinIndex].size;\r\n                                const nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n                                const length: number = nextPinTime - pinTime;\r\n                                for (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n                                    const midiTickTime: number = pinTime + midiTick;\r\n                                    const linearSize: number = lerp(pinSize, nextPinSize, midiTick / length);\r\n                                    const linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n                                    const interval: number = linearInterval * intervalScale - pitchOffset;\r\n\r\n                                    const pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n                                    const expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.noteSizeToVolumeMult(linearSize))));\r\n\r\n                                    if (pitchBend != prevPitchBend) {\r\n                                        writeEventTime(midiTickTime);\r\n                                        writer.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n                                        writer.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n                                        writer.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n                                        prevPitchBend = pitchBend;\r\n                                    }\r\n\r\n                                    if (expression != prevExpression && !isDrumset) {\r\n                                        writeEventTime(midiTickTime);\r\n                                        writeControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n                                        prevExpression = expression;\r\n                                    }\r\n\r\n                                    const noteStarting: boolean = midiTickTime == noteStartTime;\r\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n                                        let nextPitch: number = note.pitches[toneIndex];\r\n                                        if (isDrumset) {\r\n                                            nextPitch += mainInterval;\r\n                                            const drumsetMap: number[] = [\r\n                                                36, // Bass Drum 1\r\n                                                41, // Low Floor Tom\r\n                                                45, // Low Tom\r\n                                                48, // Hi-Mid Tom\r\n                                                40, // Electric Snare\r\n                                                39, // Hand Clap\r\n                                                59, // Ride Cymbal 2\r\n                                                49, // Crash Cymbal 1\r\n                                                46, // Open Hi-Hat\r\n                                                55, // Splash Cymbal\r\n                                                69, // Cabasa\r\n                                                54, // Tambourine\r\n                                            ];\r\n                                            if (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n                                            nextPitch = drumsetMap[nextPitch];\r\n                                        } else {\r\n                                            if (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n                                                const midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n                                                const midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n                                                const arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n                                                nextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n                                            }\r\n                                            nextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n                                            if (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n                                                nextPitch += 12 * preset.midiSubharmonicOctaves;\r\n                                            } else if (isNoise) {\r\n                                                nextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n                                            }\r\n\r\n                                            if (isNoise) nextPitch *= 2;\r\n                                        }\r\n                                        nextPitch = Math.max(0, Math.min(127, nextPitch));\r\n                                        nextPitches[toneIndex] = nextPitch;\r\n\r\n                                        if (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n                                            writeEventTime(midiTickTime);\r\n                                            writer.writeUint8(MidiEventType.noteOff | midiChannel);\r\n                                            writer.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n                                            writer.writeMidi7Bits(velocity); // velocity\r\n                                        }\r\n                                    }\r\n\r\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n                                        if (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n                                            writeEventTime(midiTickTime);\r\n                                            writer.writeUint8(MidiEventType.noteOn | midiChannel);\r\n                                            writer.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n                                            writer.writeMidi7Bits(velocity); // velocity\r\n                                            prevPitches[toneIndex] = nextPitches[toneIndex];\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                pinTime = nextPinTime;\r\n                                pinSize = nextPinSize;\r\n                                pinInterval = nextPinInterval;\r\n                            }\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t// TODO: If the note at the start of the next pattern has\r\n\t\t\t\t\t\t\t\t// continuesLastPattern and has the same chord, it ought to extend\r\n\t\t\t\t\t\t\t\t// this previous note.\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\t\t\t\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\t\t\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], {type: \"audio/midi\"});\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\t\t\r\n\t\tthis._close();\r\n\t}\r\n\t\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], {type: \"application/json\"});\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n    }\r\n\r\n    private _exportToHtml(): void {\r\n        const fileContents = `\\\r\n<!DOCTYPE html><meta charset=\"utf-8\">\r\n\r\nYou should be redirected to the song at:<br /><br />\r\n\r\n<a id=\"destination\" href=\"${new URL(\"#\" + this._doc.song.toBase64String(), location.href).href}\"></a>\r\n\r\n<style>\r\n\t:root {\r\n\t\tcolor: white;\r\n\t\tbackground: black;\r\n\t\tfont-family:\r\n\t\tsans-serif;\r\n\t}\r\n\ta {\r\n\t\tcolor: #98f;\r\n\t}\r\n\ta[href]::before {\r\n\t\tcontent: attr(href);\r\n\t}\r\n</style>\r\n\r\n<script>\r\n\tlocation.assign(document.querySelector(\"a#destination\").href);\r\n</script>\r\n`;\r\n        const blob: Blob = new Blob([fileContents], { type: \"text/html\" });\r\n        save(blob, this._fileName.value.trim() + \".html\");\r\n        this._close();\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\nexport class Layout {\r\n\tprivate static readonly _layoutMap: {[K: string]: string} = {\r\n\t\t\"small\": \"\",\r\n\t\t\"long\": `\\\r\n\r\n\t\t\t/* long layout */\r\n\t\t\t@media (min-width: 711px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 390px; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content);\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 0;\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t\toverflow: auto;\r\n\t\t\t\t\tmax-height: 97.5vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 390px;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.selectRow {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow: visible;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\"tall\": `\\\r\n\t\t\t/* tall layout */\r\n\t\t\t@media (min-width: 711px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) 192px;\r\n\t\t\t\t\tgrid-template-rows: 1fr;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 0;\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t\toverflow: auto;\r\n\t\t\t\t\tflex-basis: initial;\r\n\t\t\t\t\tflex-grow: 0;\r\n\t\t\t\t\tmax-height: 97.5vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 192px;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"version-area\"\r\n\t\t\t\t\t\t\"play-pause-area\"\r\n\t\t\t\t\t\t\"menu-area\"\r\n\t\t\t\t\t\t\"song-settings-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .version-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 0;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .play-pause-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 22px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .menu-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 82px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow: visible;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t\t\"wide\": `\\\r\n\t\t\t/* wide (JB) layout */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em;\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\tmax-height: 100%\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t\tflex-basis: initial;\r\n\t\t\t\t\tflex-grow: 0;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tmax-height: 97.5vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .version-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 0;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .play-pause-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 22px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .menu-area {\r\n\t\t\t\t\tposition: sticky;\r\n\t\t\t\t\ttop: 82px;\r\n\t\t\t\t\tz-index: 1;\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow: visible;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`,\r\n\t}\r\n\t\t\r\n\t\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\r\n\t\t\r\n\tpublic static setLayout(layout: string): void {\r\n\t\tthis._styleElement.textContent = this._layoutMap[layout];\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 120;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _thirds: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\t\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._thirds,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\t\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"harmonics\", style: \"height: 100%;\"}, this._svg);\r\n\t\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\tprivate _renderedThirds: boolean = true;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 5; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.thirdNote, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\t\tconst rect: SVGRectElement = SVG.rect({fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight});\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\t\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\t\t\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\t\t\t\t\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\t\t\t\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\t\t\t\t\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\t\t\t\t\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\t\t\t\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\t\t\t\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedThirds != this._doc.prefs.showThird) {\r\n\t\t\tthis._renderedThirds = this._doc.prefs.showThird;\r\n\t\t\tthis._thirds.style.display = this._doc.prefs.showThird ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic getValueBeforeProspectiveChange(): number {\r\n\t\treturn this._oldValue;\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\t\t\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\t\t\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\t\t\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\t\t\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\t\t\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\t\t\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\t\t\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\t\t\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\t\t\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n\tconst {button, p, div, h2, input} = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\t\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\r\n\t\th2(\"Import\"),\r\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\t\tsetTimeout(()=>this._fileInput.focus());\r\n\t\t\t\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\t\t\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\t\t\t\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2).toLowerCase();\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\t\t\t\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\t\twhile(reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\t\t\t\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface NoteSizeEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tsize: number;\r\n\t\t}\r\n\t\t\t\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\t\tconst channelRPNMSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\r\n\t\t\tconst channelRPNLSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\r\n\t\t\tconst pitchBendRangeMSB: number[] = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; // pitch bend range defaults to 2 semitones.\r\n\t\t\tconst pitchBendRangeLSB: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]; // and 0 cents.\r\n\t\t\tconst currentInstrumentProgram: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n\t\t\tconst currentInstrumentVolumes: number[] = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];\r\n\t\t\tconst currentInstrumentPans: number[] = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64];\r\n\t\t\tconst noteEvents: NoteEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\r\n\t\t\tconst pitchBendEvents: PitchBendEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\r\n\t\tconst noteSizeEvents: NoteSizeEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\t\t\t\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\t\t\t\t\t\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\tnoteSizeEvents[eventChannel].push({midiTick: currentMidiTick, size: Synth.volumeMultToNoteSize(midiExpressionToVolumeMult(value))});\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({midiTick: currentMidiTick, interval: interval});\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\t\t\t\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\t\t\t\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\t\t\t\t\r\n\t\t\tconst channel: Channel = new Channel();\r\n\t\t\t\t\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\t\t\t\t\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\t\t\t\t\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\t\t\t\t\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\t\t\t\t\t\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false, 1);\r\n\t\t\t\t\t\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instruments[0] = 0;\r\n\t\t\t\t\t\t\tpattern.instruments.length = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet noteSize: number = 1; // the minimum non-zero note size.\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnoteSize = Math.max(noteSize, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, noteSize, true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\t\t\t\t\t\r\n\t\t\t\t// Advance the pitch bend and note size timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiNoteSize.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiNoteSize: number = Config.noteSizeMax;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet noteSizeEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiNoteSize(midiTick: number) {\r\n\t\t\t\t\twhile (noteSizeEventIndex < noteSizeEvents[midiChannel].length && noteSizeEvents[midiChannel][noteSizeEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiNoteSize = noteSizeEvents[midiChannel][noteSizeEventIndex].size;\r\n\t\t\t\t\t\tnoteSizeEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\t\t\t\t\t\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tlet createdNote: boolean = false;\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tpattern.instruments[0] = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t\tpattern.instruments.length = 1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and note size events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and size.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\t\t\t\t\tnote.continuesLastPattern = (createdNote && noteStartPart == 0);\r\n\t\t\t\t\t\t\t\tcreatedNote = true;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiNoteSize));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tsize: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeySize: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{part: 0, pitch: initialBeepBoxPitch, size: firstPin.size, keyPitch: false, keySize: false}\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartSize: number = currentVelocity * currentMidiNoteSize;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and sizes. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or size are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partSize: number = currentVelocity * currentMidiNoteSize;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tconst nearestSize: number = Math.round(partSize);\r\n\t\t\t\t\t\t\t\t\tconst sizeIsNearInteger: boolean = Math.abs(partSize - nearestSize) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst sizeCrossedInteger: boolean = (Math.abs(prevPartSize - Math.round(prevPartSize)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partSize - prevPartSize) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partSize) != Math.floor(prevPartSize);\r\n\t\t\t\t\t\t\t\t\tconst keySize: boolean = sizeIsNearInteger || sizeCrossedInteger;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartSize = partSize;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keySize || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = {part: noteRelativePart, pitch: nearestPitch, size: nearestSize, keyPitch: keyPitch || lastPart, keySize: keySize || lastPart};\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keySize) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.size - prevPin.size) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestSizeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keySize) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedSize: number = prevPin.size + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedSize - potentialPin.size);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestSizeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestSizeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addSizePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addSizePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.size));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.size));\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(Config.pitchOctaves - 1, Math.floor((averagePitch / 12))));\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instruments[0] += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\t\t\t\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.rhythm = 1;\r\n\t\t\t\tsong.layeredInstruments = false;\r\n\t\t\t\tsong.patternInstruments = pitchChannels.some(channel => channel.instruments.length > 1) || noiseChannels.some(channel => channel.instruments.length > 1);\r\n\t\t\t\t\t\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\t\t\t\t\t\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n\r\n","// Copyright (C) 2021 John Nesky, distributed under the MIT license.\r\n\r\nimport {Pattern} from \"../synth/synth\";\r\nimport {ColorConfig, ChannelColors} from \"./ColorConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport class Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"\");\r\n\tprivate readonly _label: HTMLElement = HTML.div({class: \"channelBoxLabel\"}, this._text);\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"channelBox\", style: `margin: 1px; height: ${ChannelRow.patternHeight - 2}px;`}, this._label);\r\n\tprivate _renderedIndex: number = -1;\r\n    private _renderedLabelColor: string = \"?\";\r\n    private _renderedBackgroundColor: string = \"?\";\r\n\tconstructor(channel: number, color: string) {\r\n\t\tthis.container.style.background = ColorConfig.uiWidgetBackground;\r\n\t\tthis._label.style.color = color;\r\n\t}\r\n\t\r\n\tpublic setWidth(width: number): void {\r\n\t\tthis.container.style.width = (width - 2) + \"px\"; // there's a 1 pixel margin on either side.\r\n\t}\r\n\r\n\tpublic setHeight(height: number): void {\r\n\t\tthis.container.style.height = (height - 2) + \"px\"; // there's a 1 pixel margin on either side.\r\n\t}\r\n\t\r\n\tpublic setIndex(index: number, selected: boolean, dim: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\t\t\t\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.style.setProperty(\"transform\", \"translate(0px, -1.5px)\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.style.setProperty(\"transform\", \"translate(0px, 0px)\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = String(index);\r\n\t\t}\r\n\t\tlet useColor: string = selected ? ColorConfig.c_invertedText : color;\r\n\t\tif (this._renderedLabelColor != useColor) {\r\n\t\t\tthis._label.style.color = useColor;\r\n\t\t\tthis._renderedLabelColor = useColor;\r\n\t\t}\r\n\t\tif (!selected) {\r\n\t\t\tif (isNoise)\r\n\t\t\t\tcolor = dim ? ColorConfig.c_trackEditorBgNoiseDim : ColorConfig.c_trackEditorBgNoise;\r\n\t\t\telse if (isMod)\r\n\t\t\t\tcolor = dim ? ColorConfig.c_trackEditorBgModDim : ColorConfig.c_trackEditorBgMod;\r\n\t\t\telse\r\n\t\t\t\tcolor = dim ? ColorConfig.c_trackEditorBgPitchDim : ColorConfig.c_trackEditorBgPitch;\r\n\t\t}\r\n\t\tcolor = selected ? color : (index == 0) ? \"none\" : color;\r\n\t\tif (this._renderedBackgroundColor != color) {\r\n\t\t\tthis.container.style.background = color;\r\n\t\t\tthis._renderedBackgroundColor = color;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChannelRow {\r\n\tpublic static patternHeight: number = 28;\r\n\t\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _boxes: Box[] = [];\r\n\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"channelRow\"});\r\n\t\r\n\tconstructor(private readonly _doc: SongDocument, public readonly index: number) {}\r\n\t\r\n\tpublic render(): void {\r\n\t\tChannelRow.patternHeight = this._doc.getChannelHeight();\r\n\r\n\t\tconst barWidth: number = this._doc.getBarWidth();\r\n\t\tif (this._boxes.length != this._doc.song.barCount) {\r\n\t\t\tfor (let x: number = this._boxes.length; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tconst box: Box = new Box(this.index, ColorConfig.getChannelColor(this._doc.song, this.index).secondaryChannel);\r\n\t\t\t\tbox.setWidth(barWidth);\r\n\t\t\t\tthis.container.appendChild(box.container);\r\n\t\t\t\tthis._boxes[x] = box;\r\n\t\t\t}\r\n\t\t\tfor (let x: number = this._doc.song.barCount; x < this._boxes.length; x++) {\r\n\t\t\t\tthis.container.removeChild(this._boxes[x].container);\r\n\t\t\t}\r\n\t\t\tthis._boxes.length = this._doc.song.barCount;\r\n\t\t}\r\n\t\t\r\n\t\tif (this._renderedBarWidth != barWidth) {\r\n\t\t\tthis._renderedBarWidth = barWidth;\r\n\t\t\tfor (let x: number = 0; x < this._boxes.length; x++) {\r\n\t\t\t\tthis._boxes[x].setWidth(barWidth);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarHeight != ChannelRow.patternHeight) {\r\n\t\t\tthis._renderedBarHeight = ChannelRow.patternHeight;\r\n\t\t\tfor (let x: number = 0; x < this._boxes.length; x++) {\r\n\t\t\t\tthis._boxes[x].setHeight(ChannelRow.patternHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i: number = 0; i < this._boxes.length; i++) {\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(this.index, i);\r\n\t\t\tconst selected: boolean = (i == this._doc.bar && this.index == this._doc.channel);\r\n\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\t\t\t\r\n\t\t\tconst box: Box = this._boxes[i];\r\n\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this.index);\r\n\t\t\t\tbox.setIndex(this._doc.song.channels[this.index].bars[i], selected, dim, dim && !selected ? colors.secondaryChannel : colors.primaryChannel,\r\n\t\t\t\t\tthis.index >= this._doc.song.pitchChannelCount && this.index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, this.index >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t} else {\r\n\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {Layout} from \"./Layout\";\r\nimport {Prompt} from \"./Prompt\";\r\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst {button, label, div, form, h2, input} = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tprivate readonly _form: HTMLFormElement = form({style: \"display: flex; gap: 10px;\"},\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"small\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-4 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"11\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"14\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"11\" height=\"5\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Small\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"long\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"12\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"15\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"22\" height=\"5\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Long\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"tall\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"11\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Tall\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"wide\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"18\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"21.5\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"10\" height=\"16\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Wide (JB)\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\r\n\t\th2(\"Layout\"),\r\n\t\tthis._form,\r\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(()=>this._fileInput.focus());\r\n\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\t\r\n\t\t(<any> this._form.elements)[\"layout\"].value = this._doc.prefs.layout;\r\n\t}\r\n\t\r\n\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\r\n\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._confirm();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _confirm = (): void => { \r\n\t\tthis._doc.prefs.layout = (<any> this._form.elements)[\"layout\"].value;\r\n\t\tthis._doc.prefs.save();\r\n\t\tLayout.setLayout(this._doc.prefs.layout);\r\n\t\tthis._close();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {InstrumentType, Config} from \"../synth/SynthConfig\";\r\nimport {Instrument} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {ChangeSetEnvelopeTarget, ChangeSetEnvelopeType, ChangeRemoveEnvelope} from \"./changes\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport class EnvelopeEditor {\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"envelopeEditor\"});\r\n\t\r\n\tprivate readonly _rows: HTMLDivElement[] = [];\r\n\tprivate readonly _targetSelects: HTMLSelectElement[] = [];\r\n\tprivate readonly _envelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate readonly _deleteButtons: HTMLButtonElement[] = [];\r\n\tprivate _renderedEnvelopeCount: number = 0;\r\n\tprivate _renderedEqFilterCount: number = -1;\r\n\tprivate _renderedNoteFilterCount: number = -1;\r\n\tprivate _renderedInstrumentType: InstrumentType;\r\n\tprivate _renderedEffects: number = 0;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis.container.addEventListener(\"change\", this._onChange);\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t}\r\n\t\r\n\tprivate _onChange = (event: Event): void => {\r\n\t\tconst targetSelectIndex: number = this._targetSelects.indexOf(<any> event.target);\r\n\t\tconst envelopeSelectIndex: number = this._envelopeSelects.indexOf(<any> event.target);\r\n\t\tif (targetSelectIndex != -1) {\r\n\t\t\tconst combinedValue: number = parseInt(this._targetSelects[targetSelectIndex].value);\r\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\r\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\r\n\t\t\tthis._doc.record(new ChangeSetEnvelopeTarget(this._doc, targetSelectIndex, target, index));\r\n\t\t} else if (envelopeSelectIndex != -1) {\r\n\t\t\tthis._doc.record(new ChangeSetEnvelopeType(this._doc, envelopeSelectIndex, this._envelopeSelects[envelopeSelectIndex].selectedIndex));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\t\tconst index: number = this._deleteButtons.indexOf(<any> event.target);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._doc.record(new ChangeRemoveEnvelope(this._doc, index));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _makeOption(target: number, index: number): HTMLOptionElement {\r\n\t\tlet displayName = Config.instrumentAutomationTargets[target].displayName;\r\n\t\tif (Config.instrumentAutomationTargets[target].maxCount > 1) {\r\n\t\t\tif (displayName.indexOf(\"#\") != -1) {\r\n\t\t\t\tdisplayName = displayName.replace(\"#\", String(index+1));\r\n\t\t\t} else {\r\n\t\t\t\tdisplayName += \" \" + (index+1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn HTML.option({value: target + index * Config.instrumentAutomationTargets.length}, displayName);\r\n\t}\r\n\t\r\n\tprivate _updateTargetOptionVisibility(menu: HTMLSelectElement, instrument: Instrument): void {\r\n\t\tfor (let optionIndex: number = 0; optionIndex < menu.childElementCount; optionIndex++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> menu.children[optionIndex];\r\n\t\t\tconst combinedValue: number = parseInt(option.value);\r\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\r\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\r\n\t\t\toption.hidden = !instrument.supportsEnvelopeTarget(target, index);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = this._rows.length; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n\t\t\tconst targetSelect: HTMLSelectElement = HTML.select();\r\n\t\t\tfor (let target: number = 0; target < Config.instrumentAutomationTargets.length; target++) {\r\n\t\t\t\tconst interleaved: boolean = (Config.instrumentAutomationTargets[target].interleave);\r\n\t\t\t\tfor (let index: number = 0; index < Config.instrumentAutomationTargets[target].maxCount; index++) {\r\n\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target, index));\r\n\t\t\t\t\tif (interleaved) {\r\n\t\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target + 1, index));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (interleaved) target++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = HTML.select();\r\n\t\t\tfor (let envelope: number = 0; envelope < Config.envelopes.length; envelope++) {\r\n\t\t\t\tenvelopeSelect.appendChild(HTML.option({value: envelope}, Config.envelopes[envelope].name));\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tconst deleteButton: HTMLButtonElement = HTML.button({type: \"button\", class: \"delete-envelope\"});\r\n\t\t\t\r\n\t\t\tconst row: HTMLDivElement = HTML.div({class: \"envelope-row\"},\r\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 1;\"}, targetSelect),\r\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 0.7;\"}, envelopeSelect),\r\n\t\t\t\tdeleteButton,\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tthis.container.appendChild(row);\r\n\t\t\tthis._rows[envelopeIndex] = row;\r\n\t\t\tthis._targetSelects[envelopeIndex] = targetSelect;\r\n\t\t\tthis._envelopeSelects[envelopeIndex] = envelopeSelect;\r\n\t\t\tthis._deleteButtons[envelopeIndex] = deleteButton;\r\n\t\t}\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = this._renderedEnvelopeCount; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n\t\t\tthis._rows[envelopeIndex].style.display = \"\";\r\n\t\t\t// For newly visible rows, update target option visibiliy.\r\n\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = instrument.envelopeCount; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\r\n\t\t\tthis._rows[envelopeIndex].style.display = \"none\";\r\n\t\t}\r\n\r\n\t\tlet useControlPointCount: number = instrument.noteFilter.controlPointCount;\r\n\t\tif (instrument.noteFilterType)\r\n\t\t\tuseControlPointCount = 1;\r\n\t\t\r\n\t\tif (this._renderedEqFilterCount != instrument.eqFilter.controlPointCount ||\r\n\t\t\tthis._renderedNoteFilterCount != useControlPointCount ||\r\n\t\t\tthis._renderedInstrumentType != instrument.type ||\r\n\t\t\tthis._renderedEffects != instrument.effects)\r\n\t\t{\r\n\t\t\t// Update target option visibility for previously visible rows.\r\n\t\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\r\n\t\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n\t\t\tthis._targetSelects[envelopeIndex].value = String(instrument.envelopes[envelopeIndex].target + instrument.envelopes[envelopeIndex].index * Config.instrumentAutomationTargets.length);\r\n\t\t\tthis._envelopeSelects[envelopeIndex].selectedIndex = instrument.envelopes[envelopeIndex].envelope;\r\n\t\t}\r\n\t\t\r\n\t\tthis._renderedEnvelopeCount = instrument.envelopeCount;\r\n\t\tthis._renderedEqFilterCount = instrument.eqFilter.controlPointCount;\r\n\t\tthis._renderedNoteFilterCount = useControlPointCount;\r\n\t\tthis._renderedInstrumentType = instrument.type;\r\n\t\tthis._renderedEffects = instrument.effects;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {clamp, Instrument, Synth} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {ChangeSequence, UndoableChange} from \"./Change\";\r\nimport {ChangeFadeInOut} from \"./changes\";\r\n\r\nexport class FadeInOutEditor {\r\n\tprivate readonly _editorWidth: number = 120;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fadeCurve: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\r\n\tprivate readonly _dottedLinePath: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\"});\r\n\tprivate readonly _controlCurve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\r\n\t\tthis._fadeCurve,\r\n\t\tthis._dottedLinePath,\r\n\t\tthis._controlCurve,\r\n\t);\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"fadeInOut\", style: \"height: 100%;\"}, this._svg);\r\n\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _draggingFadeIn: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _renderedFadeIn: number = -1;\r\n\tprivate _renderedFadeOut: number = -1;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\r\n\t\tthis._dottedLinePath.setAttribute(\"d\", `M ${dottedLineX} 0 L ${dottedLineX} ${this._editorHeight}`);\r\n\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\r\n\tprivate _fadeInToX(fadeIn: number) {\r\n\t\treturn 1.0 + (this._editorWidth - 2.0) * 0.4 * fadeIn / (Config.fadeInRange - 1);\r\n\t}\r\n\tprivate _xToFadeIn(x: number) {\r\n\t\treturn clamp(0, Config.fadeInRange, Math.round((x - 1.0) * (Config.fadeInRange - 1) / (0.4 * this._editorWidth - 2.0)));\r\n\t}\r\n\tprivate _fadeOutToX(fadeOut: number) {\r\n\t\treturn 1.0 + (this._editorWidth - 2.0) * (0.5 + 0.5 * fadeOut / (Config.fadeOutTicks.length - 1));\r\n\t}\r\n\tprivate _xToFadeOut(x: number) {\r\n\t\treturn clamp(0, Config.fadeOutTicks.length, Math.round((Config.fadeOutTicks.length - 1) * ((x - 1.0) / (this._editorWidth - 2.0) - 0.5) / 0.5));\r\n\t}\r\n\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\t\r\n\tprivate _whenCursorPressed(): void {\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tthis._mouseXStart = this._mouseX;\r\n\t\tthis._mouseDown = true;\r\n\t\tthis._mouseDragging = false;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\r\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\r\n\t\tthis._draggingFadeIn = this._mouseXStart < (fadeInX + fadeOutX) / 2.0;\r\n\t\tthis._dragChange = new ChangeSequence();\r\n\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\t}\r\n\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange.undo();\r\n\t\t} else {\r\n\t\t\tthis._mouseDown = false;\r\n\t\t}\r\n\t\tthis._dragChange = null;\r\n\t\t\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\t\t\t\r\n\t\t\tif (Math.abs(this._mouseX - this._mouseXStart) > 4.0) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this._mouseDragging) {\r\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tif (this._draggingFadeIn) {\r\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._fadeInToX(instrument.fadeIn) + this._mouseX - this._mouseXStart), instrument.fadeOut));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._fadeOutToX(instrument.fadeOut) + this._mouseX - this._mouseXStart)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\r\n\t\t\tif (!this._mouseDragging) {\r\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tif (this._draggingFadeIn) {\r\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._mouseX), instrument.fadeOut));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._mouseX)));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._dragChange = null;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\r\n\t\tif (this._renderedFadeIn == instrument.fadeIn && this._renderedFadeOut == instrument.fadeOut) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\r\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\r\n\t\tthis._controlCurve.setAttribute(\"d\", `M ${fadeInX} 0 L ${fadeInX} ${this._editorHeight} M ${fadeOutX} 0 L ${fadeOutX} ${this._editorHeight}`);\r\n\t\t\r\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\r\n\t\tlet fadePath: string = \"\";\r\n\t\tfadePath += `M 0 ${this._editorHeight} `;\r\n\t\tfadePath += `L ${fadeInX} 0 `;\r\n\t\tif (Synth.fadeOutSettingToTicks(instrument.fadeOut) > 0) {\r\n\t\t\tfadePath += `L ${dottedLineX} 0 `;\r\n\t\t\tfadePath += `L ${fadeOutX} ${this._editorHeight} `;\r\n\t\t} else {\r\n\t\t\tfadePath += `L ${fadeOutX} 0 `;\r\n\t\t\tfadePath += `L ${dottedLineX} ${this._editorHeight} `;\r\n\t\t}\r\n\t\tfadePath += \"z\";\r\n\t\tthis._fadeCurve.setAttribute(\"d\", fadePath);\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tthis._songEditor.togglePlay();\r\n\t\tthis.updatePlayButton();\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\t\tprivate readonly _startMode:   number = 0;\r\n\t\tprivate readonly _endMode:     number = 1;\r\n\t\tprivate readonly _bothMode:    number = 2;\r\n\t\tprivate _loopAtPoint: number = -1;\r\n\t\t\r\n\t\tprivate readonly _loop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4});\r\n\t\tprivate readonly _barLoop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.uiWidgetFocus, \"stroke-width\": 2});\r\n\t\tprivate readonly _highlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\t\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `touch-action: pan-y; position: absolute;`, height: this._editorHeight},\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t\tthis._barLoop\r\n\t);\r\n\t\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"loopEditor\"}, this._svg);\r\n\t\t\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\t\tprivate _cursor: Cursor = {startBar: -1, mode: -1};\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedBarLoop: number = -1;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\t\t\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\t\t\t\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\t\treturn {start: start, length: end - start};\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\t\t\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.prefs.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\t\t\t\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\t\t\t\t\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tpublic setLoopAt(bar: number): void {\r\n\t\tthis._loopAtPoint = bar;\r\n\t\tthis._render();\r\n    }\r\n\t\t\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\t\t\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\t\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst barLoopStart = (this._loopAtPoint + 0.5) * this._barWidth;\r\n\t\tif (this._renderedBarLoop != barLoopStart) {\r\n\t\t\tif (barLoopStart < 0) {\r\n\t\t\t\tthis._barLoop.setAttribute(\"d\", \"\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._barLoop.setAttribute(\"d\",\r\n\t\t\t\t\t`M ${barLoopStart} ${radius * 1.5} ` +\r\n\t\t\t\t\t`L ${barLoopStart - radius} ${radius}` +\r\n\t\t\t\t\t`L ${barLoopStart} ${radius * 0.5}` +\r\n\t\t\t\t\t`L ${barLoopStart + radius} ${radius}` +\r\n\t\t\t\t\t`z`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis._renderedBarLoop = barLoopStart;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\t\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\"});\r\n\t\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\r\n\t\t\toption({value: \"wrapAround\"}, \"Wrap notes around within bars.\"),\r\n\t);\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({style: \"text-align: right;\"},\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\t\t\t\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChannelRow } from \"./ChannelRow\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeRemoveChannel } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\t\r\n\tprivate _cornerFiller: HTMLDivElement = HTML.div({style: `background: ${ColorConfig.editorBackground}; position: sticky; bottom: 0; left: 0; width: 32px; height: 30px;`});\r\n\t\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: sticky; padding-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._buttons.length, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / ChannelRow.patternHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, -1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\tthis._doc.channel = this._channelDropDownChannel;\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tthis._doc.selection.insertChannel();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tthis._doc.record(new ChangeRemoveChannel(this._doc, this._channelDropDownChannel, this._channelDropDownChannel));\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._channelDropDownOpen && this._channelNameDisplay.style.getPropertyValue(\"display\") == \"none\" && this._channelNameInput.input.style.getPropertyValue(\"display\") == \"none\") {\r\n\t\t\tthis._channelDropDownOpen = false;\r\n        }\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = ChannelRow.patternHeight;\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight + 2 + index * ChannelRow.patternHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.prefs.enableChannelMuting) return;\r\n\t\tlet startingChannelCount: number = this._buttons.length;\r\n\r\n\t\tif (this._buttons.length != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._buttons.length; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; -webkit-text-stroke: 1.5px; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", title: \"Mute (M), Mute All (⇧M), Solo (S), Exclude (⇧S)\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: `align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;` }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._buttons.length; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\r\n\t\t\tthis.container.appendChild(this._cornerFiller);\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != ChannelRow.patternHeight || startingChannelCount != this._buttons.length) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((ChannelRow.patternHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((ChannelRow.patternHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || startingChannelCount != this._buttons.length) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (startingChannelCount != this._buttons.length || this._renderedChannelHeight != ChannelRow.patternHeight) {\r\n\t\t\tthis._renderedChannelHeight = ChannelRow.patternHeight;\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * ChannelRow.patternHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = (this._editorHeight + 16) + \"px\";\r\n\r\n\t\t\tif (ChannelRow.patternHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (ChannelRow.patternHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\t\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4});\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2});\r\n\t\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\r\n\t\t\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\t\tpublic readonly container: HTMLDivElement = HTML.div({id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\"}, this._svg);\r\n\t\t\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _barHeight: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedVisibleOctaveCount: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t\t\t\r\n\t\tthis._svg.appendChild(this._handle);\r\n\t\t\t\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\t\tthis._svg.appendChild(SVG.rect({fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight}));\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\t\t\t\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\t\t\t\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\t\t\t\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\r\n\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\r\n\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\t\tif (octave < scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(octave + visibleOctaveCount * 0.5));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\r\n\t\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\r\n\t\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave + 1 + visibleOctaveCount * 0.5));\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave - 1 + visibleOctaveCount * 0.5));\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\t\t\t\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\t\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.getBaseVisibleOctave(this._doc.channel));\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedVisibleOctaveCount != visibleOctaveCount) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedVisibleOctaveCount = visibleOctaveCount;\r\n\t\t\tthis._barHeight = (this._octaveHeight * visibleOctaveCount + this._notchHeight);\r\n\t\t\tthis._handle.setAttribute(\"height\", String(this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", String(this._barHeight));\r\n\t\t\tthis._handle.setAttribute(\"y\", String(this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", String(this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {AnalogousDrum, analogousDrumMap, MidiEventType} from \"./Midi\";\r\n\r\ndeclare global {\r\n\tinterface Navigator {\r\n\t\trequestMIDIAccess?(): Promise<any>;\r\n\t}\r\n}\r\n\r\ninterface MIDIInput extends EventTarget {\r\n\tid: string;\r\n\ttype: \"input\" | \"output\";\r\n\tstate: \"disconnected\" | \"connected\";\r\n}\r\n\r\ninterface MIDIConnectionEvent {\r\n\tport: MIDIInput;\r\n}\r\n\r\ninterface MIDIMessageEvent {\r\n\tdata: [type: number, key: number, velocity: number];\r\n\ttarget: MIDIInput;\r\n}\r\n\r\n// A unique id for this tab.\r\nconst id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\r\n\r\nexport class MidiInputHandler {\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis.registerMidiAccessHandler();\r\n\t}\r\n\t\r\n\tprivate async registerMidiAccessHandler() {\r\n\t\tif (navigator.requestMIDIAccess == null) return;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst midiAccess = await navigator.requestMIDIAccess();\r\n\t\t\t\r\n\t\t\tmidiAccess.inputs.forEach(this._registerMidiInput);\r\n\t\t\tmidiAccess.addEventListener(\"statechange\", this._handleStateChange);\r\n\t\t\t\r\n\t\t\tthis._takeMidiHandlerFocus();\r\n\t\t\twindow.addEventListener(\"focus\", this._takeMidiHandlerFocus);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"Failed to get MIDI access\", e);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _takeMidiHandlerFocus = (event?: Event) => {\r\n\t\t// Record that this browser tab is the one that should handle midi\r\n\t\t// events and any other open tabs should ignore midi events for now.\r\n\t\tlocalStorage.setItem(\"midiHandlerId\", id);\r\n\t}\r\n\t\r\n\tprivate _handleStateChange = (event: MIDIConnectionEvent) => {\r\n\t\tif (event.port.type !== \"input\") return;\r\n\t\t\r\n\t\tswitch (event.port.state) {\r\n\t\t\tcase \"connected\":\r\n\t\t\t\tthis._registerMidiInput(event.port);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"disconnected\":\r\n\t\t\t\tthis._unregisterMidiInput(event.port);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _registerMidiInput = (midiInput: MIDIInput) => {\r\n\t\tmidiInput.addEventListener(\"midimessage\", this._onMidiMessage as any);\r\n\t}\r\n\t\r\n\tprivate _unregisterMidiInput = (midiInput: MIDIInput) => {\r\n\t\tmidiInput.removeEventListener(\"midimessage\", this._onMidiMessage as any);\r\n\t\tthis._doc.performance.clearAllPitches();\r\n\t}\r\n\t\r\n\tprivate _onMidiMessage = (event: MIDIMessageEvent) => {\r\n\t\t// Ignore midi events if disabled or a different tab is handling them.\r\n\t\tif (!this._doc.prefs.enableMidi || localStorage.getItem(\"midiHandlerId\") != id) return;\r\n\t\t\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tlet [eventType, key, velocity] = event.data;\r\n\t\teventType &= 0xF0;\r\n\t\t\r\n\t\tif (isDrum) {\r\n\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[key];\r\n\t\t\tif (drum != undefined) {\r\n\t\t\t\tkey = drum.frequency;\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tkey -= Config.keys[this._doc.song.key].basePitch; // The basePitch of the song key is implicit so don't include it.\r\n\t\t\tif (key < 0 || key > Config.maxPitch) return;\r\n\t\t}\r\n\t\t\r\n\t\tif (eventType == MidiEventType.noteOn && velocity == 0) {\r\n\t\t\teventType = MidiEventType.noteOff;\r\n\t\t}\r\n\t\t\r\n\t\tswitch (eventType) {\r\n\t\t\tcase MidiEventType.noteOn:\r\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\r\n\t\t\t\tthis._doc.performance.addPerformedPitch(key);\r\n\t\t\t\tbreak;\r\n\t\t\tcase MidiEventType.noteOff:\r\n\t\t\t\tthis._doc.performance.removePerformedPitch(key);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\n\r\nexport class KeyboardLayout {\r\n\tprivate static _pianoAtC: ReadonlyArray<ReadonlyArray<number | null>> = [\r\n\t\t[   0,   2,   4,   5,   7,   9,  11,  12,  14,  16,  17],\r\n\t\t[null,   1,   3,null,   6,   8,  10,null,  13,  15,null,  18],\r\n\t\t[  12,  14,  16,  17,  19,  21,  23,  24,  26,  28,  29,  31,  33],\r\n\t\t[null,  13,  15,null,  18,  20,  22,null,  25,  27,null,  30,  32],\r\n\t];\r\n\tprivate static _pianoAtA: ReadonlyArray<ReadonlyArray<number | null>> = [\r\n\t\t[   0,   2,   3,   5,   7,   8,  10,  12,  14,  15,  17],\r\n\t\t[  -1,   1,null,   4,   6,null,   9,  11,  13,null,  16,  18],\r\n\t\t[  12,  14,  15,  17,  19,  20,  22,  24,  26,  27,  29,  31,  32],\r\n\t\t[  11,  13,null,  16,  18,null,  21,  23,  25,null,  28,  30,null],\r\n\t];\r\n\t\r\n\tpublic static keyPosToPitch(doc: SongDocument, x: number, y: number, keyboardLayout: string): number | null {\r\n\t\tlet pitchOffset: number | null = null;\r\n\t\tlet forcedKey: number | null = null;\r\n\t\tswitch (keyboardLayout) {\r\n\t\t\tcase \"wickiHayden\":\r\n\t\t\t\tpitchOffset = y * 5 + x * 2 - 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songScale\":\r\n\t\t\t\tconst scaleFlags: ReadonlyArray<boolean> = Config.scales[doc.song.scale].flags;\r\n\t\t\t\tconst scaleIndices: number[] = <number[]> scaleFlags.map((flag, index) => flag ? index : null).filter((index) => index != null);\r\n\t\t\t\tpitchOffset = (y - 1 + Math.floor(x / scaleIndices.length)) * Config.pitchesPerOctave + scaleIndices[(x + scaleIndices.length) % scaleIndices.length];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoAtC\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\r\n\t\t\t\tforcedKey = Config.keys.dictionary[\"C\"].basePitch;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoAtA\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\r\n\t\t\t\tforcedKey = Config.keys.dictionary[\"A\"].basePitch;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoTransposingC\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pianoTransposingA\":\r\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tif (pitchOffset == null) return null;\r\n\t\t\r\n\t\tconst octaveOffset: number = Math.max(0, doc.song.channels[doc.channel].octave - 1) * Config.pitchesPerOctave;\r\n\t\tlet keyOffset: number = 0; // The basePitch of the song key is implicit.\r\n\t\t\r\n\t\tif (forcedKey != null) {\r\n\t\t\tconst keyBasePitch: number = Config.keys[doc.song.key].basePitch;\r\n\t\t\tkeyOffset = (forcedKey - keyBasePitch + 144) % 12;\r\n\t\t}\r\n\t\t\r\n\t\tconst pitch = octaveOffset + keyOffset + pitchOffset;\r\n\t\tif (pitch < 0 || pitch > Config.maxPitch) return null;\r\n\t\t\t\r\n\t\treturn pitch;\r\n\t}\r\n\t\r\n\tprivate _possiblyPlayingPitchesFromKeyboard: boolean = false;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\twindow.addEventListener(\"blur\", this._onWindowBlur);\r\n\t}\r\n\t\r\n\tprivate _onWindowBlur = (event: Event) => {\r\n\t\t// Browsers don't explicitly release keys when the page isn't in focus so let's just assume they're all released.\r\n\t\tif (this._possiblyPlayingPitchesFromKeyboard) {\r\n\t\t\tthis._doc.performance.clearAllPitches();\r\n\t\t\tthis._possiblyPlayingPitchesFromKeyboard = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic handleKeyEvent(event: KeyboardEvent, pressed: boolean): void {\r\n\t\t// See: https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\r\n\t\tswitch (event.code) {\r\n\t\t\tcase \"Backquote\": this.handleKey(-1, 3, pressed); break;\r\n\t\t\tcase \"Digit1\": this.handleKey(0, 3, pressed); break;\r\n\t\t\tcase \"Digit2\": this.handleKey(1, 3, pressed); break;\r\n\t\t\tcase \"Digit3\": this.handleKey(2, 3, pressed); break;\r\n\t\t\tcase \"Digit4\": this.handleKey(3, 3, pressed); break;\r\n\t\t\tcase \"Digit5\": this.handleKey(4, 3, pressed); break;\r\n\t\t\tcase \"Digit6\": this.handleKey(5, 3, pressed); break;\r\n\t\t\tcase \"Digit7\": this.handleKey(6, 3, pressed); break;\r\n\t\t\tcase \"Digit8\": this.handleKey(7, 3, pressed); break;\r\n\t\t\tcase \"Digit9\": this.handleKey(8, 3, pressed); break;\r\n\t\t\tcase \"Digit0\": this.handleKey(9, 3, pressed); break;\r\n\t\t\tcase \"Minus\": this.handleKey(10, 3, pressed); break;\r\n\t\t\tcase \"Equal\": this.handleKey(11, 3, pressed); break;\r\n\t\t\tcase \"IntlYen\": this.handleKey(12, 3, pressed); break; // Present on Russian and Japanese keyboards.\r\n\t\t\t\r\n\t\t\tcase \"KeyQ\": this.handleKey(0, 2, pressed); break;\r\n\t\t\tcase \"KeyW\": this.handleKey(1, 2, pressed); break;\r\n\t\t\tcase \"KeyE\": this.handleKey(2, 2, pressed); break;\r\n\t\t\tcase \"KeyR\": this.handleKey(3, 2, pressed); break;\r\n\t\t\tcase \"KeyT\": this.handleKey(4, 2, pressed); break;\r\n\t\t\tcase \"KeyY\": this.handleKey(5, 2, pressed); break;\r\n\t\t\tcase \"KeyU\": this.handleKey(6, 2, pressed); break;\r\n\t\t\tcase \"KeyI\": this.handleKey(7, 2, pressed); break;\r\n\t\t\tcase \"KeyO\": this.handleKey(8, 2, pressed); break;\r\n\t\t\tcase \"KeyP\": this.handleKey(9, 2, pressed); break;\r\n\t\t\tcase \"BracketLeft\": this.handleKey(10, 2, pressed); break;\r\n\t\t\tcase \"BracketRight\": this.handleKey(11, 2, pressed); break;\r\n\t\t\tcase \"Backslash\":\r\n\t\t\t\t// Present on US keyboards... but on non-US keyboards it's also used at a different location, see \"IntlHash\" below. :/\r\n\t\t\t\tif (event.key == \"\\\\\" || event.key == \"|\") {\r\n\t\t\t\t\tthis.handleKey(12, 2, pressed);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.handleKey(11, 1, pressed);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase \"KeyA\": this.handleKey(0, 1, pressed); break;\r\n\t\t\tcase \"KeyS\": this.handleKey(1, 1, pressed); break;\r\n\t\t\tcase \"KeyD\": this.handleKey(2, 1, pressed); break;\r\n\t\t\tcase \"KeyF\": this.handleKey(3, 1, pressed); break;\r\n\t\t\tcase \"KeyG\": this.handleKey(4, 1, pressed); break;\r\n\t\t\tcase \"KeyH\": this.handleKey(5, 1, pressed); break;\r\n\t\t\tcase \"KeyJ\": this.handleKey(6, 1, pressed); break;\r\n\t\t\tcase \"KeyK\": this.handleKey(7, 1, pressed); break;\r\n\t\t\tcase \"KeyL\": this.handleKey(8, 1, pressed); break;\r\n\t\t\tcase \"Semicolon\": this.handleKey(9, 1, pressed); break;\r\n\t\t\tcase \"Quote\": this.handleKey(10, 1, pressed); break;\r\n\t\t\tcase \"IntlHash\": this.handleKey(11, 1, pressed); break; // Present on non-US keyboards... but in practice it is actually represented as \"Backslash\" so this is obsolete. Oh well. :/\r\n\t\t\t\r\n\t\t\tcase \"IntlBackslash\": this.handleKey(-1, 0, pressed); break; // Present on Brazillian and many European keyboards.\r\n\t\t\tcase \"KeyZ\": this.handleKey(0, 0, pressed); break;\r\n\t\t\tcase \"KeyX\": this.handleKey(1, 0, pressed); break;\r\n\t\t\tcase \"KeyC\": this.handleKey(2, 0, pressed); break;\r\n\t\t\tcase \"KeyV\": this.handleKey(3, 0, pressed); break;\r\n\t\t\tcase \"KeyB\": this.handleKey(4, 0, pressed); break;\r\n\t\t\tcase \"KeyN\": this.handleKey(5, 0, pressed); break;\r\n\t\t\tcase \"KeyM\": this.handleKey(6, 0, pressed); break;\r\n\t\t\tcase \"Comma\": this.handleKey(7, 0, pressed); break;\r\n\t\t\tcase \"Period\": this.handleKey(8, 0, pressed); break;\r\n\t\t\tcase \"Slash\": this.handleKey(9, 0, pressed); break;\r\n\t\t\tcase \"IntlRo\": this.handleKey(10, 0, pressed); break; // Present on Brazillian and Japanese keyboards.\r\n\t\t\t\r\n\t\t\tdefault: return; //unhandled, don't prevent default.\r\n\t\t}\r\n\t\t\r\n\t\t// If the key event was handled as a note, prevent default behavior.\r\n\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\tpublic handleKey(x: number, y: number, pressed: boolean): void {\r\n\t\t\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tif (x >= 0 && x < Config.drumCount) {\r\n\t\t\t\tif (pressed) {\r\n\t\t\t\t\tthis._doc.synth.preferLowerLatency = true;\r\n\t\t\t\t\tthis._doc.performance.addPerformedPitch(x);\r\n\t\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.performance.removePerformedPitch(x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, x, y, this._doc.prefs.keyboardLayout);\r\n\t\t\r\n\t\tif (pitch != null) {\r\n\t\t\tif (pressed) {\r\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\r\n\t\t\t\tthis._doc.performance.addPerformedPitch(pitch);\r\n\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis._doc.performance.removePerformedPitch(pitch);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Chord, Transition, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, FilterSettings, Channel, Pattern, Instrument, FilterControlPoint } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Slider } from \"./HTMLWrapper\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeVolume, FilterMoveData, ChangeTempo, ChangePan, ChangeReverb, ChangeDistortion, ChangeOperatorAmplitude, ChangeFeedbackAmplitude, ChangePulseWidth, ChangeDetune, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeChorus, ChangeEQFilterSimplePeak, ChangeNoteFilterSimplePeak, ChangeStringSustain, ChangeEnvelopeSpeed, ChangeSupersawDynamism, ChangeSupersawShape, ChangeSupersawSpread, ChangePitchShift, ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeSizeBend, ChangePitchBend, ChangePitchAdded, ChangeArpeggioSpeed, ChangeBitcrusherQuantization, ChangeBitcrusherFreq, ChangeEchoSustain, ChangeEQFilterSimpleCut, ChangeNoteFilterSimpleCut, ChangeFilterMovePoint, ChangeDuplicateSelectedReusedPatterns, ChangeHoldingModRecording } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n    const clone: T = <T>node.cloneNode(false);\r\n    node.parentNode!.replaceChild(clone, node);\r\n    return clone;\r\n}\r\n\r\nclass PatternCursor {\r\n    public valid: boolean = false;\r\n    public prevNote: Note | null = null;\r\n    public curNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public pitch: number = 0;\r\n    public pitchIndex: number = -1;\r\n    public curIndex: number = 0;\r\n    public start: number = 0;\r\n    public end: number = 0;\r\n    public part: number = 0;\r\n    public exactPart: number = 0;\r\n    public nearPinIndex: number = 0;\r\n    public pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n    public controlMode: boolean = false;\r\n    public shiftMode: boolean = false;\r\n    private readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n    private readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n    private readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n    private readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n    private _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n    private readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n    private readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n    private readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n    public modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n    private readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n        SVG.defs(\r\n            this._svgNoteBackground,\r\n            this._svgDrumBackground,\r\n            this._svgModBackground,\r\n        ),\r\n        this._svgBackground,\r\n        this._selectionRect,\r\n        this._svgNoteContainer,\r\n        this._svgPreview,\r\n        this._svgPlayhead,\r\n    );\r\n    public readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n    private readonly _defaultModBorder: number = 34;\r\n    private readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n    private readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n    private readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n    private _editorWidth: number;\r\n\r\n    private _modDragValueLabelLeft: number = 0;\r\n    private _modDragValueLabelTop: number = 0;\r\n    private _modDragValueLabelWidth: number = 0;\r\n    public editingModLabel: boolean = false;\r\n    private _modDragStartValue: number = 0;\r\n    private _modDragPin: NotePin;\r\n    private _modDragNote: Note;\r\n    private _modDragSetting: number;\r\n    private _modDragLowerBound: number = 0;\r\n    private _modDragUpperBound: number = 6;\r\n\r\n    private _editorHeight: number;\r\n    private _partWidth: number;\r\n    private _pitchHeight: number = -1;\r\n    private _pitchBorder: number;\r\n    private _pitchCount: number;\r\n    private _mouseX: number = 0;\r\n    private _mouseY: number = 0;\r\n    private _mouseDown: boolean = false;\r\n    private _mouseOver: boolean = false;\r\n    private _mouseDragging: boolean = false;\r\n    private _mouseHorizontal: boolean = false;\r\n    private _usingTouch: boolean = false;\r\n    private _copiedPinChannels: NotePin[][] = [];\r\n    private _copiedPins: NotePin[];\r\n    private _mouseXStart: number = 0;\r\n    private _mouseYStart: number = 0;\r\n    private _touchTime: number = 0;\r\n    private _shiftHeld: boolean = false;\r\n    private _dragConfirmed: boolean = false;\r\n    private _draggingStartOfSelection: boolean = false;\r\n    private _draggingEndOfSelection: boolean = false;\r\n    private _draggingSelectionContents: boolean = false;\r\n    private _dragTime: number = 0;\r\n    private _dragPitch: number = 0;\r\n    private _dragSize: number = 0;\r\n    private _dragVisible: boolean = false;\r\n    private _dragChange: UndoableChange | null = null;\r\n    private _changePatternSelection: UndoableChange | null = null;\r\n    private _lastChangeWasPatternSelection: boolean = false;\r\n    private _cursor: PatternCursor = new PatternCursor();\r\n    private _stashCursorPinVols: number[][] = [];\r\n    private _pattern: Pattern | null = null;\r\n    private _playheadX: number = 0.0;\r\n    private _octaveOffset: number = 0;\r\n    private _renderedWidth: number = -1;\r\n    private _renderedHeight: number = -1;\r\n    private _renderedBeatWidth: number = -1;\r\n    private _renderedPitchHeight: number = -1;\r\n    private _renderedFifths: boolean = false;\r\n    private _renderedThirds: boolean = false;\r\n    private _renderedDrums: boolean = false;\r\n    private _renderedMod: boolean = false;\r\n    private _renderedRhythm: number = -1;\r\n    private _renderedPitchChannelCount: number = -1;\r\n    private _renderedNoiseChannelCount: number = -1;\r\n    private _renderedModChannelCount: number = -1;\r\n    private _followPlayheadBar: number = -1;\r\n\r\n    constructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n            const rectangle: SVGRectElement = SVG.rect();\r\n            rectangle.setAttribute(\"x\", \"1\");\r\n            rectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n            this._svgNoteBackground.appendChild(rectangle);\r\n            this._backgroundPitchRows[i] = rectangle;\r\n        }\r\n\r\n        this._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n        this._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n        this._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n        this._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n        this._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n        this._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n        if (this._interactive) {\r\n            this._updateCursorStatus();\r\n            this._updatePreview();\r\n            window.requestAnimationFrame(this._animatePlayhead);\r\n            this._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n            document.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n            document.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n            this._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n            this._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n            this._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n            this._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n            this._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n            this._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n            this.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n        } else {\r\n            this._svgPlayhead.style.display = \"none\";\r\n            this._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n        }\r\n\r\n        this.resetCopiedPins();\r\n    }\r\n\r\n    private _getMaxPitch(): number {\r\n\t\treturn this._doc.song.getChannelIsMod(this._doc.channel) ? Config.modCount - 1 : ( this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch );\r\n\t}\r\n\r\n    private _validateModDragLabelInput = (event: Event): void => {\r\n        const label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n        // Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n        let converted: number = Number(label.innerText);\r\n        if (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n            return;\r\n\r\n        // Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n        if (label.innerText != \"\" && label.innerText != \"-\") {\r\n            // Force NaN results to be 0\r\n            if (isNaN(converted)) {\r\n                converted = this._modDragLowerBound;\r\n                label.innerText = \"\" + this._modDragLowerBound;\r\n            }\r\n\r\n            let presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n            if (label.innerText != presValue + \"\")\r\n                label.innerText = presValue + \"\";\r\n\r\n            // This is me being too lazy to fiddle with the css to get it to align center.\r\n            let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n            this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n            this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, presValue- Config.modulators[this._modDragSetting].convertRealFactor, this._modDragPin.interval, this.shiftMode));\r\n\r\n        }\r\n    }\r\n\r\n    private _getMaxDivision(): number {\r\n        if (this.controlMode && this._mouseHorizontal)\r\n            return Config.partsPerBeat;\r\n        const rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n        if (rhythmStepsPerBeat % 4 == 0) {\r\n            // Beat is divisible by 2 (and 4).\r\n            return Config.partsPerBeat / 2;\r\n        } else if (rhythmStepsPerBeat % 3 == 0) {\r\n            // Beat is divisible by 3.\r\n            return Config.partsPerBeat / 3;\r\n        } else if (rhythmStepsPerBeat % 2 == 0) {\r\n            // Beat is divisible by 2.\r\n            return Config.partsPerBeat / 2;\r\n        }\r\n        return Config.partsPerBeat;\r\n    }\r\n\r\n    private _getMinDivision(): number {\r\n        if (this.controlMode && this._mouseHorizontal)\r\n            return 1;\r\n        return Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n    }\r\n\r\n    private _snapToMinDivision(input: number): number {\r\n        const minDivision: number = this._getMinDivision();\r\n        return Math.floor(input / minDivision) * minDivision;\r\n    }\r\n\r\n    private _updateCursorStatus(): void {\r\n        this._cursor = new PatternCursor();\r\n\r\n        if (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n        const minDivision: number = this._getMinDivision();\r\n        this._cursor.exactPart = this._mouseX / this._partWidth;\r\n        this._cursor.part =\r\n            Math.floor(\r\n                Math.max(0,\r\n                    Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n                )\r\n                / minDivision) * minDivision;\r\n\r\n        let foundNote: boolean = false;\r\n\r\n        if (this._pattern != null) {\r\n            for (const note of this._pattern.notes) {\r\n                if (note.end <= this._cursor.exactPart) {\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n                            this._cursor.prevNote = note;\r\n                        }\r\n                        if (!foundNote)\r\n                            this._cursor.curIndex++;\r\n\r\n                    } else {\r\n                        this._cursor.prevNote = note;\r\n                        this._cursor.curIndex++;\r\n                    }\r\n                } else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n                            this._cursor.curNote = note;\r\n                            foundNote = true;\r\n                        }\r\n                        // Only increment index if the sought note has been found... or if this note truly starts before the other\r\n                        else if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n                            this._cursor.curIndex++;\r\n                    }\r\n                    else {\r\n                        this._cursor.curNote = note;\r\n                    }\r\n                } else if (note.start > this._cursor.exactPart) {\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n                            this._cursor.nextNote = note;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        this._cursor.nextNote = note;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n                if (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n                    let pinIdx: number = 0;\r\n\r\n                    while (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n                        pinIdx++;\r\n                    }\r\n                    // Decide if the previous pin is closer\r\n                    if (pinIdx > 0) {\r\n                        if (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n                            pinIdx--;\r\n                        }\r\n                    }\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n                    const mod: number = Math.max( 0, Config.modCount - 1 - this._cursor.curNote.pitches[0]);\r\n\r\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[mod];\r\n\r\n                    let presValue: number = this._cursor.curNote.pins[pinIdx].size + Config.modulators[setting].convertRealFactor;\r\n\r\n                    // This is me being too lazy to fiddle with the css to get it to align center.\r\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\r\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n                    this._modDragStartValue = this._cursor.curNote.pins[pinIdx].size;\r\n                    this._modDragNote = this._cursor.curNote;\r\n                    this._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n                    this._modDragLowerBound = Config.modulators[setting].convertRealFactor;\r\n                    this._modDragUpperBound = Config.modulators[setting].convertRealFactor + Config.modulators[setting].maxRawVol;\r\n                    this._modDragSetting = setting;\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n                    this.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n                }\r\n                else {\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                }\r\n            }\r\n            else if (!this.editingModLabel) {\r\n                this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n            }\r\n        }\r\n        else {\r\n            this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n        }\r\n\r\n        let mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n        if (this._cursor.curNote != null) {\r\n\r\n            this._cursor.start = this._cursor.curNote.start;\r\n            this._cursor.end = this._cursor.curNote.end;\r\n            this._cursor.pins = this._cursor.curNote.pins;\r\n\r\n            let interval: number = 0;\r\n            let error: number = 0;\r\n            let prevPin: NotePin;\r\n            let nextPin: NotePin = this._cursor.curNote.pins[0];\r\n            for (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n                prevPin = nextPin;\r\n                nextPin = this._cursor.curNote.pins[j];\r\n                const leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n                const rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n                if (this._mouseX > rightSide) continue;\r\n                if (this._mouseX < leftSide) throw new Error();\r\n                const intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n                const arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n                const bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n                interval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n                error = arc * bendHeight + 0.95;\r\n                break;\r\n            }\r\n\r\n            let minInterval: number = Number.MAX_VALUE;\r\n            let maxInterval: number = -Number.MAX_VALUE;\r\n            let bestDistance: number = Number.MAX_VALUE;\r\n            for (const pin of this._cursor.curNote.pins) {\r\n                if (minInterval > pin.interval) minInterval = pin.interval;\r\n                if (maxInterval < pin.interval) maxInterval = pin.interval;\r\n                const pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n                if (bestDistance > pinDistance) {\r\n                    bestDistance = pinDistance;\r\n                    this._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n                }\r\n            }\r\n\r\n            mousePitch -= interval;\r\n            this._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, this._getMaxPitch() - maxInterval);\r\n\r\n            // Snap to nearby existing note if present.\r\n            if (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                let nearest: number = error;\r\n                for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n                    const distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n                    if (distance > nearest) continue;\r\n                    nearest = distance;\r\n                    this._cursor.pitch = this._cursor.curNote.pitches[i];\r\n                }\r\n            }\r\n\r\n            for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n                if (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n                    this._cursor.pitchIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            this._cursor.pitch = this._snapToPitch(mousePitch, 0, this._getMaxPitch());\r\n            const defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n            const fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n            const maxDivision: number = this._getMaxDivision();\r\n            const modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n            if (defaultLength == 1) {\r\n                this._cursor.start = this._cursor.part;\r\n            } else if (defaultLength > Config.partsPerBeat) {\r\n                this._cursor.start = fullBeats * Config.partsPerBeat;\r\n            } else if (defaultLength == Config.partsPerBeat) {\r\n                this._cursor.start = fullBeats * Config.partsPerBeat;\r\n                if (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n                    this._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n                }\r\n            } else {\r\n                this._cursor.start = fullBeats * Config.partsPerBeat;\r\n                let division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n                while (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n                    division++;\r\n                }\r\n                this._cursor.start += Math.floor(modMouse / division) * division;\r\n            }\r\n            this._cursor.end = this._cursor.start + defaultLength;\r\n            let forceStart: number = 0;\r\n            let forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n            if (this._cursor.prevNote != null) {\r\n                forceStart = this._cursor.prevNote.end;\r\n            }\r\n            if (this._cursor.nextNote != null) {\r\n                forceEnd = this._cursor.nextNote.start;\r\n            }\r\n            if (this._cursor.start < forceStart) {\r\n                this._cursor.start = forceStart;\r\n                this._cursor.end = this._cursor.start + defaultLength;\r\n                if (this._cursor.end > forceEnd) {\r\n                    this._cursor.end = forceEnd;\r\n                }\r\n            } else if (this._cursor.end > forceEnd) {\r\n                this._cursor.end = forceEnd;\r\n                this._cursor.start = this._cursor.end - defaultLength;\r\n                if (this._cursor.start < forceStart) {\r\n                    this._cursor.start = forceStart;\r\n                }\r\n            }\r\n\r\n            if (this._cursor.end - this._cursor.start == defaultLength) {\r\n                if (this._copiedPinChannels.length > this._doc.channel) {\r\n                    this._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n                    this._cursor.pins = this._copiedPins;\r\n                } else {\r\n                    const cap: number = this._doc.song.getVolumeCap(false);\r\n                    this._cursor.pins = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n                }\r\n            } else {\r\n                this._cursor.pins = [];\r\n                for (const oldPin of this._copiedPins) {\r\n                    if (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n                        this._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\r\n                        if (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n                    } else {\r\n                        this._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.size));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n                this._cursor.pitch = Math.max(0, Math.min(Config.modCount - 1, this._cursor.pitch));\r\n\r\n                // Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n                if (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n                    for (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n                        this._cursor.pins[pin].size = this._stashCursorPinVols[this._doc.channel][pin];\r\n                    }\r\n                }\r\n\r\n                // Scale volume of copied pin to cap for this row\r\n                let maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n                let maxFoundHeight: number = 0;\r\n                for (const pin of this._cursor.pins) {\r\n                    if (pin.size > maxFoundHeight) {\r\n                        maxFoundHeight = pin.size;\r\n                    }\r\n                }\r\n                // Apply scaling if the max height is below any pin setting.\r\n                if (maxFoundHeight > maxHeight) {\r\n                    for (const pin of this._cursor.pins) {\r\n                        pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this._cursor.valid = true;\r\n\r\n    }\r\n\r\n    private _cursorIsInSelection(): boolean {\r\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n    }\r\n\r\n    private _cursorAtStartOfSelection(): boolean {\r\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n    }\r\n\r\n    private _cursorAtEndOfSelection(): boolean {\r\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n    }\r\n\r\n    private _findMousePitch(pixelY: number): number {\r\n        return Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n    }\r\n\r\n    private _snapToPitch(guess: number, min: number, max: number): number {\r\n        if (guess < min) guess = min;\r\n        if (guess > max) guess = max;\r\n        const scale: ReadonlyArray<boolean> = this._doc.prefs.notesOutsideScale ? Config.scales.dictionary[\"Free\"].flags : Config.scales[this._doc.song.scale].flags;\r\n        if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n            return Math.floor(guess);\r\n        } else {\r\n            let topPitch: number = Math.floor(guess) + 1;\r\n            let bottomPitch: number = Math.floor(guess) - 1;\r\n            while (!scale[topPitch % Config.pitchesPerOctave]) {\r\n                topPitch++;\r\n            }\r\n            while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n                bottomPitch--;\r\n            }\r\n            if (topPitch > max) {\r\n                if (bottomPitch < min) {\r\n                    return min;\r\n                } else {\r\n                    return bottomPitch;\r\n                }\r\n            } else if (bottomPitch < min) {\r\n                return topPitch;\r\n            }\r\n            let topRange: number = topPitch;\r\n            let bottomRange: number = bottomPitch + 1;\r\n            if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n                topRange -= 0.5;\r\n            }\r\n            if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n                bottomRange += 0.5;\r\n            }\r\n            return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n        }\r\n    }\r\n\r\n    private _copyPins(note: Note): void {\r\n        this._copiedPins = [];\r\n        for (const oldPin of note.pins) {\r\n            this._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.size));\r\n        }\r\n        for (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n            if (this._copiedPins[i - 1].size == this._copiedPins[i].size &&\r\n                this._copiedPins[i].size == this._copiedPins[i + 1].size) {\r\n                this._copiedPins.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n        this._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n        this._stashCursorPinVols[this._doc.channel] = [];\r\n        for (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n            this._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].size);\r\n        }\r\n    }\r\n\r\n    public movePlayheadToMouse(): boolean {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n    public resetCopiedPins = (): void => {\r\n        const maxDivision: number = this._getMaxDivision();\r\n        let cap: number = this._doc.song.getVolumeCap(false);\r\n        this._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n        this._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n        for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n            this._stashCursorPinVols[i] = [cap, cap];\r\n        }\r\n        for (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n            this._stashCursorPinVols[i] = [cap, 0];\r\n        }\r\n        for (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n            this._stashCursorPinVols[i] = [cap, 0];\r\n        }\r\n    }\r\n\r\n    private _animatePlayhead = (timestamp: number): void => {\r\n\r\n        if (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n            // On a mobile device, the pattern editor supports using a long stationary touch to activate selection.\r\n            this._dragChange!.undo();\r\n            this._shiftHeld = true;\r\n            this._dragConfirmed = false;\r\n            this._whenCursorPressed();\r\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\r\n            this._doc.notifier.notifyWatchers();\r\n        }\r\n\r\n\r\n        const playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n        const noteFlashElements: NodeListOf<SVGPathElement> = this._svgNoteContainer.querySelectorAll('.note-flash');\r\n\r\n        if (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n            this._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n            const modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\r\n\r\n            for (var i = 0; i < noteFlashElements.length; i++) {\r\n                var element: SVGPathElement = noteFlashElements[i];\r\n                const noteStart: number = Number(element.getAttribute(\"note-start\"))/(this._doc.song.beatsPerBar * Config.partsPerBeat)\r\n                const noteEnd: number = Number(element.getAttribute(\"note-end\"))/(this._doc.song.beatsPerBar * Config.partsPerBeat)\r\n                if ((modPlayhead>=noteStart)&&this._doc.prefs.notesFlashWhenPlayed) {\r\n                    const dist = noteEnd-noteStart\r\n                    element.style.opacity = String((1-(((modPlayhead-noteStart)-(dist/2))/(dist/2))))\r\n                } else {\r\n                    element.style.opacity = \"0\"\r\n                }\r\n            }\r\n\r\n            if (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n                this._playheadX = modPlayhead;\r\n            } else {\r\n                this._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n            }\r\n            this._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n        } else {\r\n            this._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\r\n            //lazy fix boohoo\r\n            for (var i = 0; i < noteFlashElements.length; i++) {\r\n                var element: SVGPathElement = noteFlashElements[i];\r\n                element.style.opacity = \"0\"\r\n            }\r\n        }\r\n\r\n        if (this._doc.synth.playing && (this._doc.synth.recording || this._doc.prefs.autoFollow) && this._followPlayheadBar != playheadBar) {\r\n            // When autofollow is enabled, select the current bar (but don't record it in undo history).\r\n            new ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\r\n            this._doc.notifier.notifyWatchers();\r\n        }\r\n        this._followPlayheadBar = playheadBar;\r\n\r\n        if (this._doc.currentPatternIsDirty) {\r\n            this._redrawNotePatterns();\r\n        }\r\n\r\n        window.requestAnimationFrame(this._animatePlayhead);\r\n    }\r\n\r\n    private _whenMouseOver = (event: MouseEvent): void => {\r\n        if (this._mouseOver) return;\r\n        this._mouseOver = true;\r\n        this._usingTouch = false;\r\n    }\r\n\r\n    private _whenMouseOut = (event: MouseEvent): void => {\r\n        if (!this._mouseOver) return;\r\n        this._mouseOver = false;\r\n    }\r\n\r\n    private _whenMousePressed = (event: MouseEvent): void => {\r\n        event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._usingTouch = false;\r\n        this._shiftHeld = event.shiftKey;\r\n        this._dragConfirmed = false;\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    private _whenTouchPressed = (event: TouchEvent): void => {\r\n        event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._usingTouch = true;\r\n        this._shiftHeld = event.shiftKey;\r\n        this._dragConfirmed = false;\r\n        this._touchTime = performance.now();\r\n        this._whenCursorPressed();\r\n    }\r\n\r\n    \r\n    // For a given change type, check the modulator channels for a matching mod to the changed parameter. If it exists, add a pin onto the latest note, or make a new note if enough time elapsed since the last pin. \r\n    public setModSettingsForChange(change: any, songEditor: SongEditor): boolean {\r\n        const thisRef: PatternEditor = this;\r\n        const timeQuantum = Math.max(4, (Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat));\r\n        const currentBar: number = Math.floor(this._doc.synth.playhead);\r\n        const realPart: number = this._doc.synth.getCurrentPart();\r\n        let changedPatterns: boolean = false;\r\n\r\n        // Ceiling is applied usually to give the synth time to catch the mod updates, but rounds to 0 to avoid skipping the first part.\r\n        const currentPart: number = (realPart < timeQuantum / 2 ) ? 0 : Math.ceil(realPart / timeQuantum) * timeQuantum;\r\n\r\n        // For a given setting and a given channel, find the instrument and mod number that influences the setting.\r\n        function getMatchingInstrumentAndMod(applyToMod: number, modChannel: Channel, modInsIndex?: number | undefined, modFilterIndex?: number | undefined): number[] {\r\n            let startIndex: number = (modInsIndex == undefined) ? 0 : modInsIndex;\r\n            let endIndex: number = (modInsIndex == undefined) ? modChannel.instruments.length - 1 : modInsIndex;\r\n            for (let instrumentIndex: number = startIndex; instrumentIndex <= endIndex; instrumentIndex++ ) {\r\n                let instrument: Instrument = modChannel.instruments[instrumentIndex];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    // Non-song application\r\n                    if ( instrument.modulators[mod] == applyToMod && !Config.modulators[instrument.modulators[mod]].forSong && (instrument.modChannels[mod] == thisRef._doc.channel) ) {\r\n                        // This is a check if the instrument targeted is relevant. Is it the exact one being edited? An \"all\" or \"active\" target?\r\n                        // For \"active\" target it doesn't check if the instrument is active, allowing write to other active instruments from an inactive one. Should be fine since audibly while writing you'll hear what you'd expect -\r\n                        // the current channel's active instruments being modulated, which is what most people would expect even if editing an inactive instrument.\r\n                        if (  thisRef._doc.getCurrentInstrument() == instrument.modInstruments[mod]\r\n                            || instrument.modInstruments[mod] >= thisRef._doc.song.channels[thisRef._doc.channel].instruments.length )\r\n                        {\r\n                            // If it's an eq/note filter target, one additional step is performed to see if it matches the right modFilterType.\r\n                            if (modFilterIndex != undefined && (applyToMod == Config.modulators.dictionary[\"eq filter\"].index || applyToMod == Config.modulators.dictionary[\"note filter\"].index)) {\r\n                                if (instrument.modFilterTypes[mod] == modFilterIndex)\r\n                                    return [instrumentIndex, mod];\r\n                            }\r\n                            else\r\n                                return [instrumentIndex, mod];\r\n                        }\r\n                    }\r\n                    // Song wide application\r\n                    else if ( instrument.modulators[mod] == applyToMod && Config.modulators[instrument.modulators[mod]].forSong && (instrument.modChannels[mod] == -1) ) {\r\n                        return [instrumentIndex, mod];\r\n                    }\r\n                }\r\n            }\r\n            return [-1, -1];\r\n        }\r\n\r\n        // For the given duration, scans through and removes pins and notes that are within. If two pins of a note cross the interval boundary, the interior pin is moved to the boundary.\r\n        function sanitizeInterval(doc: SongDocument, startPart: number, endPart: number, pattern: Pattern, forMod: number, sequence: ChangeSequence) {\r\n            if (startPart >= endPart) return;\r\n            for (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n                const note: Note = pattern.notes[noteIndex];\r\n                if (note.pitches[0] != forMod)\r\n                    continue;\r\n                if (note.start < endPart && note.end > startPart) {\r\n                    let couldIntersectStart: boolean = false;\r\n                    let intersectsEnd: boolean = false;\r\n                    let firstInteriorPin: number = -1;\r\n                    let interiorPinCount: number = 0;\r\n\r\n                    // The interval is spanned by the entire note. Just process internal pins, then done.\r\n                    if (note.start <= startPart && note.end >= endPart) {\r\n                        for (let pinIndex: number = 0; pinIndex < note.pins.length; pinIndex++) {\r\n                            const pin: NotePin = note.pins[pinIndex];\r\n                            if (note.start + pin.time > startPart && note.start + pin.time < endPart) {\r\n                                if (firstInteriorPin < 0)\r\n                                    firstInteriorPin = pinIndex;\r\n                                interiorPinCount++;\r\n                            }\r\n                        }\r\n                        // Splice pins inside the interval.\r\n                        if (interiorPinCount > 0)\r\n                            note.pins.splice(firstInteriorPin, interiorPinCount);\r\n                        return;\r\n                    }\r\n\r\n                    for (let pinIndex: number = 0; pinIndex < note.pins.length; pinIndex++) {\r\n                        const pin: NotePin = note.pins[pinIndex];\r\n                        if (note.start + pin.time >= startPart && note.start + pin.time <= endPart) {\r\n                            if (firstInteriorPin < 0)\r\n                                firstInteriorPin = pinIndex;\r\n                            interiorPinCount++;\r\n                        }\r\n                        else {\r\n                            if (interiorPinCount == 0)\r\n                                couldIntersectStart = true;\r\n                            if (interiorPinCount > 0)\r\n                                intersectsEnd = true;\r\n                        }\r\n                    }\r\n                    if (couldIntersectStart && interiorPinCount > 0) {\r\n                        note.pins[firstInteriorPin].time = startPart - note.start;\r\n                        firstInteriorPin++; interiorPinCount--;\r\n                    }\r\n                    if (intersectsEnd && interiorPinCount > 0) {\r\n                        note.pins[firstInteriorPin + interiorPinCount - 1].time = endPart - note.start;\r\n                        interiorPinCount--;\r\n                    }\r\n\r\n                    // Splice pins inside the interval.\r\n                    note.pins.splice(firstInteriorPin, interiorPinCount);\r\n\r\n                    if (note.pins.length < 2) {\r\n                        sequence.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n                        noteIndex--;\r\n                        continue;\r\n                    }\r\n\r\n                    // Clean up properties.\r\n                    let timeAdjust: number = 0;\r\n                    timeAdjust = note.pins[0].time;\r\n                    note.start += timeAdjust;\r\n                    for (let i: number = 0; i < note.pins.length; i++) {\r\n                        note.pins[i].time -= timeAdjust;\r\n                    }\r\n                    note.end = note.start + note.pins[note.pins.length - 1].time;\r\n\r\n                    if (note.end <= note.start) {\r\n                        sequence.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n                        noteIndex--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const sequence: ChangeSequence = new ChangeSequence();\r\n\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        let applyToMods: number[] = [];\r\n        let applyToFilterTargets: number[] = [];\r\n        let applyValues: number[] = [];\r\n        let toApply: boolean = true;\r\n        let slider: Slider | null = null;\r\n\r\n        // Special case, treat null change as Song volume.\r\n        if (change == null) {\r\n            var modulator = Config.modulators.dictionary[\"song volume\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(this._doc.prefs.volume - modulator.convertRealFactor);\r\n        }\r\n        else if (change instanceof ChangeTempo) {\r\n            var modulator = Config.modulators.dictionary[\"tempo\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(this._doc.song.tempo - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                this._doc.song.tempo = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        /* Song reverb - a casualty of splitting to reverb per instrument, it's not modulate-able via slider!\r\n        else if (change instanceof ChangeSongReverb) { } */\r\n        else if (change instanceof ChangeVolume) {\r\n            var modulator = Config.modulators.dictionary[\"mix volume\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.volume - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null )\r\n                instrument.volume = slider.getValueBeforeProspectiveChange();\r\n        }\r\n        else if (change instanceof ChangePan) {\r\n            var modulator = Config.modulators.dictionary[\"pan\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.pan - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.pan = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeReverb) {\r\n            var modulator = Config.modulators.dictionary[\"reverb\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.reverb - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.reverb = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeDistortion) {\r\n            var modulator = Config.modulators.dictionary[\"distortion\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.distortion - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.distortion = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeOperatorAmplitude) {\r\n            var modulator = Config.modulators.dictionary[\"fm slider \" + (change.operatorIndex + 1)];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.operators[change.operatorIndex].amplitude - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.operators[change.operatorIndex].amplitude = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeFeedbackAmplitude) {\r\n            var modulator = Config.modulators.dictionary[\"fm feedback\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.feedbackAmplitude - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.feedbackAmplitude = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangePulseWidth) {\r\n            var modulator = Config.modulators.dictionary[\"pulse width\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.pulseWidth - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.pulseWidth = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeDetune) {\r\n            var modulator = Config.modulators.dictionary[\"detune\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.detune - modulator.convertRealFactor - Config.detuneCenter);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.detune = slider.getValueBeforeProspectiveChange() + Config.detuneCenter;\r\n            }\r\n        }\r\n        else if (change instanceof ChangeVibratoDepth) {\r\n            var modulator = Config.modulators.dictionary[\"vibrato depth\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.vibratoDepth * 25 - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if ( slider != null ) {\r\n                instrument.vibratoDepth = slider.getValueBeforeProspectiveChange() / 25;\r\n            }\r\n        }\r\n        else if (change instanceof ChangeVibratoSpeed) {\r\n            var modulator = Config.modulators.dictionary[\"vibrato speed\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.vibratoSpeed - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.vibratoSpeed = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeVibratoDelay) {\r\n            var modulator = Config.modulators.dictionary[\"vibrato delay\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.vibratoDelay - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.vibratoDelay = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeArpeggioSpeed) {\r\n            var modulator = Config.modulators.dictionary[\"arp speed\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.arpeggioSpeed - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.arpeggioSpeed = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangePanDelay) {\r\n            var modulator = Config.modulators.dictionary[\"pan delay\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.panDelay - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.panDelay = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeSequence && change.checkFirst() instanceof ChangeFilterMovePoint && !change.isCommitted()) {\r\n            // Pushes some pieces of data in each array, to be handled individually down below.\r\n            //   applyToMods:\r\n            //     mod index for eqFilter||noteFilter\r\n            //     mod index for eqFilter||noteFilter\r\n            //   applyValues:\r\n            //     new freq\r\n            //     new gain\r\n            //   applyToFilterTargets:\r\n            //     modFilterTarget freq index (X)\r\n            //     modFilterTarget gain index (Y)\r\n            //\r\n            const useChange: ChangeFilterMovePoint = change.checkFirst() as ChangeFilterMovePoint;\r\n            const preMoveData: FilterMoveData = useChange.getMoveData(true);\r\n            const postMoveData: FilterMoveData = useChange.getMoveData(false);\r\n            let useFilter: FilterSettings = instrument.eqFilter;\r\n            var modulatorIndex;\r\n\r\n            if (useChange.useNoteFilter) {\r\n                modulatorIndex = Config.modulators.dictionary[\"note filter\"].index;\r\n                useFilter = instrument.noteFilter;\r\n\r\n                if (instrument.tmpNoteFilterEnd == null) {\r\n                    instrument.tmpNoteFilterStart = new FilterSettings();\r\n                    instrument.tmpNoteFilterStart.fromJsonObject(instrument.noteFilter.toJsonObject());\r\n                    instrument.tmpNoteFilterEnd = instrument.tmpNoteFilterStart;\r\n                }\r\n\r\n                const modifyPoint: FilterControlPoint | null = instrument.tmpNoteFilterEnd.controlPoints[useChange.pointIndex];\r\n                if (modifyPoint != null && modifyPoint.type == useChange.pointType) {\r\n                    modifyPoint.freq = postMoveData.freq;\r\n                    modifyPoint.gain = postMoveData.gain;\r\n                }\r\n            }\r\n            else {\r\n                modulatorIndex = Config.modulators.dictionary[\"eq filter\"].index;\r\n\r\n                if (instrument.tmpEqFilterEnd == null) {\r\n                    instrument.tmpEqFilterStart = new FilterSettings();\r\n                    instrument.tmpEqFilterStart.fromJsonObject(instrument.eqFilter.toJsonObject());\r\n                    instrument.tmpEqFilterEnd = instrument.tmpEqFilterStart;\r\n                }\r\n\r\n                const modifyPoint: FilterControlPoint | null = instrument.tmpEqFilterEnd.controlPoints[useChange.pointIndex];\r\n                if (modifyPoint != null && modifyPoint.type == useChange.pointType) {\r\n                    modifyPoint.freq = postMoveData.freq;\r\n                    modifyPoint.gain = postMoveData.gain;\r\n                }\r\n            }\r\n\r\n            applyToMods.push(modulatorIndex);\r\n            applyToMods.push(modulatorIndex);\r\n            if (toApply) applyValues.push(postMoveData.freq);\r\n            if (toApply) applyValues.push(postMoveData.gain);\r\n\r\n            // ModFilterTypes indices, one each for X/Y.\r\n            applyToFilterTargets.push(1 + useChange.pointIndex * 2);\r\n            applyToFilterTargets.push(1 + useChange.pointIndex * 2 + 1);\r\n\r\n            // Reset the original point, if it was the instrument's default eq/note filter.\r\n            for (let i: number = 0; i < useFilter.controlPointCount; i++) {\r\n                var point = useFilter.controlPoints[i];\r\n                if (Object.is(point, preMoveData.point)) {\r\n                    // Reset the filter point to its previous value, as just the mods are being changed.\r\n                    point.freq = preMoveData.freq;\r\n                    point.gain = preMoveData.gain;\r\n                }\r\n            }\r\n            \r\n        }\r\n        else if (change instanceof ChangeBitcrusherQuantization) {\r\n            var modulator = Config.modulators.dictionary[\"bit crush\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.bitcrusherQuantization - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.bitcrusherQuantization = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeBitcrusherFreq) {\r\n            var modulator = Config.modulators.dictionary[\"freq crush\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.bitcrusherFreq - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.bitcrusherFreq = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeEchoSustain) {\r\n            var modulator = Config.modulators.dictionary[\"echo\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.echoSustain - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.echoSustain = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeChorus) {\r\n            var modulator = Config.modulators.dictionary[\"chorus\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.chorus - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.chorus = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeEQFilterSimpleCut) {\r\n            var modulator = Config.modulators.dictionary[\"eq filt cut\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.eqFilterSimpleCut - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.eqFilterSimpleCut = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeEQFilterSimplePeak) {\r\n            var modulator = Config.modulators.dictionary[\"eq filt peak\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.eqFilterSimplePeak - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.eqFilterSimplePeak = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeNoteFilterSimpleCut) {\r\n            var modulator = Config.modulators.dictionary[\"note filt cut\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.noteFilterSimpleCut - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.noteFilterSimpleCut = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeNoteFilterSimplePeak) {\r\n            var modulator = Config.modulators.dictionary[\"note filt peak\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.noteFilterSimplePeak - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.noteFilterSimplePeak = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangePitchShift) {\r\n            var modulator = Config.modulators.dictionary[\"pitch shift\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.pitchShift - Config.pitchShiftCenter - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.pitchShift = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeStringSustain) {\r\n            var modulator = Config.modulators.dictionary[\"sustain\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.stringSustain - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.stringSustain = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeEnvelopeSpeed) {\r\n            var modulator = Config.modulators.dictionary[\"envelope speed\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.envelopeSpeed - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.envelopeSpeed = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeSupersawDynamism) {\r\n            var modulator = Config.modulators.dictionary[\"dynamism\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.supersawDynamism - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.supersawDynamism = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeSupersawSpread) {\r\n            var modulator = Config.modulators.dictionary[\"spread\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.supersawSpread - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.supersawSpread = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n        else if (change instanceof ChangeSupersawShape) {\r\n            var modulator = Config.modulators.dictionary[\"saw shape\"];\r\n            applyToMods.push(modulator.index);\r\n            if (toApply) applyValues.push(instrument.supersawShape - modulator.convertRealFactor);\r\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\r\n            slider = songEditor.getSliderForModSetting(modulator.index);\r\n            if (slider != null) {\r\n                instrument.supersawShape = slider.getValueBeforeProspectiveChange();\r\n            }\r\n        }\r\n\r\n        for (let applyIndex: number = 0; applyIndex < applyValues.length; applyIndex++) {\r\n            applyValues[applyIndex] = Math.round(applyValues[applyIndex]);\r\n        }\r\n\r\n        // Held value from previous call. Used to record flat durations/notes.\r\n        if (this._doc.continuingModRecordingChange != null && applyToFilterTargets.length == 0) {\r\n            if (slider == null && this._doc.continuingModRecordingChange.storedSlider != null)\r\n                slider = this._doc.continuingModRecordingChange.storedSlider;\r\n            if (slider != null && +slider.input.value == slider.getValueBeforeProspectiveChange()) {\r\n                applyValues = this._doc.continuingModRecordingChange.storedValues!;\r\n                toApply = false;\r\n            }\r\n            this._doc.continuingModRecordingChange = null;\r\n        }\r\n\r\n        // Set the slider back to its previous value.\r\n        if ( slider != null )\r\n            slider.updateValue(slider.getValueBeforeProspectiveChange());\r\n\r\n        for (let applyIndex: number = 0; applyIndex < applyToMods.length; applyIndex++ ) {\r\n            // Search the current bar (and only the current bar) for active instruments (and only active instruments) matching to the related mod to apply to.\r\n            let usedPatterns: Pattern[] = [];\r\n            let usedInstruments: Instrument[] = [];\r\n            let usedInstrumentIndices: number[] = [];\r\n            let usedModIndices: number[] = [];\r\n\r\n            for (let channelIndex: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\r\n                const channel: Channel = this._doc.song.channels[channelIndex];\r\n                let pattern: Pattern | null = this._doc.song.getPattern(channelIndex, currentBar);\r\n                let useInstrumentIndex: number = 0;\r\n                let useModIndex: number = 0;\r\n\r\n                if ( pattern == null ) {\r\n                    // Hunt for instrument matching this setting and swap to it.\r\n                    var rtn;\r\n                    if (applyToFilterTargets.length > applyIndex)\r\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel, undefined, applyToFilterTargets[applyIndex]);\r\n                    else\r\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel);\r\n                    useInstrumentIndex = rtn[0];\r\n                    useModIndex = rtn[1];\r\n\r\n                    // Found it in this channel, but the pattern doesn't exist. So, add a new pattern and swap to that instrument.\r\n                    if (useInstrumentIndex != -1) {\r\n                        sequence.append(new ChangeEnsurePatternExists(this._doc, channelIndex, currentBar));\r\n                        new ChangeDuplicateSelectedReusedPatterns(this._doc, currentBar, 1, channelIndex, 1);\r\n\r\n                        pattern = this._doc.song.getPattern(channelIndex, currentBar)!;\r\n                    \r\n                        pattern.instruments[0] = useInstrumentIndex;\r\n\r\n                        changedPatterns = true;\r\n                    }\r\n                }\r\n                else {\r\n                    var rtn;\r\n                    if (applyToFilterTargets.length > applyIndex)\r\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel, pattern.instruments[0], applyToFilterTargets[applyIndex]);\r\n                    else\r\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel, pattern.instruments[0]);\r\n                    useInstrumentIndex = rtn[0];\r\n                    useModIndex = rtn[1];\r\n\r\n                    if (useInstrumentIndex != -1) {\r\n                        new ChangeDuplicateSelectedReusedPatterns(this._doc, currentBar, 1, channelIndex, 1);\r\n                        pattern = this._doc.song.getPattern(channelIndex, currentBar);\r\n\r\n                        changedPatterns = true;\r\n                    }\r\n                }\r\n\r\n                if (useInstrumentIndex != -1) {\r\n                    // Found the appropriate mod channel's mod instrument, mod number, and the pattern to modify (useInstrumentIndex, useModIndex, and pattern respectively).\r\n                    // Note these as needing modification, but continue on until all channels are checked.\r\n                    usedPatterns.push(pattern!);\r\n                    usedInstrumentIndices.push(useInstrumentIndex);\r\n                    usedInstruments.push(channel.instruments[useInstrumentIndex]);\r\n                    usedModIndices.push(useModIndex);\r\n                }\r\n            }\r\n\r\n            // If the setting wasn't found in any channel or instruments, add it to the first unused slot in any channel.\r\n            if ( usedInstrumentIndices.length == 0 ) {\r\n                for (let channelIndex: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = this._doc.song.channels[channelIndex];\r\n                    let pattern: Pattern | null = this._doc.song.getPattern(channelIndex, currentBar);\r\n                    let useInstrument: number = -1;\r\n                    // If there's a pattern for this channel in this bar, it only makes sense to add the new slot in that instrument somewhere or give up and move to the next.\r\n                    if ( pattern != null ) {\r\n                        useInstrument = pattern.instruments[0];\r\n                    }\r\n                    // No pattern for this channel, so check through all the instruments for a free slot, and add a pattern if there's a free one.\r\n                    else {\r\n                        for ( let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++ ) {\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++ ) {\r\n                                if ( channel.instruments[instrumentIndex].modulators[mod] == Config.modulators.dictionary[\"none\"].index ) {\r\n                                    useInstrument = instrumentIndex;\r\n\r\n                                    sequence.append(new ChangeEnsurePatternExists(this._doc, channelIndex, currentBar));\r\n                    \r\n                                    pattern = this._doc.song.getPattern(channelIndex, currentBar)!;\r\n                    \r\n                                    pattern.instruments[0] = instrumentIndex;\r\n\r\n                                    mod = Config.modCount;\r\n                                    instrumentIndex = channel.instruments.length;\r\n                                    channelIndex = this._doc.song.getChannelCount();\r\n\r\n                                    changedPatterns = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Found a suitable instrument to use, now add the setting\r\n                    if ( useInstrument != -1 ) {\r\n                        let instrument: Instrument = channel.instruments[useInstrument];\r\n                        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                            if ( instrument.modulators[mod] == Config.modulators.dictionary[\"none\"].index ) {\r\n                                instrument.modulators[mod] = applyToMods[applyIndex];\r\n                                if ( Config.modulators[applyToMods[applyIndex]].forSong ) {\r\n                                    instrument.modChannels[mod] = -1; // Song\r\n                                }\r\n                                else {\r\n                                    instrument.modChannels[mod] = this._doc.channel;\r\n                                    // Set these new ones to \"active\" modulation for the most flexibility, if there's more one instrument in the channel.\r\n                                    if (this._doc.song.channels[this._doc.channel].instruments.length > 1)\r\n                                        instrument.modInstruments[mod] = this._doc.song.channels[this._doc.channel].instruments.length + 1;\r\n                                    else\r\n                                        instrument.modInstruments[mod] = 0;\r\n\r\n                                    // Filter dot. Add appropriate filter target settings (dot# X and dot# Y mod).\r\n                                    if (applyToFilterTargets.length > applyIndex) {\r\n                                        instrument.modFilterTypes[mod] = applyToFilterTargets[applyIndex];\r\n                                    }\r\n                                }\r\n\r\n                                usedPatterns.push(pattern!);\r\n                                usedInstrumentIndices.push(useInstrument);\r\n                                usedInstruments.push(instrument);\r\n                                usedModIndices.push(mod);\r\n\r\n                                mod = Config.modCount; channelIndex = this._doc.song.getChannelCount(); // Skip after finding one\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Now, finally, go through all the used patterns/instruments/mods and add appropriate pins\r\n            for (let i: number = 0; i < usedPatterns.length; i++) {\r\n\r\n                // When recording filter dots, have a longer minimum duration to lessen the chance of fighting with active morph mods.\r\n                const addLength: number = (applyToFilterTargets.length == 0) ? 0 : 24;\r\n\r\n                // The distance before previous notes won't be extended and a new one will be created instead. A bit longer at large time quanta since the chance of missing the end of a note is higher.\r\n                const newNoteDist: number = +(timeQuantum >= 6) * 6 + 12;\r\n\r\n                let latestPart: number = -1;\r\n                let latestNote: Note | null = null;\r\n                let latestPin: NotePin | null = null;\r\n                let latestPinIdx: number = -1;\r\n\r\n                let prevNotePart: number = -1;\r\n                let prevNote: Note | null = null;\r\n\r\n                // Debug, get an unaltered copy of the current pattern (usedPatterns[i]) for comparison if an error is thrown down below.\r\n                let patternCopy: Pattern = JSON.parse(JSON.stringify(usedPatterns[i].notes));\r\n          \r\n                // Explicitly set the mod to the applied value, just in case the note we add isn't picked up in the next synth run.\r\n                const modNoteIndex: number = Config.modCount - 1 - usedModIndices[i];\r\n                const usedInstrument: Instrument = usedInstruments[i];\r\n                if ( usedInstrument.modChannels[usedModIndices[i]] >= -1 ) {\r\n                    // Generate list of used instruments\r\n                    let usedNewInstrumentIndices: number[] = [];\r\n                    if (Config.modulators[applyToMods[applyIndex]].forSong) {\r\n                        // Instrument doesn't matter for song, just push a random index to run the modsynth once\r\n                        usedNewInstrumentIndices.push(0);\r\n                    } else {\r\n                        // All\r\n                        if (usedInstrument.modInstruments[usedModIndices[i]] == this._doc.synth.song!.channels[usedInstrument.modChannels[usedModIndices[i]]].instruments.length) {\r\n                            for (let k: number = 0; k < this._doc.synth.song!.channels[usedInstrument.modChannels[usedModIndices[i]]].instruments.length; k++) {\r\n                                usedNewInstrumentIndices.push(k);\r\n                            }\r\n                        }\r\n                        // Active\r\n                        else if (usedInstrument.modInstruments[usedModIndices[i]] > this._doc.synth.song!.channels[usedInstrument.modChannels[usedModIndices[i]]].instruments.length) {\r\n                            if (this._doc.synth.song!.getPattern(usedInstrument.modChannels[usedModIndices[i]], currentBar) != null)\r\n                                usedNewInstrumentIndices = this._doc.synth.song!.getPattern(usedInstrument.modChannels[usedModIndices[i]], currentBar)!.instruments;\r\n                        } else {\r\n                            usedNewInstrumentIndices.push(usedInstrument.modInstruments[usedModIndices[i]]);\r\n                        }\r\n                    }\r\n\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < usedNewInstrumentIndices.length; instrumentIndex++) {\r\n                        this._doc.synth.setModValue(applyValues[applyIndex], applyValues[applyIndex], usedInstruments[i].modChannels[usedModIndices[i]], usedNewInstrumentIndices[instrumentIndex], applyToMods[applyIndex] );\r\n                        this._doc.synth.forceHoldMods(applyValues[applyIndex], usedInstruments[i].modChannels[usedModIndices[i]], usedNewInstrumentIndices[instrumentIndex], applyToMods[applyIndex]);\r\n                    }\r\n                }\r\n                \r\n                // Scan for a note starting around this point.\r\n                for ( let j: number = 0; j < usedPatterns[i].notes.length; j++ ) {\r\n                    const note: Note = usedPatterns[i].notes[j];\r\n                    if ( note.pitches[0] == modNoteIndex && note.start <= currentPart ) {\r\n                        // Find latest pin that doesn't exceed this part.\r\n                        for (let pinIdx: number = 0; pinIdx < note.pins.length; pinIdx++ ) {\r\n                            const pin: NotePin = note.pins[pinIdx];\r\n                            // Special case in there to prioritize picking the start of a note over the end of another (though they share the same time).\r\n                            if ( note.start + pin.time <= currentPart && (note.start + pin.time > latestPart || (note.start == latestPart) ) ) {\r\n                                latestPart = note.start + pin.time;\r\n                                latestPin = pin;\r\n                                latestPinIdx = pinIdx;\r\n                                latestNote = note;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (note.pitches[0] == modNoteIndex && note.end <= currentPart && note.end > prevNotePart) {\r\n                        prevNotePart = note.end;\r\n                        prevNote = note;\r\n                    }\r\n                }\r\n\r\n                let prevPart: number = Math.max(0, currentPart - timeQuantum);\r\n                let endPart: number = Math.min(currentPart + timeQuantum + addLength, Config.partsPerBeat * this._doc.song.beatsPerBar);\r\n\r\n                let continuous: boolean = (toApply == false);\r\n\r\n                // Make a new note if enough time has elapsed since the prior note.\r\n                if (latestNote == null || currentPart - latestNote.end >= newNoteDist) {\r\n                    // At end, so unable to make a new note.\r\n                    if (currentPart == endPart)\r\n                        continue;\r\n                    sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\r\n                    latestNote = new Note(modNoteIndex, currentPart, endPart, applyValues[applyIndex], this._doc.song.getChannelIsNoise(this._doc.channel));\r\n                    sequence.append(new ChangeNoteAdded(this._doc, usedPatterns[i], latestNote, usedPatterns[i].notes.length));\r\n                }\r\n                else if (latestPart == currentPart) {\r\n                    sanitizeInterval(this._doc, prevPart, currentPart, usedPatterns[i], modNoteIndex, sequence);\r\n                    sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\r\n\r\n                    latestPin!.size = applyValues[applyIndex];\r\n\r\n                    if (continuous) {\r\n                        for (let usePin: number = 0; usePin < latestNote.pins.length; usePin++) {\r\n                            if (latestNote.pins[usePin].time >= prevPart && latestNote.pins[usePin].time <= currentPart)\r\n                                latestNote.pins[usePin].size = applyValues[applyIndex];\r\n                        }\r\n                    }\r\n\r\n                    if (prevNote != null && prevNote.pins.length >= 2) {\r\n                        // Directly update the overlapping pin.\r\n                        if (prevNote.end == currentPart) {\r\n                            prevNote.pins[prevNote.pins.length - 1].size = applyValues[applyIndex];\r\n\r\n                            if (continuous) {\r\n                                for (let usePin: number = 0; usePin < prevNote.pins.length; usePin++) {\r\n                                    if (prevNote.pins[usePin].time + prevNote.start >= prevPart)\r\n                                        prevNote.pins[usePin].size = applyValues[applyIndex];\r\n                                }\r\n                            }\r\n                        }\r\n                        // Bridge the gap from previous note to this.\r\n                        else if (prevNote.end == prevPart && latestNote.start == currentPart) {\r\n                            prevNote.pins.push(makeNotePin(0, currentPart - prevNote.start, applyValues[applyIndex]));\r\n                            prevNote.end = currentPart;\r\n                        }\r\n                    }\r\n                }\r\n                else if (currentPart - latestPart < 8 && latestNote.pins[latestPinIdx].size == applyValues[applyIndex]) {\r\n                    // Don't record flat readings, prefer smooth interpolation.\r\n                    // But, we'll still smooth out previous pins if we're continuously holding.\r\n                    if (continuous) {\r\n                        for (let usePin: number = 0; usePin < latestNote.pins.length; usePin++) {\r\n                            if ( latestNote.pins[usePin].time >= prevPart && latestNote.pins[usePin].time <= currentPart)\r\n                            latestNote.pins[usePin].size = applyValues[applyIndex];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Insert a pin in the current note.\r\n                    if (latestNote.pins.length - 1 > latestPinIdx) {\r\n                        sanitizeInterval(this._doc, prevPart, currentPart, usedPatterns[i], modNoteIndex, sequence);\r\n                        sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\r\n\r\n                        // Sanitization can cause a pin to snap to the insertion point. If so, use it instead.\r\n                        let k: number;\r\n                        let usePin: NotePin | null = null;\r\n                        for (k = 0; k < latestNote.pins.length; k++) {\r\n                            if (latestNote.pins[k].time == currentPart - latestNote.start) {\r\n                                usePin = latestNote.pins[k];\r\n                                break;\r\n                            }\r\n                            else if (latestNote.pins[k].time > currentPart - latestNote.start)\r\n                                break;\r\n                        }\r\n                        if (usePin != null)\r\n                            usePin.size = applyValues[applyIndex];\r\n                        else\r\n                            latestNote.pins.splice(k, 0, makeNotePin(0, currentPart - latestNote.start, applyValues[applyIndex]));\r\n                    }\r\n                    // Push a new pin at the end of the note.\r\n                    else {\r\n                        sanitizeInterval(this._doc, prevPart, currentPart, usedPatterns[i], modNoteIndex, sequence);\r\n                        sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\r\n                        latestNote.pins.push(makeNotePin(0, currentPart - latestNote.start, applyValues[applyIndex]));\r\n                        latestNote.end = currentPart;\r\n                    }\r\n\r\n                    if (continuous) {\r\n                        for (let usePin: number = 0; usePin < latestNote.pins.length; usePin++) {\r\n                            if ( latestNote.pins[usePin].time >= prevPart && latestNote.pins[usePin].time <= currentPart)\r\n                            latestNote.pins[usePin].size = applyValues[applyIndex];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // A few sanity checks.\r\n                let lastNoteEnds: number[] = [-1, -1, -1, -1, -1, -1];\r\n                patternCopy = patternCopy;\r\n                usedPatterns[i].notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                for (let checkIndex: number = 0; checkIndex < usedPatterns[i].notes.length; checkIndex++) {\r\n                    const note: Note = usedPatterns[i].notes[checkIndex];\r\n                    if (note.start < lastNoteEnds[note.pitches[0]])\r\n                        throw new Error(\"Error in mod note recording!\");\r\n                    lastNoteEnds[note.pitches[0]] = note.end;\r\n                    if (note.pins.length < 2 || note.pins[0].time > 0 || note.start == note.end\r\n                        || note.pins[note.pins.length - 1].time != note.end - note.start) {\r\n                        throw new Error(\"Error in mod note recording!\");\r\n                    }\r\n                    let latestPinTime: number = -1;\r\n                    for (let k: number = 0; k < note.pins.length; k++) {\r\n                        if (note.pins[k].time <= latestPinTime) {\r\n                            throw new Error(\"Error in mod note recording!\");\r\n                        }\r\n                        latestPinTime = note.pins[k].time;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Re-render mod pattern since it may have new notes in it (e.g. if editing song mods from mod channel)\r\n        if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            this._doc.currentPatternIsDirty = true;\r\n        }\r\n\r\n        if (applyValues.length > 0) {\r\n            //this._doc.record(sequence);\r\n            this._doc.continuingModRecordingChange = new ChangeHoldingModRecording(this._doc, change, applyValues, slider);\r\n        }\r\n\r\n        return changedPatterns;\r\n    }\r\n\r\n    public stopEditingModLabel(discardChanges: boolean) {\r\n        if (this.editingModLabel) {\r\n            this.editingModLabel = false;\r\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n            if (window.getSelection) {\r\n                let sel: Selection | null = window.getSelection();\r\n                if (sel != null)\r\n                    sel.removeAllRanges();\r\n            }\r\n            // Return pin to its state before text editing\r\n            if (discardChanges) {\r\n                this._modDragPin.size = this._modDragStartValue;\r\n\r\n                let presValue: number = this._modDragStartValue + Config.modulators[this._modDragSetting].convertRealFactor;\r\n\r\n                // This is me being too lazy to fiddle with the css to get it to align center.\r\n                let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n                this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n                this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n                const sequence: ChangeSequence = new ChangeSequence();\r\n                this._dragChange = sequence;\r\n                this._doc.setProspectiveChange(this._dragChange);\r\n\r\n                sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n                this._dragChange = null;\r\n            }\r\n\r\n            const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n            if (continuousState) {\r\n                if (this._dragChange != null) {\r\n                    this._doc.record(this._dragChange);\r\n                    this._dragChange = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenCursorPressed(): void {\r\n        // Check for click on mod value label\r\n        if (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n            this._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n            this._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n            this._mouseY > +this._modDragValueLabelTop - 8 &&\r\n            this._mouseY < +this._modDragValueLabelTop + 11) {\r\n            // Mod value label clicked, select it\r\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n            if (window.getSelection) {\r\n                let sel: Selection | null = window.getSelection();\r\n                if (sel != null)\r\n                    sel.selectAllChildren(this.modDragValueLabel);\r\n            }\r\n\r\n            window.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n            this.editingModLabel = true;\r\n        } else {\r\n            this.stopEditingModLabel(false);\r\n            if (this._doc.prefs.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n            this._mouseDown = true;\r\n            this._mouseXStart = this._mouseX;\r\n            this._mouseYStart = this._mouseY;\r\n            this._updateCursorStatus();\r\n            this._updatePreview();\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            if (this._cursorAtStartOfSelection()) {\r\n                this._draggingStartOfSelection = true;\r\n            } else if (this._cursorAtEndOfSelection()) {\r\n                this._draggingEndOfSelection = true;\r\n            } else if (this._shiftHeld) {\r\n                if ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n                } else {\r\n                    if (this._cursor.curNote != null) {\r\n                        sequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n                    } else {\r\n                        const start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n                        const end: number = start + Config.partsPerBeat;\r\n                        sequence.append(new ChangePatternSelection(this._doc, start, end));\r\n                    }\r\n                }\r\n            } else if (this._cursorIsInSelection()) {\r\n                this._draggingSelectionContents = true;\r\n            } else if (this._cursor.valid && this._cursor.curNote == null) {\r\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                // If clicking in empty space, the result will be adding a note,\r\n                // so we can safely add it immediately. Note that if clicking on\r\n                // or near an existing note, the result will depend on whether\r\n                // a drag follows, so we couldn't add the note yet without being\r\n                // confusing.\r\n\r\n                const note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n                note.pins = [];\r\n                for (const oldPin of this._cursor.pins) {\r\n                    note.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\r\n                }\r\n                sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                if (pattern == null) throw new Error();\r\n                sequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n                if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\r\n                    // Play the new note out loud if enabled.\r\n                    const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n                    this._doc.performance.setTemporaryPitches([this._cursor.pitch], duration);\r\n                }\r\n            }\r\n            this._updateSelection();\r\n        }\r\n    }\r\n\r\n    private _whenMouseMoved = (event: MouseEvent): void => {\r\n        this.controlMode = event.ctrlKey;\r\n        this.shiftMode = event.shiftKey;\r\n\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._usingTouch = false;\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenTouchMoved = (event: TouchEvent): void => {\r\n        if (!this._mouseDown) return;\r\n        event.preventDefault();\r\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n        if (isNaN(this._mouseX)) this._mouseX = 0;\r\n        if (isNaN(this._mouseY)) this._mouseY = 0;\r\n        this._whenCursorMoved();\r\n    }\r\n\r\n    private _whenCursorMoved(): void {\r\n        if (this._doc.prefs.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n        // HACK: Undoable pattern changes rely on persistent instance\r\n        // references. Loading song from hash via undo/redo breaks that,\r\n        // so changes are no longer undoable and the cursor status may be\r\n        // invalid. Abort further drag changes until the mouse is released.\r\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n        if (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n            const dx: number = this._mouseX - this._mouseXStart;\r\n            const dy: number = this._mouseY - this._mouseYStart;\r\n            if (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n                this._mouseDragging = true;\r\n                this._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n            }\r\n        }\r\n\r\n        if (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n            this._dragConfirmed = true;\r\n        }\r\n\r\n        if (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n            this._dragChange!.undo();\r\n            const sequence: ChangeSequence = new ChangeSequence();\r\n            this._dragChange = sequence;\r\n            this._doc.setProspectiveChange(this._dragChange);\r\n\r\n            const minDivision: number = this._getMinDivision();\r\n            const currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n            if (this._draggingStartOfSelection) {\r\n                sequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n                this._updateSelection();\r\n            } else if (this._draggingEndOfSelection) {\r\n                sequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n                this._updateSelection();\r\n            } else if (this._draggingSelectionContents) {\r\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                if (this._mouseDragging && pattern != null) {\r\n                    this._dragChange!.undo();\r\n                    const sequence: ChangeSequence = new ChangeSequence();\r\n                    this._dragChange = sequence;\r\n                    this._doc.setProspectiveChange(this._dragChange);\r\n\r\n                    const notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n                    const pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\r\n                    const draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n                    const draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n                    sequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n                }\r\n\r\n            } else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n                if (this._mouseDragging) {\r\n                    let start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n                    let end: number = start + Config.partsPerBeat;\r\n                    if (this._cursor.curNote != null) {\r\n                        start = Math.max(start, this._cursor.curNote.start);\r\n                        end = Math.min(end, this._cursor.curNote.end);\r\n                    }\r\n\r\n                    // Todo: The following two conditional blocks could maybe be refactored.\r\n                    if (currentPart < start) {\r\n                        start = 0;\r\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                        if (pattern != null) {\r\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                                if (pattern.notes[i].start <= currentPart) {\r\n                                    start = pattern.notes[i].start;\r\n                                }\r\n                                if (pattern.notes[i].end <= currentPart) {\r\n                                    start = pattern.notes[i].end;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n                            const part: number = beat * Config.partsPerBeat;\r\n                            if (start <= part && part <= currentPart) {\r\n                                start = part;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (currentPart > end) {\r\n                        end = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                        if (pattern != null) {\r\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                                if (pattern.notes[i].start >= currentPart) {\r\n                                    end = pattern.notes[i].start;\r\n                                    break;\r\n                                }\r\n                                if (pattern.notes[i].end >= currentPart) {\r\n                                    end = pattern.notes[i].end;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n                            const part: number = beat * Config.partsPerBeat;\r\n                            if (currentPart < part && part < end) {\r\n                                end = part;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    sequence.append(new ChangePatternSelection(this._doc, start, end));\r\n                    this._updateSelection();\r\n                }\r\n            } else {\r\n\r\n                if (this._cursor.curNote == null) {\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n                    let backwards: boolean;\r\n                    let directLength: number;\r\n                    if (currentPart < this._cursor.start) {\r\n                        backwards = true;\r\n                        directLength = this._cursor.start - currentPart;\r\n                    } else {\r\n                        backwards = false;\r\n                        directLength = currentPart - this._cursor.start + minDivision;\r\n                    }\r\n\r\n                    let defaultLength: number = minDivision;\r\n                    for (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n                        if (minDivision == 1) {\r\n                            if (i < 5) {\r\n                                // Allow small lengths.\r\n                            } else if (i <= Config.partsPerBeat / 2.0) {\r\n                                if (i % 3 != 0 && i % 4 != 0) {\r\n                                    continue;\r\n                                }\r\n                            } else if (i <= Config.partsPerBeat * 1.5) {\r\n                                if (i % 6 != 0 && i % 8 != 0) {\r\n                                    continue;\r\n                                }\r\n                            } else if (i % Config.partsPerBeat != 0) {\r\n                                continue;\r\n                            }\r\n                        } else {\r\n                            if (i >= 5 * minDivision &&\r\n                                i % Config.partsPerBeat != 0 &&\r\n                                i != Config.partsPerBeat * 3.0 / 4.0 &&\r\n                                i != Config.partsPerBeat * 3.0 / 2.0 &&\r\n                                i != Config.partsPerBeat * 4.0 / 3.0) {\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        const blessedLength: number = i;\r\n                        if (blessedLength == directLength) {\r\n                            defaultLength = blessedLength;\r\n                            break;\r\n                        }\r\n                        if (blessedLength < directLength) {\r\n                            defaultLength = blessedLength;\r\n                        }\r\n\r\n                        if (blessedLength > directLength) {\r\n                            if (defaultLength < directLength - minDivision) {\r\n                                defaultLength = blessedLength;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    let start: number;\r\n                    let end: number;\r\n\r\n                    if (backwards) {\r\n                        end = this._cursor.start;\r\n                        start = end - defaultLength;\r\n                    } else {\r\n                        start = this._cursor.start;\r\n                        end = start + defaultLength;\r\n                    }\r\n                    const continuesLastPattern: boolean = (start < 0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n                    if (start < 0) start = 0;\r\n                    if (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n                    if (start < end) {\r\n                        sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n                        if (pattern == null) throw new Error();\r\n                        // Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n                        let i: number;\r\n                        for (i = 0; i < pattern.notes.length; i++) {\r\n                            if (pattern.notes[i].start >= end) break;\r\n                        }\r\n                        const theNote: Note = new Note(this._cursor.pitch, start, end,\r\n                            this._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n                            this._doc.song.getChannelIsNoise(this._doc.channel));\r\n                        theNote.continuesLastPattern = continuesLastPattern;\r\n                        sequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n                        this._copyPins(theNote);\r\n\r\n                        this._dragTime = backwards ? start : end;\r\n                        this._dragPitch = this._cursor.pitch;\r\n                        this._dragSize = theNote.pins[backwards ? 0 : 1].size;\r\n                        this._dragVisible = true;\r\n                    }\r\n\r\n                    let prevPattern: Pattern | null = this._pattern;\r\n\r\n                    this._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n                    if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n                        // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                        this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                    }\r\n\r\n                } else if (this._mouseHorizontal) {\r\n\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                    const shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n                    const shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n                    let shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n                    const continuesLastPattern: boolean = (shiftedTime < 0.0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n                    if (shiftedTime < 0) shiftedTime = 0;\r\n                    if (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n                    if (this._pattern == null) throw new Error();\r\n\r\n                    if (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n                        shiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n                        this._dragVisible = false;\r\n                    } else {\r\n                        const start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n                        const end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n                        this._dragTime = shiftedTime;\r\n                        this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n                        this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\r\n                        this._dragVisible = true;\r\n\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n                        sequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime, continuesLastPattern));\r\n                        this._copyPins(this._cursor.curNote);\r\n                    }\r\n                } else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n                    if (!this._mouseDragging)\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                    const bendPart: number =\r\n                        Math.max(this._cursor.curNote.start,\r\n                            Math.min(this._cursor.curNote.end,\r\n                                Math.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n                            )\r\n                        ) - this._cursor.curNote.start;\r\n\r\n                    let prevPin: NotePin;\r\n                    let nextPin: NotePin = this._cursor.curNote.pins[0];\r\n                    let bendSize: number = 0;\r\n                    let bendInterval: number = 0;\r\n                    let cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n                    // Dragging gets a bit faster after difference in drag counts is >8.\r\n                    let dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n                    let dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n                    let dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n                    let dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n                    // Note volume drag overrides attempts to make a pattern selection\r\n                    if (dragCounts > 0) {\r\n                        this._shiftHeld = false;\r\n                    }\r\n\r\n                    for (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n                        prevPin = nextPin;\r\n                        nextPin = this._cursor.curNote.pins[i];\r\n                        if (bendPart > nextPin.time) continue;\r\n                        if (bendPart < prevPin.time) throw new Error();\r\n                        const sizeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n                        bendSize = Math.round(prevPin.size * (1.0 - sizeRatio) + nextPin.size * sizeRatio + dragSign * dragCounts);\r\n                        // If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n                        if (!this.controlMode && !this._doc.prefs.alwaysFineNoteVol && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                            bendSize = Math.floor(bendSize / 2) * 2;\r\n                        }\r\n                        if (bendSize < 0) bendSize = 0;\r\n                        if (bendSize > cap) bendSize = cap;\r\n                        bendInterval = this._snapToPitch(prevPin.interval * (1.0 - sizeRatio) + nextPin.interval * sizeRatio + this._cursor.curNote.pitches[0], 0, this._getMaxPitch()) - this._cursor.curNote.pitches[0];\r\n                        break;\r\n                    }\r\n                    if (this._doc.song.getChannelIsMod(this._doc.channel) && this.controlMode) {\r\n                        // Link bend to the next note over\r\n                        if (bendPart >= this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time) {\r\n                            if (this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time < this._doc.song.beatsPerBar * Config.partsPerBeat) {\r\n                                for (const note of this._pattern!.notes) {\r\n                                    if (note.start == this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Try to bend to the next pattern over. Only do this if a note starts at 0, and instrument is identical in next pattern.\r\n                                const nextPattern: Pattern | null = this._doc.getCurrentPattern(1);\r\n\r\n                                if (nextPattern != null && nextPattern.instruments[0] == this._pattern!.instruments[0]) {\r\n                                    for (const note of nextPattern.notes) {\r\n                                        if (note.start == 0 && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                        // Link bend to the previous note\r\n                        else if (bendPart <= this._cursor.curNote.pins[0].time) {\r\n                            if (this._cursor.curNote.start > 0) {\r\n                                for (const note of this._pattern!.notes) {\r\n                                    if (note.end == this._cursor.curNote.start && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Try to bend to the previous pattern over. Only do this if a note starts at the end, and instrument is identical in previous pattern.\r\n                                const prevPattern: Pattern | null = this._doc.getCurrentPattern(-1);\r\n\r\n                                if (prevPattern != null && prevPattern.instruments[0] == this._pattern!.instruments[0]) {\r\n                                    for (const note of prevPattern.notes) {\r\n                                        if (note.end == this._doc.song.beatsPerBar * Config.partsPerBeat && note.pitches[0] == this._cursor.curNote.pitches[0]) {\r\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this._dragTime = this._cursor.curNote.start + bendPart;\r\n                    this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n                    this._dragSize = bendSize;\r\n                    this._dragVisible = true;\r\n\r\n                    sequence.append(new ChangeSizeBend(this._doc, this._cursor.curNote, bendPart, bendSize, bendInterval, this.shiftMode));\r\n                    this._copyPins(this._cursor.curNote);\r\n                } else {\r\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                    this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\r\n\r\n                    if (this._pattern == null) throw new Error();\r\n\r\n                    let bendStart: number;\r\n                    let bendEnd: number;\r\n                    if (this._mouseX >= this._mouseXStart) {\r\n                        bendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n                        bendEnd = currentPart + minDivision;\r\n                    } else {\r\n                        bendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n                        bendEnd = currentPart;\r\n                    }\r\n                    if (bendEnd < 0) bendEnd = 0;\r\n                    if (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n                    if (bendEnd > this._cursor.curNote.end) {\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n                    }\r\n                    if (bendEnd < this._cursor.curNote.start) {\r\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n                    }\r\n\r\n                    let minPitch: number = Number.MAX_VALUE;\r\n                    let maxPitch: number = -Number.MAX_VALUE;\r\n                    for (const pitch of this._cursor.curNote.pitches) {\r\n                        if (minPitch > pitch) minPitch = pitch;\r\n                        if (maxPitch < pitch) maxPitch = pitch;\r\n                    }\r\n                    minPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n                    maxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n                    if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                        const bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, this._getMaxPitch() - maxPitch);\r\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n                        this._dragPitch = bendTo;\r\n                    }\r\n                    else {\r\n                        const bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n                        this._dragPitch = bendTo;\r\n                    }\r\n                    this._copyPins(this._cursor.curNote);\r\n\r\n                    this._dragTime = bendEnd;\r\n                    this._dragVisible = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n            this._updateCursorStatus();\r\n            this._updatePreview();\r\n        }\r\n    }\r\n\r\n    private _whenCursorReleased = (event: Event | null): void => {\r\n        if (!this._cursor.valid) return;\r\n\r\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n        if (this._mouseDown && continuousState && this._dragChange != null) {\r\n\r\n            if (this._draggingSelectionContents) {\r\n                this._doc.record(this._dragChange);\r\n                this._dragChange = null;\r\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n            } else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n                this._setPatternSelection(this._dragChange);\r\n                this._dragChange = null;\r\n            } else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n                this._doc.record(this._dragChange);\r\n                this._dragChange = null;\r\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n            } else {\r\n\r\n                if (this._pattern == null) throw new Error();\r\n\r\n                const sequence: ChangeSequence = new ChangeSequence();\r\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n                if (this._cursor.pitchIndex == -1) {\r\n                    if (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n                    }\r\n                    sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n                    this._copyPins(this._cursor.curNote);\r\n\r\n                    if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\r\n                        const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n                        this._doc.performance.setTemporaryPitches(this._cursor.curNote.pitches, duration);\r\n                    }\r\n                } else {\r\n                    if (this._cursor.curNote.pitches.length == 1) {\r\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n                    } else {\r\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n                    }\r\n                }\r\n\r\n                this._doc.record(sequence);\r\n            }\r\n        }\r\n\r\n        this._mouseDown = false;\r\n        this._mouseDragging = false;\r\n        this._draggingStartOfSelection = false;\r\n        this._draggingEndOfSelection = false;\r\n        this._draggingSelectionContents = false;\r\n        this._lastChangeWasPatternSelection = false;\r\n        this.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n        this._updateCursorStatus();\r\n        this._updatePreview();\r\n    }\r\n\r\n    private _setPatternSelection(change: UndoableChange): void {\r\n        this._changePatternSelection = change;\r\n        this._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n    }\r\n\r\n\r\n    private _updatePreview(): void {\r\n        if (this._usingTouch) {\r\n            if (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n                if (!this.editingModLabel) {\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                }\r\n\r\n            } else {\r\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n                const x: number = this._partWidth * this._dragTime;\r\n                const y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n                const radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n                const width: number = 80;\r\n                const height: number = 60;\r\n                const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n                //this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n                let pathString: string = \"\";\r\n\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap) - height) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap) + height) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\r\n\r\n                this._svgPreview.setAttribute(\"d\", pathString);\r\n            }\r\n        } else {\r\n            if (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n                if (!this.editingModLabel) {\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                }\r\n            } else {\r\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n                if (this._cursorAtStartOfSelection()) {\r\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n                    const left: string = prettyNumber(center - 4);\r\n                    const right: string = prettyNumber(center + 4);\r\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\r\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n                } else if (this._cursorAtEndOfSelection()) {\r\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n                    const left: string = prettyNumber(center - 4);\r\n                    const right: string = prettyNumber(center + 4);\r\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\r\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n                } else if (this._cursorIsInSelection()) {\r\n                    const left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n                    const right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\r\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n                } else {\r\n                    this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateSelection(): void {\r\n        if (this._doc.selection.patternSelectionActive) {\r\n            this._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n            this._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n            this._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n        } else {\r\n            this._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    public render(): void {\r\n        const nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n        if (this._pattern != nextPattern) {\r\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\r\n                nextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n            }\r\n            if (this._pattern != null) {\r\n                this._dragChange = null;\r\n                this._whenCursorReleased(null);\r\n            }\r\n        }\r\n        this._pattern = nextPattern;\r\n\r\n        this._editorWidth = this.container.clientWidth;\r\n        this._editorHeight = this.container.clientHeight;\r\n        this._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n            this._pitchBorder = 0;\r\n            this._pitchCount = Config.drumCount;\r\n        }\r\n        else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n            this._pitchBorder = this._defaultModBorder;\r\n            this._pitchCount = Config.modCount;\r\n\r\n            if (this._pattern != null) {\r\n                // Force max height of mod channels to conform to settings.\r\n                for (const note of this._pattern.notes) {\r\n                    let pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n                    let maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n                    let maxFoundHeight: number = 0;\r\n                    for (const pin of note.pins) {\r\n                        if (pin.size > maxFoundHeight) {\r\n                            maxFoundHeight = pin.size;\r\n                        }\r\n                    }\r\n                    // Apply scaling if the max height is below any pin setting.\r\n                    if (maxFoundHeight > maxHeight) {\r\n                        for (const pin of note.pins) {\r\n                            pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._pitchBorder = 0;\r\n            this._pitchCount = this._doc.getVisiblePitchCount();\r\n        }\r\n\r\n        this._pitchHeight = this._editorHeight / this._pitchCount;\r\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\r\n\r\n        if (this._renderedRhythm != this._doc.song.rhythm ||\r\n            this._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n            this._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n            this._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n            this._renderedRhythm = this._doc.song.rhythm;\r\n            this._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n            this._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n            this._renderedModChannelCount = this._doc.song.modChannelCount;\r\n            this.resetCopiedPins();\r\n        }\r\n\r\n        this._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n        if (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n            this._renderedWidth = this._editorWidth;\r\n            this._renderedHeight = this._editorHeight;\r\n            this._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n            this._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n            this._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n            this._selectionRect.setAttribute(\"y\", \"0\");\r\n            this._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n        }\r\n\r\n        const beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n        if (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n            this._renderedBeatWidth = beatWidth;\r\n            this._renderedPitchHeight = this._pitchHeight;\r\n            this._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n            this._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n            this._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n            this._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n            this._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n            this._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n            this._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n            this._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n            this._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n            if (this._pitchHeight > this._pitchBorder) {\r\n                this._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n                this._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n            }\r\n\r\n\r\n\r\n            for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n                const rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n                const y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n                rectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n                rectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n                rectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n            }\r\n        }\r\n\r\n        if (this._interactive) {\r\n            if (!this._mouseDown) this._updateCursorStatus();\r\n            this._updatePreview();\r\n            this._updateSelection();\r\n        }\r\n\r\n        if (this._renderedFifths != this._doc.prefs.showFifth) {\r\n            this._renderedFifths = this._doc.prefs.showFifth;\r\n            this._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.prefs.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n        }\r\n\r\n        if (this._renderedThirds != this._doc.prefs.showThird) {\r\n            this._renderedThirds = this._doc.prefs.showThird;\r\n            this._backgroundPitchRows[4].setAttribute(\"fill\", this._doc.prefs.showThird ? ColorConfig.thirdNote : ColorConfig.pitchBackground);\r\n        }\r\n\r\n        for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n            this._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n        }\r\n\r\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n            if (!this._renderedDrums) {\r\n                this._renderedDrums = true;\r\n                this._renderedMod = false;\r\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n            }\r\n        } else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n            if (!this._renderedMod) {\r\n                this._renderedDrums = false;\r\n                this._renderedMod = true;\r\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n            }\r\n        } else {\r\n            if (this._renderedDrums || this._renderedMod) {\r\n                this._renderedDrums = false;\r\n                this._renderedMod = false;\r\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n            }\r\n        }\r\n\r\n        this._redrawNotePatterns();\r\n    }\r\n\r\n    private _redrawNotePatterns(): void {\r\n        this._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n        if (this._doc.prefs.showChannels) {\r\n            if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                for (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n                    if (channel == this._doc.channel) continue;\r\n                    if (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n                    const pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n                    if (pattern2 == null) continue;\r\n\r\n                    const octaveOffset: number = this._doc.getBaseVisibleOctave(channel) * Config.pitchesPerOctave;\r\n                    for (const note of pattern2.notes) {\r\n                        for (const pitch of note.pitches) {\r\n                            var notePath: SVGPathElement = SVG.path();\r\n                            notePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n                            notePath.setAttribute(\"pointer-events\", \"none\");\r\n                            this._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, octaveOffset);\r\n                            this._svgNoteContainer.appendChild(notePath);\r\n\r\n                            if (this._doc.prefs.notesFlashWhenPlayed) {\r\n                                notePath = SVG.path();\r\n                                const noteFlashColor = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\r\n                                notePath.setAttribute(\"fill\", noteFlashColor);\r\n                                notePath.setAttribute(\"pointer-events\", \"none\");\r\n                                this._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, octaveOffset);\r\n                                this._svgNoteContainer.appendChild(notePath);\r\n                                notePath.classList.add('note-flash');\r\n                                notePath.style.opacity = \"0\";\r\n                                notePath.setAttribute('note-start', String(note.start));\r\n                                notePath.setAttribute('note-end', String(\r\n                                    note.end\r\n                                    ));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._pattern != null) {\r\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n            const chord: Chord = instrument.getChord();\r\n            const transition: Transition = instrument.getTransition();\r\n            const displayNumberedChords: boolean = chord.customInterval || chord.arpeggiates || chord.strumParts > 0 || transition.slides;\r\n            for (const note of this._pattern.notes) {\r\n                let disabled: boolean = false;\r\n                if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n                    const modIndex: number = instrument.modulators[Config.modCount - 1 - note.pitches[0]];\r\n                    if ((modIndex == Config.modulators.dictionary[\"none\"].index)\r\n                    || instrument.invalidModulators[Config.modCount - 1 - note.pitches[0]])\r\n                        disabled = true;\r\n                }\r\n                for (let i: number = 0; i < note.pitches.length; i++) {\r\n                    const pitch: number = note.pitches[i];\r\n                    let notePath: SVGPathElement = SVG.path();\r\n                    let colorPrimary: string = (disabled ? ColorConfig.disabledNotePrimary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n                    let colorSecondary: string = (disabled ? ColorConfig.disabledNoteSecondary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n                    notePath.setAttribute(\"fill\", colorSecondary);\r\n                    notePath.setAttribute(\"pointer-events\", \"none\");\r\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n                    this._svgNoteContainer.appendChild(notePath);\r\n\r\n                    notePath = SVG.path();\r\n                    notePath.setAttribute(\"fill\", colorPrimary);\r\n                    notePath.setAttribute(\"pointer-events\", \"none\");\r\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n                    this._svgNoteContainer.appendChild(notePath);\r\n\r\n                    if (this._doc.prefs.notesFlashWhenPlayed&&!disabled) {\r\n                        notePath = SVG.path();\r\n                        const noteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff\";\r\n                        notePath.setAttribute(\"fill\", noteFlashColor);\r\n                        notePath.setAttribute(\"pointer-events\", \"none\");\r\n                        this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n                        this._svgNoteContainer.appendChild(notePath);\r\n                        notePath.classList.add('note-flash');\r\n                        notePath.style.opacity = \"0\";\r\n                        notePath.setAttribute('note-start', String(note.start));\r\n                        notePath.setAttribute('note-end', String(\r\n                            note.end\r\n                            ));\r\n                    }\r\n\r\n                    let indicatorOffset: number = 2;\r\n                    if (note.continuesLastPattern) {\r\n                        const arrowHeight: number = Math.min(this._pitchHeight, 20);\r\n                        let arrowPath: string;\r\n                        arrowPath = \"M \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.3 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 12) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset));\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.3 * arrowHeight);\r\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\r\n                        const arrow: SVGPathElement = SVG.path();\r\n                        arrow.setAttribute(\"d\", arrowPath);\r\n                        arrow.setAttribute(\"fill\", ColorConfig.invertedText);\r\n                        this._svgNoteContainer.appendChild(arrow);\r\n                        indicatorOffset += 12;\r\n                    }\r\n\r\n                    if (note.pitches.length > 1) {\r\n                        if (displayNumberedChords) {\r\n                            const oscillatorLabel: SVGTextElement = SVG.text();\r\n                            oscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + indicatorOffset));\r\n                            oscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n                            oscillatorLabel.setAttribute(\"width\", \"30\");\r\n                            oscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n                            oscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n                            oscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n                            oscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n                            oscillatorLabel.textContent = \"\" + (i + 1);\r\n                            this._svgNoteContainer.appendChild(oscillatorLabel);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[Config.modCount - 1 - note.pitches[0]];\r\n                    let presValue: number = this._dragSize + Config.modulators[setting].convertRealFactor;\r\n\r\n                    // This is me being too lazy to fiddle with the css to get it to align center.\r\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\r\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n                    this.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this._doc.currentPatternIsDirty = false;\r\n    }\r\n\r\n    private _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showSize: boolean, offset: number): void {\r\n        const totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n        const endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n        let nextPin: NotePin = pins[0];\r\n\r\n        const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n        let pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showSize ? nextPin.size / cap : 1.0)) + \" \";\r\n\r\n        for (let i: number = 1; i < pins.length; i++) {\r\n            let prevPin: NotePin = nextPin;\r\n            nextPin = pins[i];\r\n            let prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n            let nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\r\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\r\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\r\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\r\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\r\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\r\n        }\r\n        for (let i: number = pins.length - 2; i >= 0; i--) {\r\n            let prevPin: NotePin = nextPin;\r\n            nextPin = pins[i];\r\n            let prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n            let nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\r\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\r\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\r\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\r\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\r\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\r\n        }\r\n        pathString += \"z\";\r\n\r\n        svgElement.setAttribute(\"d\", pathString);\r\n    }\r\n\r\n    private _pitchToPixelHeight(pitch: number): number {\r\n        return this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument } from \"../synth/synth\";\r\n\r\nexport class Piano {\r\n\t\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\r\n\t\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\r\n\t\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\t\tprivate readonly _preview: HTMLDivElement = HTML.div({style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;`});\r\n\t\tpublic readonly container: HTMLDivElement = HTML.div({style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\"},\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\t\t\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\tprivate readonly _renderedLiveInputPitches: number[] = [];\r\n\t\r\n\t\t\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\t// Bass cutoff pitch is roughly half of the viewed window and below, though on odd-numbered octave counts the lead has priority for the middle octave.\r\n\tpublic static getBassCutoffPitch(doc: SongDocument): number {\r\n\t\tconst octaveOffset: number = doc.getBaseVisibleOctave(doc.channel);\r\n\t\treturn octaveOffset * Config.pitchesPerOctave + Math.floor( doc.getVisiblePitchCount() / ( Config.pitchesPerOctave * 2 ) ) * Config.pitchesPerOctave;\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\t\t\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({class: \"drum-button\", style: `background-size: ${scale}% ${scale}%;`}));\r\n\t\t}\r\n\t\t\t\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t\t\t\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t\t\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t}\r\n\t\t\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount-1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\r\n\t\tconst currentPitch: number = this._cursorPitch + octaveOffset;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.performance.addPerformedPitch(currentPitch);\r\n\t}\r\n\t\t\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\r\n\t\tthis._playedPitch = -1;\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\t\r\n\tprivate _onAnimationFrame = (): void => {\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t\t\r\n\t\tlet liveInputChanged: boolean = false;\r\n\t\tlet liveInputPitchCount: number = !this._doc.performance.pitchesAreTemporary() ? this._doc.synth.liveInputPitches.length : 0;\r\n\t\tliveInputPitchCount += !this._doc.performance.bassPitchesAreTemporary() ? this._doc.synth.liveBassInputPitches.length : 0;\r\n\t\tif (this._renderedLiveInputPitches.length != liveInputPitchCount) {\r\n\t\t\tliveInputChanged = true;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\r\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveInputPitches[i]) {\r\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveInputPitches[i];\r\n\t\t\t\tliveInputChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.synth.liveInputPitches.length; i < liveInputPitchCount; i++) {\r\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveBassInputPitches[i - this._doc.synth.liveInputPitches.length]) {\r\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveBassInputPitches[i - this._doc.synth.liveInputPitches.length];\r\n\t\t\t\tliveInputChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._renderedLiveInputPitches.length = liveInputPitchCount;\r\n\t\t\r\n\t\tif (liveInputChanged) {\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\t\r\n\t\tif (this._mouseOver && !this._mouseDown) {\r\n\t\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\t\t\t\r\n\t\t\tthis._preview.style.left = \"0px\";\r\n\t\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t\t}\r\n\t\t\r\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\r\n\t\tconst container: HTMLDivElement = this._doc.song.getChannelIsNoise(this._doc.channel) ? this._drumContainer : this._pianoContainer;\r\n\t\tconst children: HTMLCollection = container.children;\r\n\t\tfor (let i: number = 0; i < children.length; i++) {\r\n\t\t\tconst child: Element = children[i];\r\n\t\t\tif (this._renderedLiveInputPitches.indexOf(i + octaveOffset) == -1) {\r\n\t\t\t\tchild.classList.remove(\"pressed\");\r\n\t\t\t} else {\r\n\t\t\t\tchild.classList.add(\"pressed\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tthis._pitchCount = isMod ? Config.modCount : ( isDrum ? Config.drumCount : this._doc.getVisiblePitchCount() );\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\t\r\n\t\tif (!this._doc.prefs.showLetters) return;\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod && this._renderedPitchCount == this._pitchCount) return;\r\n\t\t\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\t\t\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tif (this._renderedPitchCount != this._pitchCount) {\r\n\t\t\t\tthis._pianoContainer.innerHTML = \"\";\r\n\t\t\t\tfor (let i: number = 0; i < this._pitchCount; i++) {\r\n\t\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\"});\r\n\t\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({class: \"piano-button\", style: \"background: gray;\"}, pianoLabel);\r\n\t\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\t\tthis._pianoLabels[i] = pianoLabel;\r\n\t\t\t\t\tthis._pianoKeys[i] = pianoKey;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pianoLabels.length = this._pitchCount;\r\n\t\t\t\tthis._pianoKeys.length = this._pitchCount;\r\n\t\t\t\tthis._renderedPitchCount = this._pitchCount;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % Config.pitchesPerOctave]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* @jummbus - Visual distinciton for bass notes during live input. Axed for now... maybe needs new colors?\r\n\t\t\t\t\tI want to do filter: hue-shift(60deg) but keys are usually grayscale, and filter: is used already anyway for displaying played notes as pressed.\r\n\t\t\t\t\tif ( j + octaveOffset <= Piano.getBassCutoffPitch(this._doc) && this._doc.prefs.bassOffset != 0) {\r\n\t\t\t\t\t\tlabel.style.setProperty(\"font-style\", \"italic\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._pianoKeys[j].style.setProperty(\"font-style\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = Piano.getPitchName(pitchNameIndex, j, this._doc.getBaseVisibleOctave(this._doc.channel));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\t\t\t\tlet channelVal: number = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\tlet modulator: number = instrument.modulators[Config.modCount - j - 1];\r\n\t\t\t\tlet status: number = 1 + +(channelVal - 1 >= this._doc.song.pitchChannelCount);\r\n\t\t\t\tif (instrument.modChannels[Config.modCount - j - 1] == -2)\r\n\t\t\t\t\tstatus = 0;\r\n\t\t\t\telse if (instrument.modChannels[Config.modCount - j - 1] == -1)\r\n\t\t\t\t\tstatus = 3;\r\n\t\t\t\tlet instrumentsLength: number = this._doc.song.channels[Math.max(0,channelVal - 1)].instruments.length;\r\n\t\t\t\t// 0 - none\r\n\t\t\t\t// 1 - pitch\r\n\t\t\t\t// 2 - noise\r\n\t\t\t\t// 3 - song\r\n\r\n\r\n\t\t\t\tswitch (status) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal-1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tlet insText: string;\r\n\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\tinsText = \" All\";\r\n\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\tinsText = \" Act\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\r\n                            }\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + insText;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1 - this._doc.song.pitchChannelCount;\r\n\t\t\t\t\t\tinstrumentsLength = this._doc.song.channels[channelVal - 1].instruments.length;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\r\n\t\t\t\t\t\t\t\tlet insText: string;\r\n\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\tinsText = \" All\";\r\n\t\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\r\n\t\t\t\t\t\t\t\t\tinsText = \" Act\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + insText;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tsecondRow = Config.modulators[modulator].pianoName;\r\n\t\t\t\t\tif (modulator == Config.modulators.dictionary[\"none\"].index) {\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (modulator == Config.modulators.dictionary[\"eq filter\"].index || modulator == Config.modulators.dictionary[\"note filter\"].index) {\r\n\t\t\t\t\t\tvar text = \" Morph\";\r\n\t\t\t\t\t\tvar filterVal = instrument.modFilterTypes[Config.modCount - j - 1];\r\n\t\t\t\t\t\tif (filterVal > 0 && (filterVal % 2)) {\r\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"X\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (filterVal > 0) {\r\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"Y\";\r\n                        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsecondRow += text;\r\n                    }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[Math.max(0,instrument.modChannels[Config.modCount - j - 1])].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tpublic static getPitchName(pitchNameIndex: number, scaleIndex: number, baseVisibleOctave: number): string {\r\n\t\tlet text: string;\r\n\r\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t} else {\r\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[scaleIndex % Config.pitchesPerOctave];\r\n\t\t\ttext = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\r\n\t\t\tif (shiftDir == 1) {\r\n\t\t\t\ttext += \"♭\";\r\n\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\ttext += \"♯\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (scaleIndex % 12 == 0) {\r\n\t\t\ttext += Math.floor(scaleIndex / 12) + baseVisibleOctave;\r\n\t\t}\r\n\r\n\t\treturn text;\r\n\t}\r\n\r\n\tpublic static getPitchNameAlwaysOctave(pitchNameIndex: number, scaleIndex: number, baseVisibleOctave: number): string {\r\n\t\tlet text: string;\r\n\r\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t} else {\r\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[scaleIndex % Config.pitchesPerOctave];\r\n\t\t\ttext = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\r\n\t\t\tif (shiftDir == 1) {\r\n\t\t\t\ttext += \"♭\";\r\n\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\ttext += \"♯\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttext += Math.floor(scaleIndex / 12) + baseVisibleOctave;\r\n\r\n\t\treturn text;\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\t\tprivate readonly _barsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\r\n\t\tprivate readonly _positionSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\t\toption({value: \"end\"},       \"Apply change at end of song.\"),\r\n\t\t\toption({value: \"beginning\"}, \"Apply change at beginning of song.\"),\r\n\t);\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\r\n\t\th2(\"Song Length\"),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({style: \"display: inline-block; text-align: right;\"},\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._positionSelect),\r\n\t\t),\r\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\t\t\t\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._barsStepper.select();\r\n\t\t\tsetTimeout(()=>this._barsStepper.focus());\r\n\t\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\t\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\t\t\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\t\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {Instrument} from \"../synth/synth\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {Prompt} from \"./Prompt\";\r\nimport {ChangeGroup} from \"./Change\";\r\nimport {ChangeStringSustainType} from \"./changes\";\r\n\r\nconst {button, div, h2, p, select, option} = HTML;\r\n\r\nexport class SustainPrompt implements Prompt {\r\n\tprivate readonly _typeSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"acoustic\"}, \"(A) Acoustic\"),\r\n\t\toption({value: \"bright\"}, \"(B) Bright\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\t\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\r\n\t\tdiv(\r\n\t\t\th2(\"String Sustain\"),\r\n\t\t\tp(\"This setting controls how quickly the picked string vibration decays.\"),\r\n\t\t\tp(\"Unlike most of BeepBox's instrument synthesizer features, a picked string cannot change frequency suddenly while maintaining its decay. If a tone's pitch changes suddenly (e.g. if the chord type is set to \\\"arpeggio\\\" or the transition type is set to \\\"continues\\\") then the string will be re-picked and start decaying from the beginning again, even if the envelopes don't otherwise restart.\"),\r\n\t\t),\r\n\t\tdiv({style: {display: Config.enableAcousticSustain ? undefined : \"none\"}},\r\n\t\t\tp(\"BeepBox comes with two slightly different sustain designs. You can select one here and press \\\"Okay\\\" to confirm it.\"),\r\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._typeSelect),\r\n\t\t),\r\n\t\tdiv({style: {display: Config.enableAcousticSustain ? \"flex\" : \"none\", \"flex-direction\": \"row-reverse\", \"justify-content\": \"space-between\"}},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tthis._typeSelect.value = Config.sustainTypeNames[instrument.stringSustainType];\r\n\t\t\r\n\t\tsetTimeout(()=>this._cancelButton.focus());\r\n\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\r\n\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\r\n\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _saveChanges = (): void => {\r\n\t\tif (Config.enableAcousticSustain) {\r\n\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\t\tgroup.append(new ChangeStringSustainType(this._doc, <any> Config.sustainTypeNames.indexOf(this._typeSelect.value)));\r\n\t\t\tthis._doc.prompt = null;\r\n\t\t\tthis._doc.record(group, true);\r\n\t\t} else {\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n\t\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nexport function errorAlert(error: any): void {\r\n\tconsole.warn(error);\r\n\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n}\r\n\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\t\t\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\t\t\r\n\tprivate _song: Song = new Song();\r\n\t\t\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\t\tsong = {versions: []};\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\t\t\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\t\t\t\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\terrorAlert(error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\t\tcurrentSong = {versions: []};\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\t\t\t\t\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\t\t\t\t\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\tconst {button, div, h2, p, select, option, iframe} = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\t\r\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\r\n\t\th2(\"Song Recovery\"),\r\n\t\t\tdiv({style: \"max-height: 385px; overflow-y: auto;\"},\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\t\t\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\t\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\t\t\t\r\n\t\tfor (const song of songs) {\r\n\t\t\t\tconst versionMenu: HTMLSelectElement = select({style: \"width: 100%;\"});\r\n\t\t\t\t\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst player: HTMLIFrameElement = iframe({style: \"width: 100%; height: 60px; border: none; display: block;\"});\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\t\tconst container: HTMLDivElement = div({style: \"margin: 4px 0;\"}, div({class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\"}, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\t\t\t\t\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {EditorConfig} from \"./EditorConfig\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {Prompt} from \"./Prompt\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {KeyboardLayout} from \"./KeyboardLayout\";\r\nimport {Piano} from \"./Piano\";\r\n\r\nconst {button, label, div, p, a, h2, input, select, option} = HTML;\r\n\r\nexport class RecordingSetupPrompt implements Prompt {\r\n\tprivate readonly _keyboardMode: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"useCapsLockForNotes\"}, \"simple shortcuts, use caps lock to play notes\"),\r\n\t\toption({value: \"pressControlForShortcuts\"}, \"simple notes, press \" + EditorConfig.ctrlName + \" for shortcuts\"),\r\n\t);\r\n\tprivate readonly _keyboardLayout: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"wickiHayden\"}, \"Wicki-Hayden\"),\r\n\t\toption({value: \"songScale\"}, \"selected song scale\"),\r\n\t\toption({value: \"pianoAtC\"}, \"piano starting at C :)\"),\r\n\t\toption({value: \"pianoAtA\"}, \"piano starting at A :(\"),\r\n\t\toption({value: \"pianoTransposingC\"}, \"piano transposing C :) to song key\"),\r\n\t\toption({value: \"pianoTransposingA\"}, \"piano transposing A :( to song key\"),\r\n\t);\r\n\tprivate readonly _bassOffset: HTMLSelectElement = select({style: \"width: 100%;\"},\r\n\t\toption({value: \"0\"}, \"disabled\"),\r\n\t\toption({value: \"-1\"}, \"before\"),\r\n\t\toption({value: \"1\"}, \"after\"),\r\n\t);\r\n\tprivate readonly _keyboardLayoutPreview: HTMLDivElement = div({style: \"display: grid; row-gap: 4px; margin: 4px auto; font-size: 10px;\"});\r\n\tprivate readonly _enableMidi: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _showRecordButton: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _snapRecordedNotesToRhythm: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _ignorePerformedNotesNotInScale: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _metronomeCountIn: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\tprivate readonly _metronomeWhileRecording: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\r\n\t\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection recordingSetupPrompt\", style: \"width: 600px; text-align: right; max-height: 90%;\"},\r\n\t\th2({style: \"align-self: center;\"}, \"Note Recording Setup\"),\r\n\t\tdiv({style: \"display: grid; overflow-y: auto; overflow-x: hidden; flex-shrink: 1;\"},\r\n\t\t\tp(\"JummBox can record notes as you perform them. You can start recording by pressing Ctrl+Space (or \" + EditorConfig.ctrlSymbol + \"P).\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Add ● record button next to ▶ play button:\",\r\n\t\t\t\tthis._showRecordButton,\r\n\t\t\t),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Snap recorded notes to the song's rhythm:\",\r\n\t\t\t\tthis._snapRecordedNotesToRhythm,\r\n\t\t\t),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Ignore notes not in the song's scale:\",\r\n\t\t\t\tthis._ignorePerformedNotesNotInScale,\r\n\t\t\t),\r\n\t\t\tp(\"While recording, you can perform notes on your keyboard!\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; margin-top: 0.5em; margin-bottom: 0.5em; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Keyboard layout:\",\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 50%; margin-left: 1em;\"}, this._keyboardLayout),\r\n\t\t\t),\r\n\t\t\tthis._keyboardLayoutPreview,\r\n\t\t\tp(\"When not recording, you can use the computer keyboard either for shortcuts (like C and V for copy and paste) or for performing notes, depending on this mode:\"),\r\n\t\t\tlabel({style: \"display: flex; margin-top: 0.5em; margin-bottom: 0.5em; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 50%;\"}, this._keyboardMode),\r\n\t\t\t),\r\n\t\t\tp(\"Performing music takes practice! Try slowing the tempo and using this metronome to help you keep a rhythm.\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Hear metronome while recording:\",\r\n\t\t\t\tthis._metronomeWhileRecording,\r\n\t\t\t),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Count-in 1 bar of metronome before recording:\",\r\n\t\t\t\tthis._metronomeCountIn,\r\n\t\t\t),\r\n\t\t\tp(\"If you have a \", a({href: \"https://caniuse.com/midi\", target: \"_blank\"}, \"compatible browser\"), \" on a device connected to a MIDI keyboard, you can use it to perform notes in JummBox! (Or you could buy \", a({href: \"https://imitone.com/\", target: \"_blank\"}, \"Imitone\"), \" or \", a({href: \"https://vochlea.com/\", target: \"_blank\"}, \"Dubler\"), \" to hum notes into a microphone while wearing headphones!)\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; margin-top: 0.5em; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Enable MIDI performance:\",\r\n\t\t\t\tthis._enableMidi,\r\n\t\t\t),\r\n\t\t\tp(\"The range of pitches available to play via your computer keyboard is affected by the octave scrollbar of the currently selected channel.\"),\r\n\t\t\tp(\"If you set the channel offset below to 'before' or 'after', notes below the middle octave in the view will be 'bass' notes, and placed in the channel before or after the viewed one. Using this, you can play bass and lead at the same time!\"),\r\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; margin-top: 0.5em; margin-bottom: 0.5em; height: 2em; justify-content: center;\"},\r\n\t\t\t\t\"Bass Offset:\",\r\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 50%; margin-left: 1em;\"}, this._bassOffset),\r\n\t\t\t),\r\n\t\t\tp(\"Once you enable the setting, the keyboard layout above will darken to denote the new bass notes. The notes will be recorded with independent timing and this works with MIDI devices, too. Be aware that the octave offset of both used channels will impact how high/low the bass/lead are relative to one another.\"),\r\n\t\t\tp(\"Recorded notes often overlap such that one note ends after the next note already started. In JummBox, these notes get split into multiple notes which may sound different when re-played than they did when you were recording. To fix the sound, you can either manually clean up the notes in the pattern editor, or you could try enabling the \\\"transition type\\\" effect on the instrument and setting it to \\\"continue\\\".\"),\r\n\t\t\tdiv({style: `width: 100%; height: 80px; background: linear-gradient(rgba(0,0,0,0), ${ColorConfig.editorBackground}); position: sticky; bottom: 0; pointer-events: none;`}),\r\n\t\t),\r\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._keyboardMode.value = this._doc.prefs.pressControlForShortcuts ? \"pressControlForShortcuts\" : \"useCapsLockForNotes\";\r\n\t\tthis._keyboardLayout.value = this._doc.prefs.keyboardLayout;\r\n\t\tthis._bassOffset.value = String(this._doc.prefs.bassOffset);\r\n\t\tthis._enableMidi.checked = this._doc.prefs.enableMidi;\r\n\t\tthis._showRecordButton.checked = this._doc.prefs.showRecordButton;\r\n\t\tthis._snapRecordedNotesToRhythm.checked = this._doc.prefs.snapRecordedNotesToRhythm;\r\n\t\tthis._ignorePerformedNotesNotInScale.checked = this._doc.prefs.ignorePerformedNotesNotInScale;\r\n\t\tthis._metronomeCountIn.checked = this._doc.prefs.metronomeCountIn;\r\n\t\tthis._metronomeWhileRecording.checked = this._doc.prefs.metronomeWhileRecording;\r\n\t\t\r\n\t\tsetTimeout(()=>this._showRecordButton.focus());\r\n\t\t\r\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\t\r\n\t\tthis._renderKeyboardLayoutPreview();\r\n\t\tthis._keyboardLayout.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\r\n\t\tthis._bassOffset.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\r\n\t}\r\n\t\r\n\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\r\n\tpublic cleanUp = (): void => { \r\n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\t\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._confirm();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _confirm = (): void => { \r\n\t\tthis._doc.prefs.pressControlForShortcuts = (this._keyboardMode.value == \"pressControlForShortcuts\");\r\n\t\tthis._doc.prefs.keyboardLayout = this._keyboardLayout.value;\r\n\t\tthis._doc.prefs.bassOffset = Number(this._bassOffset.value);\r\n\t\tthis._doc.prefs.enableMidi = this._enableMidi.checked;\r\n\t\tthis._doc.prefs.showRecordButton = this._showRecordButton.checked;\r\n\t\tthis._doc.prefs.snapRecordedNotesToRhythm = this._snapRecordedNotesToRhythm.checked;\r\n\t\tthis._doc.prefs.ignorePerformedNotesNotInScale = this._ignorePerformedNotesNotInScale.checked;\r\n\t\tthis._doc.prefs.metronomeCountIn = this._metronomeCountIn.checked;\r\n\t\tthis._doc.prefs.metronomeWhileRecording = this._metronomeWhileRecording.checked;\r\n\t\tthis._doc.prefs.save();\r\n\t\tthis._close();\r\n\t}\r\n\t\r\n\tprivate _renderKeyboardLayoutPreview = (): void => {\r\n\t\twhile (this._keyboardLayoutPreview.firstChild) {\r\n\t\t\tthis._keyboardLayoutPreview.removeChild(this._keyboardLayoutPreview.firstChild);\r\n\t\t}\r\n\t\tconst rowLengths: number[] = [12, 12, 11, 10];\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tfor (let rowIndex: number = 0; rowIndex < 4; rowIndex++) {\r\n\t\t\tconst row: HTMLDivElement = div({style: \"display: flex;\"});\r\n\t\t\tthis._keyboardLayoutPreview.appendChild(row);\r\n\t\t\tconst spacer: HTMLDivElement = div({style: \"width: \" + (rowIndex * 12) + \"px; height: 20px; flex-shrink: 0;\"});\r\n\t\t\trow.appendChild(spacer);\r\n\t\t\tfor (let colIndex: number = 0; colIndex < rowLengths[rowIndex]; colIndex++) {\r\n\t\t\t\tconst key: HTMLDivElement = div({style: `width: 20px; height: 20px; margin: 0 2px; box-sizing: border-box; flex-shrink: 0; display: flex; justify-content: center; align-items: center;`});\r\n\t\t\t\trow.appendChild(key);\r\n\t\t\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, colIndex, 3 - rowIndex, this._keyboardLayout.value);\r\n\t\t\t\tif (pitch != null) {\r\n\t\t\t\t\tconst scalePitch: number = pitch % 12;\r\n\t\t\t\t\tif (scale[scalePitch]) {\r\n\t\t\t\t\t\tif (scalePitch == 0) {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.tonic;\r\n\t\t\t\t\t\t} else if (scalePitch == 7 && this._doc.prefs.showFifth) {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.fifthNote;\r\n\t\t\t\t\t\t} else if (scalePitch == 4 && this._doc.prefs.showThird) {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.thirdNote;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.pitchBackground;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkey.style.border = \"2px solid \" + ColorConfig.pitchBackground;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this._bassOffset.selectedIndex != 0 && pitch <= Piano.getBassCutoffPitch(this._doc)) {\r\n\t\t\t\t\t\tkey.style.setProperty(\"filter\", \"hue-rotate(60deg) brightness(0.5)\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tkey.style.setProperty(\"filter\", \"\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pitchNameIndex: number = (scalePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\t\t\t\tkey.textContent = Piano.getPitchName(pitchNameIndex, scalePitch, Math.floor(pitch / 12));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 120;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\t\tprivate readonly _fill: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _thirds: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\r\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _arrow: SVGPathElement = SVG.path({fill: \"currentColor\", \"pointer-events\": \"none\"});\r\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._thirds,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\t\t\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"spectrum\", style: \"height: 100%;\"}, this._svg);\r\n\t\t\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\tprivate _renderedThirds: boolean = true;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t}\r\n\t\t//for (let i: number = ????; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) { //I cant quite figure this out\r\n\t\t//\t\tthis._thirds.appendChild(SVG.rect({fill: ColorConfig.thirdNote, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\r\n\t\t//}\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\t\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\t\t\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\t\t\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\t    \r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\t\t\t\t\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\t\t\t\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\t\t\t\t\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\t\t\t\t\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\t\t\t\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\t\t\t\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t\t\t\t\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedThirds != this._doc.prefs.showThird) {\r\n\t\t\tthis._renderedThirds = this._doc.prefs.showThird;\r\n\t\t\tthis._thirds.style.display = this._doc.prefs.showThird ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\t// option({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\" }, \"Midnight\"),\r\n\t\toption({ value: \"beachcombing\" }, \"Beachcombing\"),\r\n\t\toption({ value: \"violet verdant\" }, \"Violet Verdant\"),\r\n\t\toption({ value: \"sunset\" }, \"Sunset\"),\r\n\t\toption({ value: \"autumn\" }, \"Autumn\"),\r\n\t\toption({ value: \"fruit\" }, \"Shadowfruit\"),\r\n\t\toption({ value: \"toxic\" }, \"Toxic\"),\r\n\t\toption({ value: \"roe\" }, \"Roe\"),\r\n\t\toption({ value: \"moonlight\" }, \"Moonlight\"),\r\n\t\toption({ value: \"portal\" }, \"Portal\"),\r\n\t\toption({ value: \"fusion\" }, \"Fusion\"),\r\n\t\toption({ value: \"inverse\" }, \"Inverse\"),\r\n\t\toption({ value: \"nebula\" }, \"Nebula\"),\r\n\t\toption({ value: \"roe light\" }, \"Roe Light\"),\r\n\t\toption({ value: \"energized\" }, \"Energized\"),\r\n\t\toption({ value: \"neapolitan\" }, \"Neapolitan\"),\r\n\t\toption({ value: \"poly\" }, \"Poly\"),\r\n\t\toption({ value: \"blutonium\" }, \"Blutonium\"),\r\n\t\toption({ value: \"mono\" }, \"Mono\"),\r\n\t\toption({ value: \"dogebox classic\" }, \"Dogebox Classic\"),\r\n\t\toption({ value: \"dogebox2\" }, \"Dogebox2\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dogebox2\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.prefs.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\t\tprivate readonly _closeButton: HTMLButtonElement = button({class: \"cancelButton\"});\r\n\t\t\r\n\tpublic readonly container: HTMLDivElement;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\t\t\t\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available pitches of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Assuming your song uses all pitches in the scale and especially \\\"tonic\\\" pitches (the purple rows in the pattern editor) then major scales tend to sound more playful or optimistic, whereas minor scales sound more serious or sad.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down, keeping the \\\"tonic\\\" pitches (the brown rows in the pattern editor) aligned with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t\tp(\"If you've already placed some notes but they don't emphasize \\\"tonic\\\" pitches then the selected key isn't very meaningful. You can select the \\\"Detect Key\\\" option in the key menu to automatically align the most emphasized notes with \\\"tonic\\\" pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute. A \\\"beat\\\" is the duration of the little gray rectangles in the pattern editor. (In conventional music notation, a \\\"quarter note\\\" is usually equivalent to \\\"beat\\\".)\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is like a continuous echo effect. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery, but too much reverb can kinda \\\"smear\\\" sounds so that it's harder to distinguish notes or instruments, especially for lower \\\"bass\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t\tp(\"If you've already placed some notes but they don't align with the selected rhythm, you can select the \\\"Snap Notes To Rhythm\\\" option in the rhythm menu to force the notes in the currently selected pattern(s) to align with the selected rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"In the \\\"Channel Settings\\\" option from JummBox's \\\"Edit\\\" menu, there are a few ways to enable multiple instruments per channel.\"),\r\n\t\t\t\t\tp(\"First, you could enable multiple simultaneous instruments per channel. All of the channel's instruments will play all of the notes in the channel at the same time, and you can click an instrument number to view and edit its settings.\"),\r\n\t\t\t\t\tp(\"Second, you could enable different instruments per pattern. Only one of the instruments will play at any given time, but you can click the instrument number to change which instrument is used for the currently selected pattern(s).\"),\r\n\t\t\t\t\tp(\"Finally, you can enable them both, in which case you can click an instrument number once to view it, and again to toggle whether the instrument is used for the currently selected pattern(s).\"),\r\n\t\t\t\t\tp(\"Either way, you can click the + button to add more instruments to a channel, and you can press shift and a number key on your keyboard to select an instrument as if you had clicked the corresponding button here.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a suggestion, composers often put lead melodies, drums, and basses in the center, and spread other instruments toward either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument. It is in units of 'cents', 100 of which equal a pitch shift of one semitone.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"Dogebox2 comes with many instrument presets, try them out! You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"eqFilter\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"EQ Filter\"),\r\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\r\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\r\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\r\n\t\t\t\t\tp(\"You can also enable a \\\"Note Filter\\\" as an effect. EQ and note filters are mostly the same, but have different purposes. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"noteFilter\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Note Filter\"),\r\n\t\t\t\t\tp(\"Note filters are mostly the same as EQ filters, but have a different purpose. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\r\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\r\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\r\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"fadeInOut\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Fade In/Out\"),\r\n\t\t\t\t\tp(\"This setting controls how long it takes for notes to reach full volume at the beginning or decay to silence at the end.\"),\r\n\t\t\t\t\tp(\"An instant fade-in sounds like instruments that are played by hitting or plucking, whereas slower fade-ins sound like instruments that are played by blowing air.\"),\r\n\t\t\t\t\tp(\"You can also make the fade-out start before the note ends to leave a gap before the next note starts, or after the note ends to allow the sound of the end of the note to overlap with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"Usually, when one note ends at the same time another begins, the old note will fade out and the new note will fade in based on the fade in/out settings, but this setting can override that, connecting the end of one note to the beginning of the next.\"),\r\n\t\t\t\t\tp(\"The \\\"interrupt\\\" transition makes the wave suddenly change from the old note's frequency to the new note's frequency without any fading, but still restarts envelopes at the beginning of the new note. The \\\"continue\\\" transition is similar but it doesn't even restart envelopes, and can be used to make each of the notes in a chord start or stop at different times!\"),\r\n\t\t\t\t\tp(\"The \\\"slide\\\" transition makes the pitch shift quickly but not instantaneously from the old note's frequency to the new note's frequency, and softly restarts envelopes. The \\\"slide in pattern\\\" transition is the same except it doesn't connect the last note in a pattern to the first note in the next pattern.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"Dogebox2 comes with some sound waves based on classic electronic sound chips, as well as several unique waves. This is the basic source of the sound of the instrument, which is modified by the other instrument settings.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"Dogebox2 comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"supersawDynamism\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Supersaw Dynamism\"),\r\n\t\t\t\t\tp(\"A supersaw is a combination of many sawtooth waves, and this setting controls the contribution of extra sawtooth waves.\"),\r\n\t\t\t\t\tp(\"At the low end of the slider, only the first wave is contributing to the sound, which sounds like an ordinary static sawtooth wave. At the maximum setting, all of the waves are contributing equally and the resulting tone can randomly shift depending on how the waves line up with each other, similar to the \\\"unison\\\" and \\\"chorus\\\" settings.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"supersawSpread\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Supersaw Spread\"),\r\n\t\t\t\t\tp(\"A supersaw is a combination of many sawtooth waves, and this setting controls the distance between their frequencies. The dynamism setting must be used for the extra waves to have any effect.\"),\r\n\t\t\t\t\tp(\"At the low end of the spread slider, all of the voices have the same frequency but random phase, resulting in a different sound every time a note starts. In the middle, the waves all have slightly different frequencies that shift in and out of phase over time similar to the \\\"unison\\\" and \\\"chorus\\\" settings, creating a classic supersaw sound. At the extreme end, the frequencies are so far apart they sound dissonant.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"supersawShape\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Supersaw Shape\"),\r\n\t\t\t\t\tp(\"This supersaw instrument includes an option to change the shape of the waves from sawtooth waves to pulse waves. Use this setting to morph between the two shapes.\"),\r\n\t\t\t\t\tp(\"When a pulse wave shape is used, you can also control the pulse width with a separate setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"unison\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Unison\"),\r\n\t\t\t\t\tp(\"This instrument can play two identical waves at different frequencies. When two waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"The distance between two frequencies is called an \\\"interval\\\", and this setting controls how large it is. If the interval is too wide, then the waves may sound out-of-tune and \\\"dissonant\\\". However, if the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple different notes occur at the same time, this is called a chord. Chords can be created in Dogebox2's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"simultaneous\\\" which starts playing all of the pitches in a chord at the same instant. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some Dogebox2 instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency and volume.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback Type\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback Distortion\"),\r\n\t\t\t\t\tp(\"This setting controls the amount of feedback distortion based on the feedback type setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave, relative to the fundamental frequency of the note. The multiplier 1× is the same as the fundamental frequency, whereas 2x would be an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft fade in/out, it's also possible to make howling wind sounds or even musical wind instruments.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"JummBox has many different kinds of special effects you can add to instruments. You can turn on multiple effects at once, and they can be configured individually. Try them all out!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This drumset comes with a low-pass filter, and this setting can dynamically change the low-pass filter frequency over time. Each row in the pattern editor can have a different envelope shape.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chorus\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chorus\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices. Drag the slider to control how much chorus is added.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"echoSustain\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Echo Volume\"),\r\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay. Each echo is a little bit quieter than the last, and this setting controls how much quieter.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"echoDelay\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Echo Delay\"),\r\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay, and this setting controls how long the delay is.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pitchShift\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pitch Shift\"),\r\n\t\t\t\t\tp(\"This setting makes instruments play higher or lower pitches than the ones displayed in the pattern editor. Be careful that you don't confuse yourself!\"),\r\n\t\t\t\t\tp(\"You can combine this with envelopes to bend pitch over time, or play multiple simultaneous instruments with different pitch shifts for interesting layered sounds.\"),\r\n\t\t\t\t\tp(\"The intervals created by this setting are in \\\"just intonation\\\" which means they stay in phase with the original pitch instead of shifting in and out of phase over time. If you want the shifting, add the detune effect!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting slightly adjusts the frequency of notes played by the instrument. You can use a little bit to add a pleasing shifting sound similar to the \\\"unison\\\" feature when combined with other instruments. If you use too much, then the instrument may sound unpleasantly out-of-tune.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"distortion\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Distortion\"),\r\n\t\t\t\t\tp(\"This is the famous electric guitar effect! However, there are some things to be aware of.\"),\r\n\t\t\t\t\tp(\"First, most chords don't sound right when combined with heavy distortion. The only chords commonly used with distorted electric guitars are \\\"power chords\\\" which consist of a root note, a \\\"fifth\\\" note above that, and/or any octaves of those two notes.\"),\r\n\t\t\t\t\tp(\"Second, the distortion sound depends a lot on filtering. In particular, I recommend enabling the note filter effect, and adding both high-pass and low-pass points to the note filter. (Note filters are applied first, then distortion which transforms the sound based on that filtering, then the EQ filter is applied last.)\"),\r\n\t\t\t\t\tp(\"Finally, I recommend adjusting the fade-out setting to allow the end of each note to overlap a little bit with the beginning of the next, but not too much!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"bitcrusherQuantization\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Bitcrusher Quantization\"),\r\n\t\t\t\t\tp(\"This effect makes stuff sounds harsher, artificial, and \\\"low quality\\\", which is great if that's what you're going for!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"bitcrusherFreq\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Frequency Quantization\"),\r\n\t\t\t\t\tp(\"The bitcrusher effect comes with an additional frequency quantization effect! This is a fun one to play with, especially when combined with the note filter effect.\"),\r\n\t\t\t\t\tp(\"Every other notch on this slider is aligned with the currently selected key of the song, and the in-between notches are aligned with the tritones of the key.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"envelopes\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Envelopes\"),\r\n\t\t\t\t\tp(\"Envelopes are a way to dynamically adjust various other settings over time, usually based on how long the note lasts. Press the + button to add an envelope, then use the menus below to select which setting to control and the curve of the envelope. Try different combinations to see how they sound!\"),\r\n\t\t\t\t\tp(\"Most envelope curves restart from the beginning every time a new note plays. The \\\"note size\\\" option is based on the note width as drawn in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Envelope curves move in the range from 0 to 1 (or vice versa), where 0 means as quiet as possible and 1 is the same as the corresponding position selected in the instrument settings above. If multiple envelopes are targetting the same setting, they are multiplied before applying to the setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"discreteEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Use Discrete Envelopes?\"),\r\n\t\t\t\t\tp(\"Envelopes are usually interpolated, meaning they change continuously and smoothly. This setting, when ticked, makes envelopes not interpolate. It's a small difference, but can be helpful for some chip noises, and it's most noticeable with the 'blip' transitions.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"envelopeSpeed\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Envelope Speed\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of ALL envelopes for the instrument. Each envelope 'plays' at a certain speed, and this slider can scale it to play faster or slower. Use this to fine-tune your tremolo or how fast something decays to get just the right effect.\"),\r\n\t\t\t\t\tp(\"Note that, while this setting is limited in the sense that it controls all envelopes at once, you can still achieve a variety of outcomes by trying combinations of modes of each envelope type, which typically differ only in speed.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t\tp(\"If you choose 'all', every instrument in the channel will be affected. If you choose 'active', just the current ones used in this pattern will be instead.\"),\r\n\t\t\t\t\tp(\"Note that with 'all' or 'active', effects will only be applied to instruments that the effect is applicable on. For example if an instrument does not have panning effects, modulating panning will not affect it.\")\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings. Adding more effects to the instrument causes modulators for them to be available, so be sure to experiment!\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. Click the '?' when you have a setting selected to get more info about it!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modFilter\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Filter Target\"),\r\n\t\t\t\t\tp(\"This setting specifies which parameter of your targeted filter you would like to change.\"),\r\n\t\t\t\t\tp(\"With the 'morph' setting, the note value for your modulator represents the number of a subfilter to 'morph' into over time. For example, dragging a note from 0 to 7 will morph from your main filter to the 7th subfilter. To change how your subfilters are set up, click the '+' button on the target filter.\"),\r\n\t\t\t\t\tp(\"With a Dot setting, you can fine-tune the exact location of every dot on your filter graph. Note that this is extremely intensive if you want to modulate all dots - a morph is better in that case - but this can come in handy for small adjustments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"aliases\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Aliasing\"),\r\n\t\t\t\t\tp(\"Dogebox2 applies a technique called 'anti-aliasing' to instruments normally to help them sound cleaner even at high frequencies and low sample rates.\"),\r\n\t\t\t\t\tp(\"When this setting is ticked that technique is disabled, so you may hear strange audio artifacts especially at high pitches and when bending notes. However, this can lend a grungy sound to an instrument that could be desirable.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorWaveform\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Waveform\"),\r\n\t\t\t\t\tp('This setting controls the what kind of sound wave an individual FM wave uses. By defualt the FM synth only uses sinewaves.'),\r\n\t\t\t\t\tp('This feature was ported from Aury system`s GoldBox!'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Filter Type\"),\r\n\t\t\t\t\tp('Toggling these buttons lets you choose between a simple filter interface with two sliders, or the more advanced filter graph.'),\r\n\t\t\t\t\tp('The two-slider version controls a single low-pass filter and was used in legacy versions. It is not as powerful, but if you feel overwhelmed you can start with this.'),\r\n\t\t\t\t\tp('Note that switching from the simple interface to the advanced interface will convert your current settings, so you can also use it as a basis for later tweaking.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. Dogebox2 instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"invertWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Invert Wave\"),\r\n\t\t\t\t\tp(\"Flips the troughs and peaks of the waveform in this instrument, inverting its wave. This is for \\\"phase cancellation\\\" which is a phenomenon that occurs 2 waves of the same instrument but opposite inverts cancel out each other, perfect for isolating a specific sound such as reverb.\"),\r\n\t\t\t\t\tp(\"If this setting is used on its own and not with another instrument, you will not notice a difference, it is useless if you do not know what you are doing (see: the first paragraph).\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"upperNoteLimit\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Upper Note Limit\"),\r\n\t\t\t\t\tp(\"Defines the upper limit in which notes will play, useful for advanced instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"lowerNoteLimit\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Lower Note Limit\"),\r\n\t\t\t\t\tp(\"Defines the lower limit in which notes will play, useful for advanced instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"hzOffset\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Hz Offset\"),\r\n\t\t\t\t\tp(\"Allows you to input a fixed frequency, regardless of the note’s pitch. This is different from the standard frequency input, which is a proportional multiplier of the note’s pitch.\"),\r\n\t\t\t\t\tp(\"Previously, ~1x would have this set to 1.5, and ~2x would have it set to -1.3, see the next option for further accuracy.\")\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"fmInvert\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Invert\"),\r\n\t\t\t\t\tp(\"Flips the wave of the frequency, if combined with an hz offset, it can allow for a phaser effect.\"),\r\n\t\t\t\t\tp(\"Previously, frequency options containing the tidle (e.g. ~1x, ~2x) would have this enabled.\")\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"songDetune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Detune\"),\r\n\t\t\t\t\tp(\"This setting controls the overall detune of the entire song. See instrument detune for more information.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"songReverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Reverb\"),\r\n\t\t\t\t\tp(\"This setting controls the overall reverb of the entire song, this is multiplicative and will not affect insturments with no reverb. See instrument reverb for more information.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t// Check for modSetinfo#\r\n\t\t\t\tif (type.indexOf(\"modSetInfo\") >= 0) {\r\n\t\t\t\t\tlet modNum: number = +type[type.length - 1];\r\n\t\t\t\t\tlet modulator: number = _doc.song.channels[_doc.channel].instruments[_doc.getCurrentInstrument()].modulators[modNum];\r\n\t\t\t\t\tlet pList: HTMLParagraphElement[] = [];\r\n\t\t\t\t\tfor (let s: number = 0; s < Config.modulators[modulator].promptDesc.length; s++) {\r\n\t\t\t\t\t\tpList.push(p(\r\n\t\t\t\t\t\t\tConfig.modulators[modulator].promptDesc[s]\r\n\t\t\t\t\t\t\t\t.replace(\"$LO\", \"\" + Config.modulators[modulator].convertRealFactor)\r\n\t\t\t\t\t\t\t\t.replace(\"$MID\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol / 2))\r\n\t\t\t\t\t\t\t\t.replace(\"$HI\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol))\r\n\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Last element for mod settings is just some miscellaneous data for nerds like me.\r\n\t\t\t\t\tpList[pList.length-1].style.setProperty(\"color\", \"var(--secondary-text)\");\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(Config.modulators[modulator].promptName),\r\n\t\t\t\t\t\tpList,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.container = div({class: \"prompt\", style: \"width: 300px;\"},\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\t\t\t\r\n\t\t\tsetTimeout(()=>this._closeButton.focus());\r\n\t\t\t\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\t\t\r\n\t\tprivate _close = (): void => { \r\n\t\tthis._doc.undo();\r\n\t}\r\n\t\t\r\n\t\tpublic cleanUp = (): void => { \r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChannelRow } from \"./ChannelRow\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _channelRowContainer: HTMLElement = HTML.div({style: `display: flex; flex-direction: column; padding-top: ${Config.barEditorHeight}px`});\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128});\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30});\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `position: absolute; top: 0;`},\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\"});\r\n\tpublic readonly container: HTMLElement = HTML.div({class: \"noSelection\", style: \"position: relative; overflow: hidden;\"},\r\n\t\tthis._channelRowContainer,\r\n\t\tthis._svg,\r\n\t\tthis._select,\r\n\t\tthis._barDropDown\r\n\t);\r\n\tprivate readonly _channels: ChannelRow[] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _renderedBarCount: number = -1;\r\n\tprivate _renderedEditorWidth: number = -1;\r\n\tprivate _renderedEditorHeight: number = -1;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\t\t\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\t\t\t\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\t\t\t\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\t\t\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\t\t\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\t\r\n\tpublic movePlayheadToMouse(): boolean {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\t\t\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / ChannelRow.patternHeight)));\r\n\t}\r\n\t\t\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\t\t\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\t\t\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / ChannelRow.patternHeight)));\r\n\t}\r\n\t\t\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\tif (event.shiftKey) {\r\n\t\t\tthis._mouseDragging = true;\r\n\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t} else {\r\n\t\t\tthis._mouseDragging = false;\r\n\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % ChannelRow.patternHeight) < ChannelRow.patternHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\t\t\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\t\t\t\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\t\t\t\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + ChannelRow.patternHeight * channel));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (ChannelRow.patternHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\t\t\t\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % ChannelRow.patternHeight) < ChannelRow.patternHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + ChannelRow.patternHeight * (channel + 0.5);\r\n\t\t\tconst base: number = ChannelRow.patternHeight * 0.1;\r\n\t\t\tconst tip: number = ChannelRow.patternHeight * 0.4;\r\n\t\t\tconst width: number = ChannelRow.patternHeight * 0.175;\r\n\t\t\t\t\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\t\t\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\t\t\t\t\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (ChannelRow.patternHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + ChannelRow.patternHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = ChannelRow.patternHeight + \"px\";\r\n\t\t\t\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\t\tthis._select.appendChild(HTML.option({value: i}, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\t\tthis._select.removeChild(<Node> this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\t\t\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\t\t\r\n\t\tif (this._channels.length != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._channels.length; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tconst channelRow: ChannelRow = new ChannelRow(this._doc, y);\r\n\t\t\t\tthis._channels[y] = channelRow;\r\n\t\t\t\tthis._channelRowContainer.appendChild(channelRow.container);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._channels.length; y++) {\r\n\t\t\t\tthis._channelRowContainer.removeChild(this._channels[y].container);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._channels.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tthis._channels[j].render();\r\n\t\t}\r\n\t\t\t\r\n\t\tconst editorWidth: number = this._barWidth * this._doc.song.barCount;\r\n\t\tif (this._renderedEditorWidth != editorWidth) {\r\n\t\t\tthis._renderedEditorWidth = editorWidth;\r\n\t\t\tthis._channelRowContainer.style.width = editorWidth + \"px\";\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t}\r\n\t\t\t\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis._renderedEditorWidth = editorWidth;\r\n\t\t\tthis._channelRowContainer.style.width = editorWidth + \"px\";\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\t\t\r\n\t\tconst editorHeight: number = this._doc.song.getChannelCount() * ChannelRow.patternHeight;\r\n\t\tif (this._renderedEditorHeight != editorHeight) {\r\n\t\t\tthis._renderedEditorHeight = editorHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight + Config.barEditorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight + Config.barEditorHeight);\r\n\t\t\tthis.container.style.height = (editorHeight + Config.barEditorHeight) + \"px\";\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\t\t\r\n\t\tif (this._doc.selection.boxSelectionActive) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + ChannelRow.patternHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(ChannelRow.patternHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { InstrumentType, EffectType, Config, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, effectsIncludeNoteRange, effectsIncludeInvertWave, DropdownID } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { CustomFilterPrompt } from \"./CustomFilterPrompt\";\r\nimport { InstrumentExportPrompt } from \"./InstrumentExportPrompt\";\r\nimport { InstrumentImportPrompt } from \"./InstrumentImportPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport \"./Layout\"; // Imported here for the sake of ensuring this code is transpiled early.\r\nimport { Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Preferences } from \"./Preferences\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { ChannelRow } from \"./ChannelRow\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { EnvelopeEditor } from \"./EnvelopeEditor\";\r\nimport { FadeInOutEditor } from \"./FadeInOutEditor\";\r\nimport { FilterEditor } from \"./FilterEditor\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { MidiInputHandler } from \"./MidiInput\";\r\nimport { KeyboardLayout } from \"./KeyboardLayout\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SustainPrompt } from \"./SustainPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { RecordingSetupPrompt } from \"./RecordingSetupPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { ChangeTempo, ChangeChorus, ChangeEchoDelay, ChangeEchoSustain, ChangeReverb, ChangeVolume, ChangePan, ChangePatternSelection, ChangePatternsPerChannel, ChangePatternNumbers, ChangeSupersawDynamism, ChangeSupersawSpread, ChangeSupersawShape, ChangePulseWidth, ChangeFeedbackAmplitude, ChangeOperatorAmplitude, ChangeOperatorFrequency, ChangeDrumsetEnvelope, ChangePasteInstrument, ChangePreset, pickRandomPresetValue, ChangeRandomGeneratedInstrument, ChangeEQFilterType, ChangeNoteFilterType, ChangeEQFilterSimpleCut, ChangeEQFilterSimplePeak, ChangeNoteFilterSimpleCut, ChangeNoteFilterSimplePeak, ChangeScale, ChangeDetectKey, ChangeKey, ChangeRhythm, ChangeFeedbackType, ChangeAlgorithm, ChangeChipWave, ChangeNoiseWave, ChangeTransition, ChangeToggleEffects, ChangeVibrato, ChangeUnison, ChangeChord, ChangeSong, ChangePitchShift, ChangeDetune, ChangeDistortion, ChangeStringSustain, ChangeBitcrusherFreq, ChangeBitcrusherQuantization, ChangeAddEnvelope, ChangeEnvelopeSpeed, ChangeDiscreteEnvelope, ChangeAddChannelInstrument, ChangeRemoveChannelInstrument, ChangeCustomWave, ChangeOperatorWaveform, ChangeOperatorPulseWidth, ChangeSongTitle, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangeVibratoType, ChangePanDelay, ChangeArpeggioSpeed, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeAliasing, ChangeSetPatternInstruments, ChangeHoldingModRecording, ChangeInvertWave, ChangeLowerLimit, ChangeUpperLimit, ChangeOperatorHzOffset, ChangeOperatorInvert, ChangeSongReverb, ChangeSongDetune } from \"./changes\";\r\n\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n    for (let index: number = 0; index < items.length; index++) {\r\n        menu.appendChild(option({ value: index }, items[index]));\r\n    }\r\n    return menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n    menu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n    for (const item of items) {\r\n        menu.appendChild(option({ value: item }, item));\r\n    }\r\n    return menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n    const menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\r\n    // Show the \"spectrum\" custom type in both pitched and noise channels.\r\n    //const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n    if (isNoise) {\r\n        menu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n    } else {\r\n        menu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.supersaw}, EditorConfig.valueToPreset(InstrumentType.supersaw)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.pickedString }, EditorConfig.valueToPreset(InstrumentType.pickedString)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n        menu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n    }\r\n\r\n    const randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n    randomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n    randomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n    menu.appendChild(randomGroup);\r\n\r\n\r\n    for (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n        const group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n        let foundAny: boolean = false;\r\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n            const preset: Preset = category.presets[presetIndex];\r\n            if ((preset.isNoise == true) == isNoise) {\r\n                group.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n                foundAny = true;\r\n            }\r\n        }\r\n\r\n        // Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n        if (category.name == \"String Presets\" && foundAny) {\r\n\r\n            // Put violin 2 after violin 1\r\n            let moveViolin2 = group.removeChild(group.children[11]);\r\n            group.insertBefore(moveViolin2, group.children[1]);\r\n        }\r\n\r\n        if (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n            // Put flute 2 after flute 1\r\n            let moveFlute2 = group.removeChild(group.children[11]);\r\n            group.insertBefore(moveFlute2, group.children[1]);\r\n        }\r\n\r\n        if (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n            // Put grand piano 2 and 3 after grand piano 1\r\n            let moveGrandPiano2 = group.removeChild(group.children[9]);\r\n            let moveGrandPiano3 = group.removeChild(group.children[9]);\r\n            group.insertBefore(moveGrandPiano3, group.children[1]);\r\n            group.insertBefore(moveGrandPiano2, group.children[1]);\r\n        }\r\n\r\n        if (foundAny) menu.appendChild(group);\r\n    }\r\n\r\n    return menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number, isSelect2: boolean = false): void {\r\n    const stringValue = value.toString();\r\n    if (menu.value != stringValue) {\r\n        menu.value = stringValue;\r\n\r\n        // Change select2 value, if this select is a member of that class.\r\n        if (isSelect2) {\r\n            $(menu).val(value).trigger('change.select2');\r\n        }\r\n    }\r\n}\r\n\r\nclass CustomChipCanvas {\r\n    private mouseDown: boolean;\r\n    private continuousEdit: boolean;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    public newArray: Float32Array;\r\n    public renderedArray: Float32Array;\r\n    public renderedColor: string;\r\n\r\n    private _change: Change | null = null;\r\n\r\n    constructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float32Array) => Change) {\r\n        canvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n        canvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n        canvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n        canvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n        this.mouseDown = false;\r\n        this.continuousEdit = false;\r\n        this.lastX = 0;\r\n        this.lastY = 0;\r\n\r\n        this.newArray = new Float32Array(64);\r\n        this.renderedArray = new Float32Array(64);\r\n        this.renderedColor = \"\";\r\n\r\n        // Init waveform\r\n        this.redrawCanvas();\r\n\r\n    }\r\n\r\n    public redrawCanvas(): void {\r\n        const chipData: Float32Array = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave;\r\n        const renderColor: string = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n        // Check if the data has changed from the last render.\r\n        let needsRedraw: boolean = false;\r\n        if (renderColor != this.renderedColor) {\r\n            needsRedraw = true;\r\n        } else for (let i: number = 0; i < 64; i++) {\r\n            if (chipData[i] != this.renderedArray[i]) {\r\n                needsRedraw = true;\r\n                i = 64;\r\n            }\r\n        }\r\n        if (!needsRedraw) {\r\n            return;\r\n        }\r\n\r\n        this.renderedArray.set(chipData);\r\n\r\n        var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        // Black BG\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n        ctx.fillRect(0, 0, 128, 52);\r\n\r\n        // Mid-bar\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n        ctx.fillRect(0, 25, 128, 2);\r\n\r\n        // 25-75 bars\r\n        ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n        ctx.fillRect(0, 13, 128, 1);\r\n        ctx.fillRect(0, 39, 128, 1);\r\n\r\n        // Waveform\r\n        ctx.fillStyle = renderColor;\r\n\r\n        for (let x: number = 0; x < 64; x++) {\r\n            var y: number = chipData[x] + 26;\r\n            ctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n            this.newArray[x] = y - 26;\r\n        }\r\n    }\r\n\r\n    private _onMouseMove = (event: MouseEvent): void => {\r\n        if (this.mouseDown) {\r\n\r\n            var x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n            var y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n            if (y < 2) y = 2;\r\n            if (y > 50) y = 50;\r\n\r\n            var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n            if (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n                var lowerBound = (x < this.lastX) ? x : this.lastX;\r\n                var upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n                for (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n                    var progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n                        1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n                        : ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n                    var j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n                    ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n                    ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n                    ctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n                    // Actually update current instrument's custom waveform\r\n                    this.newArray[Math.floor(i / 2)] = (j - 26);\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n                ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n                ctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n                ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n                ctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n                // Actually update current instrument's custom waveform\r\n                this.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n            }\r\n\r\n            this.continuousEdit = true;\r\n            this.lastX = x;\r\n            this.lastY = y;\r\n\r\n            // Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n            let sum: number = 0.0;\r\n            for (let i: number = 0; i < this.newArray.length; i++) {\r\n                sum += this.newArray[i];\r\n            }\r\n            const average: number = sum / this.newArray.length;\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < this.newArray.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = this.newArray[i] - average;\r\n                instrument.customChipWaveIntegral[i] = cumulative;\r\n            }\r\n\r\n            instrument.customChipWaveIntegral[64] = 0.0;\r\n        }\r\n\r\n    }\r\n\r\n    private _onMouseDown = (event: MouseEvent): void => {\r\n        this.mouseDown = true;\r\n\r\n        // Allow single-click edit\r\n        this._onMouseMove(event);\r\n    }\r\n    private _onMouseUp = (): void => {\r\n        this.mouseDown = false;\r\n        this.continuousEdit = false;\r\n\r\n        this._whenChange();\r\n    }\r\n\r\n    private _whenChange = (): void => {\r\n        this._change = this._getChange(this.newArray);\r\n\r\n        this._doc.record(this._change!);\r\n\r\n        this._change = null;\r\n    };\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n    public prompt: Prompt | null = null;\r\n\r\n    private readonly _keyboardLayout: KeyboardLayout = new KeyboardLayout(this._doc);\r\n    private readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n    private readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n    private readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n    private readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n    private readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n    private readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n    private readonly _piano: Piano = new Piano(this._doc);\r\n    private readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n    private readonly _playButton: HTMLButtonElement = button({ class: \"playButton\", type: \"button\", title: \"Play (Space)\" }, span(\"Play\"));\r\n    private readonly _pauseButton: HTMLButtonElement = button({ class: \"pauseButton\", style: \"display: none;\", type: \"button\", title: \"Pause (Space)\" }, \"Pause\");\r\n    private readonly _recordButton: HTMLButtonElement = button({ class: \"recordButton\", style: \"display: none;\", type: \"button\", title: \"Record (Ctrl+Space)\" }, span(\"Record\"));\r\n    private readonly _stopButton: HTMLButtonElement = button({ class: \"stopButton\", style: \"display: none;\", type: \"button\", title: \"Stop Recording (Space)\" }, \"Stop Recording\");\r\n    private readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n    private readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n    private readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n    private readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n    private readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n    private readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n    private readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n    private readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n    private readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n    private readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n    private readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n    private readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n        this._defs,\r\n        this._outVolumeBarBg,\r\n        this._outVolumeBar,\r\n        this._outVolumeCap,\r\n    );\r\n    private readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n        this._volumeBarContainer,\r\n    );\r\n    private readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n        option({ value: \"new\" }, \"+ New Blank Song\"),\r\n        option({ value: \"import\" }, \"↑ Import Song... (\" + EditorConfig.ctrlSymbol + \"O)\"),\r\n        option({ value: \"export\" }, \"↓ Export Song... (\" + EditorConfig.ctrlSymbol + \"S)\"),\r\n        option({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n        option({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n        option({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n        option({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n        option({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n        option({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n    );\r\n    private readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n        option({ value: \"undo\" }, \"Undo (Z)\"),\r\n        option({ value: \"redo\" }, \"Redo (Y)\"),\r\n        option({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n        option({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n        option({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (\" + EditorConfig.ctrlSymbol + \"⇧V)\"),\r\n        option({ value: \"insertBars\" }, \"Insert Bar (⏎)\"),\r\n        option({ value: \"deleteBars\" }, \"Delete Selected Bars (⌫)\"),\r\n        option({ value: \"insertChannel\" }, \"Insert Channel (\" + EditorConfig.ctrlSymbol + \"⏎)\"),\r\n        option({ value: \"deleteChannel\" }, \"Delete Selected Channels (\" + EditorConfig.ctrlSymbol + \"⌫)\"),\r\n        option({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n        option({ value: \"selectAll\" }, \"Select All (A)\"),\r\n        option({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n        option({ value: \"transposeUp\" }, \"Move Notes Up (+ or ⇧+)\"),\r\n        option({ value: \"transposeDown\" }, \"Move Notes Down (- or ⇧-)\"),\r\n        option({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n        option({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n        option({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n        option({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n        option({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n    );\r\n    private readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n        option({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n        option({ value: \"autoPlay\" }, \"Auto Play on Load\"),\r\n        option({ value: \"autoFollow\" }, \"Auto Follow Playhead\"),\r\n        option({ value: \"enableNotePreview\" }, \"Hear Added Notes\"),\r\n        option({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n        option({ value: \"showFifth\" }, 'Highlight \"Fifth\" Note'),\r\n        option({ value: \"showThird\" }, 'Highlight \"Third\" Note'),\r\n        option({ value: \"notesOutsideScale\" }, \"Place Notes Out of Scale\"),\r\n        option({ value: \"setDefaultScale\" }, \"Set Current Scale as Default\"),\r\n        option({ value: \"showChannels\" }, \"Show All Channels\"),\r\n        option({ value: \"showScrollBar\" }, \"Show Octave Scroll Bar\"),\r\n        option({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Volume\"),\r\n        option({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n        option({ value: \"displayBrowserUrl\" }, \"Show Song Data in URL\"),\r\n        option({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n        option({ value: \"notesFlashWhenPlayed\" }, \"Notes Flash When Played\"),\r\n        option({ value: \"layout\" }, \"Set Layout...\"),\r\n        option({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n        option({ value: \"recordingSetup\" }, \"Note Recording...\"),\r\n    );\r\n    private readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n    private readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n    private readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n    private readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n    \r\n    private readonly _songDetuneSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: Config.songDetuneMin, max: Config.songDetuneMax, value: Config.songDetuneMax/2, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeSongDetune(this._doc, oldValue, newValue), false);\r\n    private readonly _songDetuneStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n    \r\n    private readonly _songReverbSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"0\", max: Config.reverbRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeSongReverb(this._doc, oldValue, newValue), false);\r\n    private readonly _songReverbStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n    \r\n    \r\n    private readonly _chorusSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.chorusRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeChorus(this._doc, oldValue, newValue), false);\r\n    private readonly _chorusRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chorus\") }, \"Chorus:\"), this._chorusSlider.container);\r\n    private readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky,\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n    private readonly _reverbRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb:\"), this._reverbSlider.container);\r\n    private readonly _echoSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoSustain(this._doc, oldValue, newValue), false);\r\n    private readonly _echoSustainRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoSustain\") }, \"Echo:\"), this._echoSustainSlider.container);\r\n    private readonly _echoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoDelayRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoDelay(this._doc, oldValue, newValue), false);\r\n    private readonly _echoDelayRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoDelay\") }, \"Echo Delay:\"), this._echoDelaySlider.container);\r\n    private readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n    private readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n    private readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n    private readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n    private readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n    private readonly _instrumentButtons: HTMLButtonElement[] = [];\r\n    private readonly _instrumentAddButton: HTMLButtonElement = button({ type: \"button\", class: \"add-instrument last-button\" });\r\n    private readonly _instrumentRemoveButton: HTMLButtonElement = button({ type: \"button\", class: \"remove-instrument\" });\r\n    private readonly _instrumentsButtonBar: HTMLDivElement = div({ class: \"instrument-bar\" }, this._instrumentRemoveButton, this._instrumentAddButton);\r\n    private readonly _instrumentsButtonRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument:\"), this._instrumentsButtonBar);\r\n    private readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n    private readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n    private readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n    private readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        div({ style: `color: ${ColorConfig.secondaryText};` }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n        div({ style: `color: ${ColorConfig.secondaryText}; margin-top: -3px;` }, this._instrumentVolumeSliderInputBox),\r\n    ), this._instrumentVolumeSlider.container);\r\n    private readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n    private readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Pan) }, \"▼\");\r\n    private readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n    private readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        span({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n    ), this._panDropdown, this._panSlider.container);\r\n    private readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"pan delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n    private readonly _panDelayRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"‣ Delay:\"), this._panDelaySlider.container);\r\n    private readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._panDelayRow);\r\n    private readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n    private readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n    private readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n    private readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n    private readonly _fadeInOutEditor: FadeInOutEditor = new FadeInOutEditor(this._doc);\r\n    private readonly _fadeInOutRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"fadeInOut\") }, \"Fade:\"), this._fadeInOutEditor.container);\r\n    private readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n    private readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Transition) }, \"▼\");\r\n    private readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\", style: \"width: 52.5%;\" }, this._transitionSelect));\r\n    private readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"‣ Clickless:\"), this._clicklessTransitionBox);\r\n    private readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._clicklessTransitionRow);\r\n\r\n    private readonly _effectsSelect: HTMLSelectElement = select(option({ selected: true, disabled: true, hidden: false })); // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\r\n    private readonly _eqFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchEQFilterType(true) }, \"simple\");\r\n    private readonly _eqFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchEQFilterType(false) }, \"advanced\");\r\n    private readonly _eqFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"EQ Filt.Type:\"), div({ class: \"instrument-bar\" }, this._eqFilterSimpleButton, this._eqFilterAdvancedButton));\r\n    private readonly _eqFilterEditor: FilterEditor = new FilterEditor(this._doc);\r\n    private readonly _eqFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customEQFilterSettings\") }, \"+\");\r\n    private readonly _eqFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"eqFilter\") }, \"EQ Filt:\"), this._eqFilterZoom, this._eqFilterEditor.container);\r\n    private readonly _eqFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimpleCut(this._doc, oldValue, newValue), false);\r\n    private _eqFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._eqFilterSimpleCutSlider.container);\r\n    private readonly _eqFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimplePeak(this._doc, oldValue, newValue), false);\r\n    private _eqFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._eqFilterSimplePeakSlider.container);\r\n\r\n    private readonly _noteFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchNoteFilterType(true) }, \"simple\");\r\n    private readonly _noteFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchNoteFilterType(false) }, \"advanced\");\r\n    private readonly _noteFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"Note Filt.Type:\"), div({ class: \"instrument-bar\" }, this._noteFilterSimpleButton, this._noteFilterAdvancedButton));\r\n    private readonly _noteFilterEditor: FilterEditor = new FilterEditor(this._doc, true);\r\n    private readonly _noteFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customNoteFilterSettings\") }, \"+\");\r\n    private readonly _noteFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"noteFilter\") }, \"Note Filt:\"), this._noteFilterZoom, this._noteFilterEditor.container);\r\n    private readonly _supersawDynamismSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawDynamismMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawDynamism(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _supersawDynamismRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawDynamism\")}, \"Dynamism:\"), this._supersawDynamismSlider.container);\r\n\tprivate readonly _supersawSpreadSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawSpreadMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawSpread(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _supersawSpreadRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawSpread\")}, \"Spread:\"), this._supersawSpreadSlider.container);\r\n\tprivate readonly _supersawShapeSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawShapeMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawShape(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _supersawShapeRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawShape\"), style: \"overflow: clip;\"}, \"Saw↔Pulse:\"), this._supersawShapeSlider.container);\r\n\r\n    private readonly _noteFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimpleCut(this._doc, oldValue, newValue), false);\r\n    private _noteFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._noteFilterSimpleCutSlider.container);\r\n    private readonly _noteFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimplePeak(this._doc, oldValue, newValue), false);\r\n    private _noteFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._noteFilterSimplePeakSlider.container);\r\n\r\n    private readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"1\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n    private readonly _pwmSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"pwmSliderInputBox\", type: \"number\", step: \"1\", min: \"1\", max: Config.pulseWidthRange, value: \"1\" });\r\n    private readonly _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        span({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"PulseWidth:\"),\r\n        div({ style: `color: ${ColorConfig.secondaryText}; margin-top: -3px;` }, this._pwmSliderInputBox)\r\n        ), this._pulseWidthSlider.container);\r\n\r\n    private readonly _pitchShiftSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.pitchShiftRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePitchShift(this._doc, oldValue, newValue), true);\r\n    private readonly _pitchShiftTonicMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"50%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"100%\" } })];\r\n    private readonly _pitchShiftFifthMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 7 / 24) + \"%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 19 / 24) + \"%\" } })];\r\n    private readonly _pitchShiftThirdMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.thirdNote, left: (100 * 4 / 24) + \"%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.thirdNote, left: (100 * 18 / 24) + \"%\" } })];//this is wrong plz fix\r\n    private readonly _pitchShiftMarkerContainer: HTMLDivElement = div({ style: \"display: flex; position: relative;\" }, this._pitchShiftSlider.container, div({ class: \"pitchShiftMarkerContainer\" }, this._pitchShiftTonicMarkers, this._pitchShiftFifthMarkers, this._pitchShiftThirdMarkers));\r\n    private readonly _pitchShiftRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pitchShift\") }, \"Pitch Shift:\"), this._pitchShiftMarkerContainer);\r\n    private readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0, step: \"4\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n    private readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0 });\r\n    private readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n        div({ style: `color: ${ColorConfig.secondaryText}; margin-top: -3px;` }, this._detuneSliderInputBox),\r\n    ), this._detuneSlider.container);\r\n    private readonly _distortionSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.distortionRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDistortion(this._doc, oldValue, newValue), false);\r\n    private readonly _distortionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"distortion\") }, \"Distortion:\"), this._distortionSlider.container);\r\n    private readonly _aliasingBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _aliasingRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"aliases\") }, \"Aliasing:\"), this._aliasingBox);\r\n    private readonly _bitcrusherQuantizationSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherQuantizationRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherQuantization(this._doc, oldValue, newValue), false);\r\n    private readonly _bitcrusherQuantizationRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherQuantization\") }, \"Bit Crush:\"), this._bitcrusherQuantizationSlider.container);\r\n    private readonly _bitcrusherFreqSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherFreqRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherFreq(this._doc, oldValue, newValue), false);\r\n    private readonly _bitcrusherFreqRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherFreq\") }, \"Freq Crush:\"), this._bitcrusherFreqSlider.container);\r\n    private readonly _stringSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.stringSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeStringSustain(this._doc, oldValue, newValue), false);\r\n    private readonly _stringSustainLabel: HTMLSpanElement = span({class: \"tip\", onclick: ()=>this._openPrompt(\"stringSustain\")}, \"Sustain:\");\r\n\tprivate readonly _stringSustainRow: HTMLDivElement = div({class: \"selectRow\"}, this._stringSustainLabel, this._stringSustainSlider.container);\r\n\tprivate readonly _unisonSelect: HTMLSelectElement = buildOptions(select(), Config.unisons.map(unison => unison.name));\r\n    private readonly _unisonSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"unison\") }, \"Unison:\"), div({ class: \"selectContainer\" }, this._unisonSelect));\r\n    private readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n    private readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Chord) }, \"▼\");\r\n\r\n    private readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\" }, this._chordSelect));\r\n    private readonly _arpeggioSpeedDisplay: HTMLSpanElement = span({ style: `color: ${ColorConfig.secondaryText}; font-size: smaller; text-overflow: clip;` }, \"x1\");\r\n    private readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"arp speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n    private readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"‣ Spd:\"), this._arpeggioSpeedDisplay, this._arpeggioSpeedSlider.container);\r\n    private readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"‣ Fast Two-Note:\"), this._twoNoteArpBox);\r\n    private readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\r\n    private readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n    private readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Vibrato) }, \"▼\");\r\n    private readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n    private readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato depth\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n    private readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"‣ Depth:\"), this._vibratoDepthSlider.container);\r\n    private readonly _vibratoSpeedDisplay: HTMLSpanElement = span({ style: `color: ${ColorConfig.secondaryText}; font-size: smaller; text-overflow: clip;` }, \"x1\");\r\n    private readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0; text-overflow: clip;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n    private readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"‣ Spd:\"), this._vibratoSpeedDisplay, this._vibratoSpeedSlider.container);\r\n    private readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n    private readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"‣ Delay:\"), this._vibratoDelaySlider.container);\r\n    private readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n    private readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"‣ Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n    private readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: `display: none;` }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n    private readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n    private readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n    private readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n    private readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n    private readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n    private readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n    private readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\r\n    private readonly _envelopeEditor: EnvelopeEditor = new EnvelopeEditor(this._doc);\r\n    private readonly _discreteEnvelopeBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _discreteEnvelopeRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"discreteEnvelope\") }, \"‣ Discrete:\"), this._discreteEnvelopeBox);\r\n    private readonly _envelopeSpeedDisplay: HTMLSpanElement = span({ style: `color: ${ColorConfig.secondaryText}; font-size: smaller; text-overflow: clip;` }, \"x1\");\r\n    private readonly _envelopeSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"envelope speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEnvelopeSpeed(this._doc, oldValue, newValue), false);\r\n    private readonly _envelopeSpeedRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"envelopeSpeed\") }, \"‣ Spd:\"), this._envelopeSpeedDisplay, this._envelopeSpeedSlider.container);\r\n    private readonly _envelopeDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._discreteEnvelopeRow, this._envelopeSpeedRow);\r\n    private readonly _envelopeDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; margin-right: 1em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Envelope) }, \"▼\");\r\n\r\n    private readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n    private readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n    private readonly _modNameRows: HTMLElement[];\r\n    private readonly _modChannelBoxes: HTMLSelectElement[];\r\n    private readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n    private readonly _modSetRows: HTMLElement[];\r\n    private readonly _modSetBoxes: HTMLSelectElement[];\r\n    private readonly _modFilterRows: HTMLElement[];\r\n    private readonly _modFilterBoxes: HTMLSelectElement[];\r\n    private readonly _modTargetIndicators: SVGElement[];\r\n\r\n    private readonly _invertWaveBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n    private readonly _invertWaveRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"invertWave\") }, \"Invert Wave:\"), this._invertWaveBox);\r\n\r\n    private readonly _upperNoteLimitInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"upperNoteLimitInputBox\", type: \"number\", step: \"1\", min: 0, max: Config.maxPitch, value: 60 });\r\n    private readonly _upperNoteLimitRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"upperNoteLimit\") }, \"Upper Note Limit:\"), this._upperNoteLimitInputBox);\r\n    private readonly _lowerNoteLimitInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"lowerNoteLimitInputBox\", type: \"number\", step: \"1\", min: 0, max: Config.maxPitch, value: 60 });\r\n    private readonly _lowerNoteLimitRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"lowerNoteLimit\") }, \"Lower Note Limit:\"), this._lowerNoteLimitInputBox);\r\n\r\n    private readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px; width: 86px;\", class: \"copyButton\", title: \"Copy Instrument (⇧C)\" }, [\r\n        \"Copy\",\r\n        // Copy icon:\r\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n            SVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n        ]),\r\n    ]);\r\n    private readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\", title: \"Paste Instrument (⇧V)\" }, [\r\n        \"Paste\",\r\n        // Paste icon:\r\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n            SVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n            SVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n        ]),\r\n    ]);\r\n\r\n    private readonly _instrumentExportButton: HTMLButtonElement = button({ style: \"max-width:86px; width: 86px;\", class: \"exportInstrumentButton\" }, [\r\n        \"Export\",\r\n        // Export icon:\r\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 -960 960 960\" }, [\r\n            SVG.path({ d: \"M200-120v-40h560v40H200Zm279.231-150.769L254.615-568.462h130.769V-840h188.462v271.538h130.77L479.231-270.769Zm0-65.385 142.923-191.538h-88.308V-800H425.385v272.308h-88.308l142.154 191.538ZM480-527.692Z\", fill: \"currentColor\" }),\r\n        ]),\r\n    ]);\r\n    private readonly _instrumentImportButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"importInstrumentButton\" }, [\r\n        \"Import\",\r\n        // Import icon:\r\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 -960 960 960\" }, [\r\n            SVG.path({ d: \"M200-120v-40h560v40H200Zm185.384-150.769v-271.539H254.615L480-840l224.616 297.692h-130.77v271.539H385.384Zm40.001-40h108.461v-272.308h88.308L480-774.615 337.077-583.077h88.308v272.308ZM480-583.077Z\", fill: \"currentColor\"}),\r\n        ]),\r\n    ]);\r\n\r\n    private readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float32Array) => new ChangeCustomWave(this._doc, newArray));\r\n    private readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n        Config.chipWaves.map(wave => wave.name)\r\n    );\r\n    private readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n    private readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n        div({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n        div({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n    ]);\r\n\r\n    private readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 98%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n    private readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n    private readonly _feedbackRow2: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackVolume\") }, \"Fdback Vol:\"), this._feedbackAmplitudeSlider.container);\r\n    /*\r\n     * @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n     *\r\n    private readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n        \"Customize Instrument\",\r\n    );\r\n    */\r\n    private readonly _addEnvelopeButton: HTMLButtonElement = button({ type: \"button\", class: \"add-envelope\" });\r\n    private readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        this._panSliderRow,\r\n        this._panDropdownGroup,\r\n        this._chipWaveSelectRow,\r\n        this._chipNoiseSelectRow,\r\n        this._customWaveDraw,\r\n        this._eqFilterTypeRow,\r\n        this._eqFilterRow,\r\n        this._eqFilterSimpleCutRow,\r\n        this._eqFilterSimplePeakRow,\r\n        this._fadeInOutRow,\r\n        this._algorithmSelectRow,\r\n        this._phaseModGroup,\r\n        this._feedbackRow1,\r\n        this._feedbackRow2,\r\n        this._spectrumRow,\r\n        this._harmonicsRow,\r\n        this._drumsetGroup,\r\n\t\tthis._supersawDynamismRow,\r\n\t\tthis._supersawSpreadRow,\r\n\t\tthis._supersawShapeRow,\r\n        this._pulseWidthRow,\r\n        this._stringSustainRow,\r\n        this._unisonSelectRow,\r\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\r\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects\")),\r\n            div({ class: \"effects-menu\" }, this._effectsSelect),\r\n        ),\r\n        this._transitionRow,\r\n        this._transitionDropdownGroup,\r\n        this._chordSelectRow,\r\n        this._chordDropdownGroup,\r\n        this._pitchShiftRow,\r\n        this._detuneSliderRow,\r\n        this._vibratoSelectRow,\r\n        this._vibratoDropdownGroup,\r\n        this._noteFilterTypeRow,\r\n        this._noteFilterRow,\r\n        this._noteFilterSimpleCutRow,\r\n        this._noteFilterSimplePeakRow,\r\n        this._distortionRow,\r\n        this._aliasingRow,\r\n        this._bitcrusherQuantizationRow,\r\n        this._bitcrusherFreqRow,\r\n        this._chorusRow,\r\n        this._echoSustainRow,\r\n        this._echoDelayRow,\r\n        this._reverbRow,\r\n        this._upperNoteLimitRow,\r\n        this._lowerNoteLimitRow,\r\n        this._invertWaveRow,\r\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\r\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"envelopes\") }, \"Envelopes\")),\r\n            this._envelopeDropdown,\r\n            this._addEnvelopeButton,\r\n        ),\r\n        this._envelopeDropdownGroup,\r\n        this._envelopeEditor.container,\r\n    );\r\n    private readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        div({ class: \"selectRow\" },\r\n            this._instrumentCopyButton,\r\n            this._instrumentPasteButton,\r\n        ),\r\n    );\r\n    private readonly _instrumentExportGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        div({ class: \"selectRow\" },\r\n            this._instrumentExportButton,\r\n            this._instrumentImportButton,\r\n        ),\r\n    );\r\n    private readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `padding: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n        \"Instrument Settings\"\r\n    );\r\n    private readonly _instrumentTypeSelectRow: HTMLDivElement = div({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n        span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type:\"),\r\n        div(\r\n            div({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n            div({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n        ),\r\n    );\r\n    private readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n        this._instrumentSettingsTextRow,\r\n        this._instrumentsButtonRow,\r\n        this._instrumentTypeSelectRow,\r\n        this._instrumentVolumeSliderRow,\r\n        //this._customizeInstrumentButton,\r\n        this._customInstrumentSettingsGroup,\r\n    );\r\n    private readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n    private readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n    private readonly _jumpToModIndicator: SVGElement = SVG.svg({ style: \"width: 92%; height: 1.3em; flex-shrink: 0; position: absolute;\", viewBox: \"0 0 200 200\" }, [\r\n        SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\r\n        SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\r\n        SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\r\n        SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\r\n        SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\r\n\r\n    private readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n    private readonly _zoomInButton: HTMLButtonElement = button({ class: \"zoomInButton\", type: \"button\", title: \"Zoom In\" });\r\n    private readonly _zoomOutButton: HTMLButtonElement = button({ class: \"zoomOutButton\", type: \"button\", title: \"Zoom Out\" });\r\n    private readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n        this._patternEditorPrev.container,\r\n        this._patternEditor.container,\r\n        this._patternEditorNext.container,\r\n    );\r\n    private readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n        this._piano.container,\r\n        this._patternEditorRow,\r\n        this._octaveScrollBar.container,\r\n        this._zoomInButton,\r\n        this._zoomOutButton,\r\n    );\r\n    private readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n        this._trackEditor.container,\r\n        this._loopEditor.container,\r\n    );\r\n    private readonly _trackVisibleArea: HTMLDivElement = div({ style: \"position: absolute; width: 100%; height: 100%; pointer-events: none;\" });\r\n    private readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n        this._muteEditor.container,\r\n        this._trackContainer,\r\n        this._trackVisibleArea,\r\n    );\r\n    public readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc);\r\n    private readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n        this._trackAndMuteContainer,\r\n        this._barScrollBar.container,\r\n    );\r\n\r\n    private readonly _menuArea: HTMLDivElement = div({ class: \"menu-area\" },\r\n        div({ class: \"selectContainer menu file\" },\r\n            this._fileMenu,\r\n        ),\r\n        div({ class: \"selectContainer menu edit\" },\r\n            this._editMenu,\r\n        ),\r\n        div({ class: \"selectContainer menu preferences\" },\r\n            this._optionsMenu,\r\n        ),\r\n    );\r\n    private readonly _songSettingsArea: HTMLDivElement = div({ class: \"song-settings-area\" },\r\n        div({ class: \"editor-controls\" },\r\n            div({ class: \"editor-song-settings\" },\r\n                div({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n                            this._usedPatternIndicator,\r\n                        ),\r\n                    ),\r\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n                            this._usedInstrumentIndicator,\r\n                        ),\r\n                    ),\r\n                    \"Song Settings\",\r\n                    div({ style: \"width: 100%; left: 0; top: -1px; position:absolute; overflow-x:clip;\" }, this._jumpToModIndicator),\r\n                ),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n                div({ class: \"selectContainer\" }, this._scaleSelect),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n                div({ class: \"selectContainer\" }, this._keySelect),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n                span({ style: \"display: flex;\" },\r\n                    this._tempoSlider.container,\r\n                    this._tempoStepper,\r\n                ),\r\n            ),\r\n            div({ class: \"selectRow\", style: \"display: none;\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"songDetune\") }, \"Detune: \"),\r\n                span({ style: \"display: flex;\" },\r\n                    this._songDetuneSlider.container,\r\n                    this._songDetuneStepper,\r\n                ),\r\n            ),\r\n            div({ class: \"selectRow\", style: \"display: none;\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"songReverb\") }, \"Reverb: \"),\r\n                span({ style: \"display: flex;\" },\r\n                    this._songReverbSlider.container,\r\n                    this._songReverbStepper,\r\n                ),\r\n            ),\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n                div({ class: \"selectContainer\" }, this._rhythmSelect),\r\n            ),\r\n        ),\r\n    );\r\n    private readonly _instrumentSettingsArea: HTMLDivElement = div({ class: \"instrument-settings-area\" },\r\n        this._instrumentSettingsGroup,\r\n        this._modulatorGroup);\r\n    public readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n        div({ class: \"version-area\" },\r\n            div({ style: `text-align: center; margin: 3px 0; color: ${ColorConfig.secondaryText};` },\r\n                this._songTitleInputBox.input,\r\n            ),\r\n        ),\r\n        div({ class: \"play-pause-area\" },\r\n            this._volumeBarBox,\r\n            div({ class: \"playback-bar-controls\" },\r\n                this._playButton,\r\n                this._pauseButton,\r\n                this._recordButton,\r\n                this._stopButton,\r\n                this._prevBarButton,\r\n                this._nextBarButton,\r\n            ),\r\n            div({ class: \"playback-volume-controls\" },\r\n                span({ class: \"volume-speaker\" }),\r\n                this._volumeSlider.container,\r\n            ),\r\n        ),\r\n        this._menuArea,\r\n        this._songSettingsArea,\r\n        this._instrumentSettingsArea,\r\n    );\r\n\r\n    public readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n        this._patternArea,\r\n        this._trackArea,\r\n        this._settingsArea,\r\n        this._promptContainer,\r\n    );\r\n\r\n    private _wasPlaying: boolean = false;\r\n    private _currentPromptName: string | null = null;\r\n    private _highlightedInstrumentIndex: number = -1;\r\n    private _renderedInstrumentCount: number = 0;\r\n    private _renderedIsPlaying: boolean = false;\r\n    private _renderedIsRecording: boolean = false;\r\n    private _renderedShowRecordButton: boolean = false;\r\n    private _renderedCtrlHeld: boolean = false;\r\n    private _ctrlHeld: boolean = false;\r\n    private _shiftHeld: boolean = false;\r\n    private _deactivatedInstruments: boolean = false;\r\n    private readonly _operatorRows: HTMLDivElement[] = [];\r\n    private readonly _operatorAmplitudeSliders: Slider[] = [];\r\n    private readonly _operatorFrequencyInputs: HTMLInputElement[] = [];\r\n    private readonly _operatorDropdowns: HTMLButtonElement[] = [];\r\n    private readonly _operatorWaveformSelects: HTMLSelectElement[] = [];\r\n    private readonly _operatorWaveformHints: HTMLSpanElement[] = [];\r\n    private readonly _operatorWaveformPulsewidthSliders: Slider[] = [];\r\n    private readonly _operatorHzOffsetInputs: HTMLInputElement[] = [];\r\n    private readonly _operatorHzOffsetHints: HTMLSpanElement[] = [];\r\n    private readonly _operatorInvertCheckboxes: HTMLInputElement[] = [];\r\n    private readonly _operatorInvertHints: HTMLSpanElement[] = [];\r\n    private readonly _operatorDropdownRows: HTMLElement[] = []\r\n    private readonly _operatorDropdownGroups: HTMLDivElement[] = [];\r\n    private readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n    private readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n    private _showModSliders: boolean[] = [];\r\n    private _newShowModSliders: boolean[] = [];\r\n    private _modSliderValues: number[] = [];\r\n    private _hasActiveModSliders: boolean = false;\r\n\r\n    private _openPanDropdown: boolean = false;\r\n    private _openVibratoDropdown: boolean = false;\r\n    private _openEnvelopeDropdown: boolean = false;\r\n    private _openChordDropdown: boolean = false;\r\n    private _openTransitionDropdown: boolean = false;\r\n    private _openOperatorDropdowns: boolean[] = [];\r\n\r\n    private outVolumeHistoricTimer: number = 0;\r\n    private outVolumeHistoricCap: number = 0;\r\n    private lastOutVolumeCap: number = 0;\r\n    public patternUsed: boolean = false;\r\n    private _modRecTimeout: number = -1;\r\n\r\n    constructor(private _doc: SongDocument) {\r\n\r\n        this._doc.notifier.watch(this.whenUpdated);\r\n        this._doc.modRecordingHandler = () => { this.handleModRecording() };\r\n        new MidiInputHandler(this._doc);\r\n        window.addEventListener(\"resize\", this.whenUpdated);\r\n        window.requestAnimationFrame(this.updatePlayButton);\r\n        window.requestAnimationFrame(this._animate);\r\n\r\n        if (!(\"share\" in navigator)) {\r\n            this._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n        }\r\n\r\n        this._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n            option({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n        ));\r\n        this._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n            option({ value: \"detectKey\" }, \"Detect Key\"),\r\n        ));\r\n        this._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n            option({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n        ));\r\n\r\n        this._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n        this._showModSliders = new Array<boolean>(Config.modulators.length);\r\n        this._modSliderValues = new Array<number>(Config.modulators.length);\r\n\r\n        this._phaseModGroup.appendChild(div({ class: \"selectRow\", style: `color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;` },\r\n            div({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n            div({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n            div({ class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n        ));\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            const operatorIndex: number = i;\r\n            const operatorNumber: HTMLDivElement = div({ style: \"margin-right: 0px; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \"\");\r\n            const frequencyInput: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"frequencyInput\", type: \"number\", step: \"0.25\", min: \"0.25\", max: \"100000\", value: \"1\" });\r\n            const amplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n            const waveformSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Waveform\" }), Config.operatorWaves.map(wave => wave.name));\r\n            const waveformDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; margin-right: 2px; height:1.5em; width: 8px; max-width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.FM, i) }, \"▼\");\r\n            const waveformDropdownHint: HTMLSpanElement = span({ class: \"tip\", style: \"margin-left: 10px;\", onclick: () => this._openPrompt(\"operatorWaveform\") }, \"Wave:\");\r\n            const hzOffsetInputHint: HTMLSpanElement = span({ class: \"tip\", style: \"margin-left: 10px;\", onclick: () => this._openPrompt(\"hzOffset\") }, \"Hz Offset:\");\r\n            const hzOffsetInput: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"hzOffsetInput\", type: \"number\", step: \"0.1\", min: \"-200\", max: \"200\", value: \"0\" });\r\n            const invertInputHint: HTMLSpanElement = span({ class: \"tip\", style: \"margin-left: 10px;\", onclick: () => this._openPrompt(\"fmInvert\") }, \"Invert:\");\r\n            const invertInput: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n            const waveformPulsewidthSlider: Slider = new Slider(input({ style: \"margin-left: 10px; width: 85%;\", type: \"range\", min: \"0\", max: Config.pwmOperatorWaves.length - 1, value: \"0\", step: \"1\", title: \"Pulse Width\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorPulseWidth(this._doc, operatorIndex, oldValue, newValue), true);\r\n            const waveformDropdownRow: HTMLElement = div({ class: \"selectRow\" }, waveformDropdownHint, waveformPulsewidthSlider.container,\r\n                div({ class: \"selectContainer\", style: \"width: 6em; margin-left: .3em;\" }, waveformSelect));\r\n            const hzOffsetDropdownRow: HTMLElement = div({ class: \"selectRow\" }, hzOffsetInputHint, hzOffsetInput);  \r\n            const invertDropdownRow: HTMLElement = div({ class: \"selectRow\" }, invertInputHint, invertInput);  \r\n            const waveformDropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, waveformDropdownRow);\r\n            const invertDropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, hzOffsetDropdownRow);\r\n            const hzOffsetDropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, invertDropdownRow);\r\n            const fullDropdownGroup: HTMLDivElement = div({ ckass: \"menu-area\"}, waveformDropdownGroup, invertDropdownGroup, hzOffsetDropdownGroup)\r\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\r\n                operatorNumber,\r\n                waveformDropdown,\r\n                div({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencyInput),\r\n                amplitudeSlider.container,\r\n            );\r\n            this._phaseModGroup.appendChild(row);\r\n            this._operatorRows[i] = row;\r\n            this._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n            this._operatorFrequencyInputs[i] = frequencyInput;\r\n            this._operatorDropdowns[i] = waveformDropdown;\r\n            this._operatorWaveformHints[i] = waveformDropdownHint;\r\n            this._operatorHzOffsetInputs[i] = hzOffsetInput;\r\n            this._operatorHzOffsetHints[i] = hzOffsetInputHint;\r\n            this._operatorInvertCheckboxes[i] = invertInput;\r\n            this._operatorInvertHints[i] = invertInputHint;\r\n            this._operatorWaveformSelects[i] = waveformSelect;\r\n            this._operatorWaveformPulsewidthSliders[i] = waveformPulsewidthSlider;\r\n            this._operatorDropdownRows[i] = waveformDropdownRow;\r\n            this._phaseModGroup.appendChild(fullDropdownGroup);\r\n            this._operatorDropdownGroups[i] = fullDropdownGroup;\r\n            this._openOperatorDropdowns[i] = false;\r\n\r\n            waveformSelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorWaveform(this._doc, operatorIndex, waveformSelect.selectedIndex));\r\n            });\r\n\r\n            frequencyInput.addEventListener(\"input\", () => {\r\n                let value = parseFloat(frequencyInput.value)\r\n                if (value <= 0) {\r\n                    value = 0.25\r\n                }\r\n                this._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, value));\r\n            });\r\n\r\n            hzOffsetInput.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorHzOffset(this._doc, operatorIndex, Math.min(Math.max(parseFloat(hzOffsetInput.value), -200), 200)));\r\n            });\r\n\r\n            invertInput.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeOperatorInvert(this._doc, operatorIndex, invertInput.checked));\r\n            });\r\n        }\r\n\r\n        this._drumsetGroup.appendChild(\r\n            div({ class: \"selectRow\" },\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n            ),\r\n        );\r\n        for (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n            const drumIndex: number = i;\r\n            const spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n            spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n            this._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n            const envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n            this._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n            envelopeSelect.addEventListener(\"change\", () => {\r\n                this._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n            });\r\n\r\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\r\n                div({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n                this._drumsetSpectrumEditors[i].container,\r\n            );\r\n            this._drumsetGroup.appendChild(row);\r\n        }\r\n\r\n        this._modNameRows = [];\r\n        this._modChannelBoxes = [];\r\n        this._modInstrumentBoxes = [];\r\n        this._modSetRows = [];\r\n        this._modSetBoxes = [];\r\n        this._modFilterRows = [];\r\n        this._modFilterBoxes = [];\r\n        this._modTargetIndicators = [];\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n            let modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n            let modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n            let modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n                div({ class: \"tip\", style: \"width: 10%; max-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n                div({ class: \"selectContainer\", style: 'width: 35%;' }, modChannelBox),\r\n                div({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n                div({ class: \"selectContainer\", style: \"width: 10%;\" }, modInstrumentBox),\r\n            );\r\n\r\n            let modSetBox: HTMLSelectElement = select();\r\n            let modFilterBox: HTMLSelectElement = select();\r\n            let modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), span({ class: \"tip\", style: \"font-size:x-small;\", onclick: () => this._openPrompt(\"modSetInfo\" + mod) }, \"?\"), div({ class: \"selectContainer\" }, modSetBox));\r\n            let modFilterRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modFilterText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modFilter\" + mod) }, \"Target: \"), div({ class: \"selectContainer\" }, modFilterBox));\r\n\r\n            // @jummbus: I could template this up above and simply create from the template, especially since I also reuse it in song settings, but unsure how to do that with imperative-html :P\r\n            let modTarget: SVGElement = SVG.svg({ style: \"transform: translate(0px, 1px);\", width: \"1.5em\", height: \"1em\", viewBox: \"0 0 200 200\" }, [\r\n                SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\r\n                SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\r\n                SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\r\n                SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\r\n                SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\r\n\r\n            this._modNameRows.push(modNameRow);\r\n            this._modChannelBoxes.push(modChannelBox);\r\n            this._modInstrumentBoxes.push(modInstrumentBox);\r\n            this._modSetRows.push(modSetRow);\r\n            this._modSetBoxes.push(modSetBox);\r\n            this._modFilterRows.push(modFilterRow);\r\n            this._modFilterBoxes.push(modFilterBox);\r\n            this._modTargetIndicators.push(modTarget);\r\n\r\n            this._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, [\"Modulator \" + (mod + 1), modTarget]));\r\n            this._modulatorGroup.appendChild(modNameRow);\r\n            this._modulatorGroup.appendChild(modSetRow);\r\n            this._modulatorGroup.appendChild(modFilterRow);\r\n\r\n        }\r\n\r\n        // @jummbus - Unsure why this hack is needed for alignment, but I've never been a css wiz...\r\n        this._pitchShiftSlider.container.style.setProperty(\"transform\", \"translate(0px, 3px)\");\r\n        this._pitchShiftSlider.container.style.setProperty(\"width\", \"100%\");\r\n\r\n        this._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n        this._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n        this._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n        this._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n        this._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n        this._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n        this._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n        this._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n        //this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n        //this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n        this._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n        this._instrumentsButtonBar.addEventListener(\"click\", this._whenSelectInstrument);\r\n        //this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n        this._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n        this._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n        this._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n        this._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n        this._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n        this._unisonSelect.addEventListener(\"change\", this._whenSetUnison);\r\n        this._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n        this._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n        this._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n        this._playButton.addEventListener(\"click\", this.togglePlay);\r\n        this._pauseButton.addEventListener(\"click\", this.togglePlay);\r\n        this._recordButton.addEventListener(\"click\", this._toggleRecord);\r\n        this._stopButton.addEventListener(\"click\", this._toggleRecord);\r\n        // Start recording instead of opening context menu when control-clicking the record button on a Mac.\r\n        this._recordButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\r\n            if (event.ctrlKey) {\r\n                event.preventDefault();\r\n                this._toggleRecord();\r\n            }\r\n        });\r\n        this._stopButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\r\n            if (event.ctrlKey) {\r\n                event.preventDefault();\r\n                this._toggleRecord();\r\n            }\r\n        });\r\n        this._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n        this._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n        this._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n        this._zoomInButton.addEventListener(\"click\", this._zoomIn);\r\n        this._zoomOutButton.addEventListener(\"click\", this._zoomOut);\r\n        this._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n        this._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n        // The song volume slider is styled slightly different than the class' default.\r\n        this._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n        this._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n        this._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n        this._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n        // Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n        this._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n        this._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n        }\r\n\r\n        let thisRef: SongEditor = this;\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n            this._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n            this._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n            this._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n            this._modFilterBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModFilter(mod); });\r\n            this._modTargetIndicators[mod].addEventListener(\"click\", function () { thisRef._whenClickModTarget(mod); });\r\n        }\r\n\r\n        this._jumpToModIndicator.addEventListener(\"click\", function () { thisRef._whenClickJumpToModTarget() });\r\n\r\n        this._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._fadeInOutEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._eqFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._noteFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n        this._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n        this._addEnvelopeButton.addEventListener(\"click\", this._addNewEnvelope);\r\n        this._patternArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\r\n        this._trackArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\r\n        this.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n        this.mainLayer.addEventListener(\"keyup\", this._whenKeyReleased);\r\n        this.mainLayer.addEventListener(\"focusin\", this._onFocusIn);\r\n        this._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n        this._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n        this._instrumentExportButton.addEventListener(\"click\", this._exportInstruments.bind(this));\r\n        this._instrumentImportButton.addEventListener(\"click\", this._importInstruments.bind(this));\r\n\r\n        this._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n        this._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n        this._pwmSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePulseWidth(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pulseWidth, Math.min(Config.pulseWidthRange, Math.max(1.0, Math.round(+this._pwmSliderInputBox.value))))) });\r\n        this._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax - Config.detuneCenter, Math.max(Config.detuneMin - Config.detuneCenter, Math.round(+this._detuneSliderInputBox.value))))) });\r\n        this._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n        this._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n        this._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n        this._aliasingBox.addEventListener(\"input\", () => { this._doc.record(new ChangeAliasing(this._doc, this._aliasingBox.checked)) });\r\n        this._discreteEnvelopeBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDiscreteEnvelope(this._doc, this._discreteEnvelopeBox.checked)) });\r\n\r\n        this._invertWaveBox.addEventListener(\"input\", () => { this._doc.record(new ChangeInvertWave(this._doc, this._invertWaveBox.checked)) });\r\n\r\n        this._upperNoteLimitInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeUpperLimit(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].upperNoteLimit, (Math.min(Config.maxPitch, Math.max(0.0, Math.round(+this._upperNoteLimitInputBox.value)))))) });\r\n        this._lowerNoteLimitInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeLowerLimit(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].lowerNoteLimit, (Math.min(Config.maxPitch, Math.max(0.0, Math.round(+this._lowerNoteLimitInputBox.value)))))) });\r\n        \r\n        this._promptContainer.addEventListener(\"click\", (event) => {\r\n            if (event.target == this._promptContainer) {\r\n                this._doc.undo();\r\n            }\r\n        });\r\n\r\n        // Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackAndMuteContainer.addEventListener(\"scroll\", this._onTrackAreaScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackAndMuteContainer.addEventListener)(\"scroll\", this._onTrackAreaScroll, {capture: false, passive: true});\r\n\r\n        if (isMobile) {\r\n            const autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n            autoPlayOption.disabled = true;\r\n            autoPlayOption.setAttribute(\"hidden\", \"\");\r\n        }\r\n\r\n        // Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n        if (window.screen.availWidth < 710 /*|| window.screen.availHeight < 710*/) {\r\n            const layoutOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=layout]\");\r\n            layoutOption.disabled = true;\r\n            layoutOption.setAttribute(\"hidden\", \"\");\r\n        }\r\n    }\r\n\r\n    private _toggleDropdownMenu(dropdown: DropdownID, submenu: number = 0): void {\r\n        let target: HTMLButtonElement = this._vibratoDropdown;\r\n        let group: HTMLElement = this._vibratoDropdownGroup;\r\n        switch (dropdown) {\r\n            case DropdownID.Envelope:\r\n                target = this._envelopeDropdown;\r\n                this._openEnvelopeDropdown = this._openEnvelopeDropdown ? false : true;\r\n                group = this._envelopeDropdownGroup;\r\n                break;\r\n            case DropdownID.Vibrato:\r\n                target = this._vibratoDropdown;\r\n                this._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n                group = this._vibratoDropdownGroup;\r\n                break;\r\n            case DropdownID.Pan:\r\n                target = this._panDropdown;\r\n                this._openPanDropdown = this._openPanDropdown ? false : true;\r\n                group = this._panDropdownGroup;\r\n                break;\r\n            case DropdownID.Chord:\r\n                target = this._chordDropdown;\r\n                this._openChordDropdown = this._openChordDropdown ? false : true;\r\n                group = this._chordDropdownGroup;\r\n                break;\r\n            case DropdownID.Transition:\r\n                target = this._transitionDropdown;\r\n                this._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n                group = this._transitionDropdownGroup;\r\n                break;\r\n            case DropdownID.FM:\r\n                target = this._operatorDropdowns[submenu];\r\n                this._openOperatorDropdowns[submenu] = this._openOperatorDropdowns[submenu] ? false : true;\r\n                group = this._operatorDropdownGroups[submenu];\r\n                break;\r\n        }\r\n\r\n        if (target.textContent == \"▼\") {\r\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n            target.textContent = \"▲\";\r\n            if (group != this._chordDropdownGroup) {\r\n                group.style.display = \"\";\r\n            } // Only show arpeggio dropdown if chord arpeggiates\r\n            else if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\r\n                group.style.display = \"\";\r\n            }\r\n\r\n            for (let i: number = 0; i < group.children.length; i++) {\r\n                // A timeout is needed so that the previous 0s, 0 opacity settings can be applied. They're not done until the group is visible again because display: none prunes animation steps.\r\n                setTimeout(() => {\r\n                    (group.children[i] as HTMLElement).style.animationDelay = '0.17s';\r\n                    (group.children[i] as HTMLElement).style.opacity = '1';}\r\n                );\r\n            }\r\n\r\n        }\r\n        else {\r\n            for (let i: number = 0; i < group.children.length; i++) {\r\n                (group.children[i] as HTMLElement).style.animationDelay = '0s';\r\n                (group.children[i] as HTMLElement).style.opacity = '0';\r\n            }\r\n            target.textContent = \"▼\";\r\n            group.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    private _modSliderUpdate(): void {\r\n\r\n        if (!this._doc.synth.playing) {\r\n            this._hasActiveModSliders = false;\r\n\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                if (this._showModSliders[setting] == true) {\r\n                    this._showModSliders[setting] = false;\r\n                    this._newShowModSliders[setting] = false;\r\n                    let slider: Slider | null = this.getSliderForModSetting(setting);\r\n\r\n                    if (slider != null) {\r\n                        slider.container.classList.remove(\"modSlider\");\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n            let instrument: number = this._doc.getCurrentInstrument();\r\n            const anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n            // Check and update mod values on sliders\r\n            if (anyModActive) {\r\n\r\n                let instrument: number = this._doc.getCurrentInstrument();\r\n\r\n                function updateModSlider(editor: SongEditor, slider: Slider, setting: number, channel: number, instrument: number): boolean {\r\n                    if (editor._doc.synth.isModActive(setting, channel, instrument)) {\r\n                        let currentVal: number = (editor._doc.synth.getModValue(setting, channel, instrument, false) - Config.modulators[setting].convertRealFactor) / Config.modulators[setting].maxRawVol;\r\n                        if (currentVal != editor._modSliderValues[setting]) {\r\n                            editor._modSliderValues[setting] = currentVal;\r\n                            slider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                // Set mod sliders to present values\r\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                    // Set to last value\r\n                    this._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n                    // Check for newer value\r\n                    let slider: Slider | null = this.getSliderForModSetting(setting);\r\n                    if (slider != null) {\r\n                        this._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (this._hasActiveModSliders) {\r\n                // Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                    this._newShowModSliders[setting] = false;\r\n                }\r\n            }\r\n\r\n            // Class or unclass mod sliders based on present status\r\n            if (anyModActive || this._hasActiveModSliders) {\r\n\r\n                let anySliderActive: boolean = false;\r\n\r\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                    if (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n                        this._showModSliders[setting] = this._newShowModSliders[setting];\r\n                        let slider: Slider | null = this.getSliderForModSetting(setting);\r\n\r\n                        if (slider != null) {\r\n\r\n                            if (this._showModSliders[setting] == true) {\r\n                                slider.container.classList.add(\"modSlider\");\r\n                            }\r\n                            else {\r\n                                slider.container.classList.remove(\"modSlider\");\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (this._newShowModSliders[setting] == true)\r\n                        anySliderActive = true;\r\n                }\r\n\r\n                this._hasActiveModSliders = anySliderActive;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public getSliderForModSetting(setting: number): Slider | null {\r\n        switch (setting) {\r\n            case Config.modulators.dictionary[\"pan\"].index:\r\n                return this._panSlider;\r\n            case Config.modulators.dictionary[\"detune\"].index:\r\n                return this._detuneSlider;\r\n            case Config.modulators.dictionary[\"fm slider 1\"].index:\r\n                return this._operatorAmplitudeSliders[0];\r\n            case Config.modulators.dictionary[\"fm slider 2\"].index:\r\n                return this._operatorAmplitudeSliders[1];\r\n            case Config.modulators.dictionary[\"fm slider 3\"].index:\r\n                return this._operatorAmplitudeSliders[2];\r\n            case Config.modulators.dictionary[\"fm slider 4\"].index:\r\n                return this._operatorAmplitudeSliders[3];\r\n            case Config.modulators.dictionary[\"fm feedback\"].index:\r\n                return this._feedbackAmplitudeSlider;\r\n            case Config.modulators.dictionary[\"pulse width\"].index:\r\n                return this._pulseWidthSlider;\r\n            case Config.modulators.dictionary[\"reverb\"].index:\r\n                return this._reverbSlider;\r\n            case Config.modulators.dictionary[\"distortion\"].index:\r\n                return this._distortionSlider;\r\n            case Config.modulators.dictionary[\"note volume\"].index:\r\n                // So, this should technically not affect this slider, but it will look better as legacy songs used this mod as 'volume'.\r\n                // In the case that mix volume is used as well, they'd fight for the display, so just don't use this.\r\n                if (!this._showModSliders[Config.modulators.dictionary[\"mix volume\"].index])\r\n                    return this._instrumentVolumeSlider;\r\n                return null;\r\n            case Config.modulators.dictionary[\"mix volume\"].index:\r\n                return this._instrumentVolumeSlider;\r\n            case Config.modulators.dictionary[\"vibrato depth\"].index:\r\n                return this._vibratoDepthSlider;\r\n            case Config.modulators.dictionary[\"vibrato speed\"].index:\r\n                return this._vibratoSpeedSlider;\r\n            case Config.modulators.dictionary[\"vibrato delay\"].index:\r\n                return this._vibratoDelaySlider;\r\n            case Config.modulators.dictionary[\"arp speed\"].index:\r\n                return this._arpeggioSpeedSlider;\r\n            case Config.modulators.dictionary[\"pan delay\"].index:\r\n                return this._panDelaySlider;\r\n            case Config.modulators.dictionary[\"tempo\"].index:\r\n                return this._tempoSlider;\r\n            case Config.modulators.dictionary[\"song detune\"].index:\r\n                return this._songDetuneSlider;\r\n            case Config.modulators.dictionary[\"song reverb\"].index:\r\n                return this._songReverbSlider;\r\n            case Config.modulators.dictionary[\"song volume\"].index:\r\n                return this._volumeSlider;\r\n            case Config.modulators.dictionary[\"eq filt cut\"].index:\r\n                return this._eqFilterSimpleCutSlider;\r\n            case Config.modulators.dictionary[\"eq filt peak\"].index:\r\n                return this._eqFilterSimplePeakSlider;\r\n            case Config.modulators.dictionary[\"note filt cut\"].index:\r\n                return this._noteFilterSimpleCutSlider;\r\n            case Config.modulators.dictionary[\"note filt peak\"].index:\r\n                return this._noteFilterSimplePeakSlider;\r\n            case Config.modulators.dictionary[\"bit crush\"].index:\r\n                return this._bitcrusherQuantizationSlider;\r\n            case Config.modulators.dictionary[\"freq crush\"].index:\r\n                return this._bitcrusherFreqSlider;\r\n            case Config.modulators.dictionary[\"pitch shift\"].index:\r\n                return this._pitchShiftSlider;\r\n            case Config.modulators.dictionary[\"chorus\"].index:\r\n                return this._chorusSlider;\r\n            case Config.modulators.dictionary[\"echo\"].index:\r\n                return this._echoSustainSlider;\r\n            case Config.modulators.dictionary[\"echo delay\"].index:\r\n                return this._echoDelaySlider;\r\n            case Config.modulators.dictionary[\"sustain\"].index:\r\n                return this._stringSustainSlider;\r\n            case Config.modulators.dictionary[\"envelope speed\"].index:\r\n                return this._envelopeSpeedSlider;\r\n            case Config.modulators.dictionary[\"dynamism\"].index:\r\n                return this._supersawDynamismSlider;\r\n            case Config.modulators.dictionary[\"spread\"].index:\r\n                return this._supersawSpreadSlider;\r\n            case Config.modulators.dictionary[\"saw shape\"].index:\r\n                return this._supersawShapeSlider;\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    private _openPrompt(promptName: string): void {\r\n        this._doc.openPrompt(promptName);\r\n        this._setPrompt(promptName);\r\n    }\r\n\r\n    private _setPrompt(promptName: string | null): void {\r\n        if (this._currentPromptName == promptName) return;\r\n        this._currentPromptName = promptName;\r\n\r\n        if (this.prompt) {\r\n            if (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof SustainPrompt)) {\r\n                this._doc.performance.play();\r\n            }\r\n            this._wasPlaying = false;\r\n            this._promptContainer.style.display = \"none\";\r\n            this._promptContainer.removeChild(this.prompt.container);\r\n            this.prompt.cleanUp();\r\n            this.prompt = null;\r\n            this.refocusStage();\r\n        }\r\n\r\n        if (promptName) {\r\n            switch (promptName) {\r\n                case \"export\":\r\n                    this.prompt = new ExportPrompt(this._doc);\r\n                    break;\r\n                case \"import\":\r\n                    this.prompt = new ImportPrompt(this._doc);\r\n                    break;\r\n                case \"songRecovery\":\r\n                    this.prompt = new SongRecoveryPrompt(this._doc);\r\n                    break;\r\n                case \"barCount\":\r\n                    this.prompt = new SongDurationPrompt(this._doc);\r\n                    break;\r\n                case \"beatsPerBar\":\r\n                    this.prompt = new BeatsPerBarPrompt(this._doc);\r\n                    break;\r\n                case \"moveNotesSideways\":\r\n                    this.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n                    break;\r\n                case \"channelSettings\":\r\n                    this.prompt = new ChannelSettingsPrompt(this._doc);\r\n                    break;\r\n                case \"limiterSettings\":\r\n                    this.prompt = new LimiterPrompt(this._doc, this);\r\n                    break;\r\n                case \"customChipSettings\":\r\n                    this.prompt = new CustomChipPrompt(this._doc, this);\r\n                    break;\r\n                case \"customEQFilterSettings\":\r\n                    this.prompt = new CustomFilterPrompt(this._doc, this, false);\r\n                    break;\r\n                case \"customNoteFilterSettings\":\r\n                    this.prompt = new CustomFilterPrompt(this._doc, this, true);\r\n                    break;\r\n                case \"theme\":\r\n                    this.prompt = new ThemePrompt(this._doc);\r\n                    break;\r\n                case \"layout\":\r\n                    this.prompt = new LayoutPrompt(this._doc);\r\n                    break;\r\n                case \"recordingSetup\":\r\n                    this.prompt = new RecordingSetupPrompt(this._doc);\r\n                    break;\r\n\t\t\t\tcase \"stringSustain\":\r\n\t\t\t\t\tthis.prompt = new SustainPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n                case \"exportInstrument\":\r\n                    this.prompt = new InstrumentExportPrompt(this._doc);\r\n                    break;\r\n                case \"importInstrument\":\r\n                    this.prompt = new InstrumentImportPrompt(this._doc);//, this);\r\n                    break;\r\n                default:\r\n                    this.prompt = new TipPrompt(this._doc, promptName);\r\n                    break;\r\n            }\r\n\r\n            if (this.prompt) {\r\n                if (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof SustainPrompt)) {\r\n                    this._wasPlaying = this._doc.synth.playing;\r\n                    this._doc.performance.pause();\r\n                }\r\n                this._promptContainer.style.display = \"\";\r\n                this._promptContainer.appendChild(this.prompt.container);\r\n            }\r\n        }\r\n    }\r\n\r\n    public refocusStage = (): void => {\r\n        this.mainLayer.focus({ preventScroll: true });\r\n    }\r\n\r\n    private _onFocusIn = (event: Event): void => {\r\n        if (this._doc.synth.recording && event.target != this.mainLayer && event.target != this._stopButton && event.target != this._volumeSlider.input) {\r\n            // Don't allow using tab to focus on the song settings while recording,\r\n            // since interacting with them while recording would mess up the recording.\r\n            this.refocusStage();\r\n        }\r\n    }\r\n\r\n    // Refocus stage if a sub-element that needs focus isn't being edited.\r\n    private _refocusStageNotEditing = (): void => {\r\n        if (!this._patternEditor.editingModLabel)\r\n            this.mainLayer.focus({ preventScroll: true });\r\n    }\r\n\r\n    public changeBarScrollPos(offset: number) {\r\n        this._barScrollBar.changePos(offset);\r\n    }\r\n\r\n    public whenUpdated = (): void => {\r\n        const prefs: Preferences = this._doc.prefs;\r\n        this._muteEditor.container.style.display = prefs.enableChannelMuting ? \"\" : \"none\";\r\n        const trackBounds: DOMRect = this._trackVisibleArea.getBoundingClientRect();\r\n        this._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left - (prefs.enableChannelMuting ? 32 : 0)) / this._doc.getBarWidth());\r\n        this._doc.trackVisibleChannels = Math.floor((trackBounds.bottom - trackBounds.top - 30) / ChannelRow.patternHeight);\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.channels.length; i++) {\r\n            const channel: Channel = this._doc.song.channels[i];\r\n            for (let j: number = 0; j < channel.instruments.length; j++) {\r\n                this._doc.synth.determineInvalidModulators(channel.instruments[j]);\r\n            }\r\n        }\r\n        this._barScrollBar.render();\r\n        this._trackEditor.render();\r\n        this._muteEditor.render();\r\n\r\n        this._trackAndMuteContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t\tthis._trackAndMuteContainer.scrollTop = this._doc.channelScrollPos * ChannelRow.patternHeight;\r\n\r\n        if (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n            this._patternEditor.stopEditingModLabel(false);\r\n        }\r\n\r\n        this._piano.container.style.display = prefs.showLetters ? \"\" : \"none\";\r\n        this._octaveScrollBar.container.style.display = prefs.showScrollBar ? \"\" : \"none\";\r\n        this._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n        this._volumeBarBox.style.display = this._doc.prefs.displayVolumeBar ? \"\" : \"none\";\r\n\r\n        if (this._doc.getFullScreen()) {\r\n            const semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.getVisiblePitchCount();\r\n            const targetBeatWidth: number = semitoneHeight * 5;\r\n            const minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n            const maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n            const beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n            const patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n            this._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n            this._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n            this._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n            this._patternEditorPrev.container.style.flexShrink = \"0\";\r\n            this._patternEditor.container.style.flexShrink = \"0\";\r\n            this._patternEditorNext.container.style.flexShrink = \"0\";\r\n            this._patternEditorPrev.container.style.display = \"\";\r\n            this._patternEditorNext.container.style.display = \"\";\r\n            this._patternEditorPrev.render();\r\n            this._patternEditorNext.render();\r\n            this._zoomInButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\r\n            this._zoomOutButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\r\n            this._zoomInButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\r\n            this._zoomOutButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\r\n        } else {\r\n            this._patternEditor.container.style.width = \"\";\r\n            this._patternEditor.container.style.flexShrink = \"\";\r\n            this._patternEditorPrev.container.style.display = \"none\";\r\n            this._patternEditorNext.container.style.display = \"none\";\r\n            this._zoomInButton.style.display = \"none\";\r\n            this._zoomOutButton.style.display = \"none\";\r\n        }\r\n        this._patternEditor.render();\r\n\r\n        const optionCommands: ReadonlyArray<string> = [\r\n            (prefs.autoPlay ? \"✓ \" : \"　\") + \"Auto Play on Load\",\r\n            (prefs.autoFollow ? \"✓ \" : \"　\") + \"Auto Follow Playhead\",\r\n            (prefs.enableNotePreview ? \"✓ \" : \"　\") + \"Hear Added Notes\",\r\n            (prefs.showLetters ? \"✓ \" : \"　\") + \"Show Piano Keys\",\r\n            (prefs.showFifth ? \"✓ \" : \"　\") + 'Highlight \"Fifth\" Note',\r\n            (prefs.showThird ? \"✓ \" : \"　\") + 'Highlight \"Third\" Note',\r\n            (prefs.notesOutsideScale ? \"✓ \" : \"　\") + \"Place Notes Out of Scale\",\r\n            (prefs.defaultScale == this._doc.song.scale ? \"✓ \" : \"　\") + \"Set Current Scale as Default\",\r\n            (prefs.showChannels ? \"✓ \" : \"　\") + \"Show All Channels\",\r\n            (prefs.showScrollBar ? \"✓ \" : \"　\") + \"Show Octave Scroll Bar\",\r\n            (prefs.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Volume\",\r\n            (prefs.enableChannelMuting ? \"✓ \" : \"　\") + \"Enable Channel Muting\",\r\n            (prefs.displayBrowserUrl ? \"✓ \" : \"　\") + \"Show Song Data in URL\",\r\n            (prefs.displayVolumeBar ? \"✓ \" : \"　\") + \"Show Playback Volume\",\r\n            (prefs.notesFlashWhenPlayed ? \"✓ \" : \"　\") + \"Notes Flash When Played\",\r\n            \"　Set Layout...\",\r\n            \"　Set Theme...\",\r\n            \"　Note Recording...\",\r\n        ];\r\n        for (let i: number = 0; i < optionCommands.length; i++) {\r\n            const option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n            if (option.textContent != optionCommands[i]) option.textContent = optionCommands[i];\r\n        }\r\n\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\r\n        const instrument: Instrument = channel.instruments[instrumentIndex];\r\n        const wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n        const activeElement: Element | null = document.activeElement;\r\n        const colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\r\n\r\n        for (let i: number = this._effectsSelect.childElementCount - 1; i < Config.effectOrder.length; i++) {\r\n            this._effectsSelect.appendChild(option({ value: i }));\r\n        }\r\n        this._effectsSelect.selectedIndex = -1;\r\n        for (let i: number = 0; i < Config.effectOrder.length; i++) {\r\n            let effectFlag: number = Config.effectOrder[i];\r\n            const selected: boolean = ((instrument.effects & (1 << effectFlag)) != 0);\r\n            const label: string = (selected ? \"✓ \" : \"　\") + Config.effectNames[effectFlag];\r\n            const option: HTMLOptionElement = <HTMLOptionElement>this._effectsSelect.children[i + 1];\r\n            if (option.textContent != label) option.textContent = label;\r\n        }\r\n\r\n        setSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n        this._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n        setSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n        this._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n        this._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n        this._songTitleInputBox.updateValue(this._doc.song.title);\r\n\r\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\r\n        if (instrument.eqFilterType) {\r\n            this._eqFilterSimpleButton.classList.remove(\"deactivated\");\r\n            this._eqFilterAdvancedButton.classList.add(\"deactivated\");\r\n            this._eqFilterRow.style.display = \"none\";\r\n            this._eqFilterSimpleCutRow.style.display = \"\";\r\n            this._eqFilterSimplePeakRow.style.display = \"\";\r\n        } else {\r\n            this._eqFilterSimpleButton.classList.add(\"deactivated\");\r\n            this._eqFilterAdvancedButton.classList.remove(\"deactivated\");\r\n            this._eqFilterRow.style.display = \"\";\r\n            this._eqFilterSimpleCutRow.style.display = \"none\";\r\n            this._eqFilterSimplePeakRow.style.display = \"none\";\r\n        }\r\n\r\n        setSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n        if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n            this._customInstrumentSettingsGroup.style.display = \"\";\r\n            this._panSliderRow.style.display = \"\";\r\n            this._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n            this._detuneSliderRow.style.display = \"\";\r\n            this._instrumentVolumeSliderRow.style.display = \"\";\r\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"\");\r\n            this._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n            this._instrumentSettingsGroup.appendChild(this._instrumentExportGroup);\r\n            this._instrumentSettingsGroup.insertBefore(this._instrumentsButtonRow, this._instrumentSettingsGroup.firstChild);\r\n            this._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n                this._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n            }\r\n            else {\r\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n            }\r\n\r\n            this._modulatorGroup.style.display = \"none\";\r\n\r\n            // Check if current viewed pattern on channel is used anywhere\r\n            // + Check if current instrument on channel is used anywhere\r\n            // + Check if a mod targets this\r\n            this._usageCheck(this._doc.channel, instrumentIndex);\r\n\r\n            if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n                this._pitchedPresetSelect.style.display = \"none\";\r\n                this._drumPresetSelect.style.display = \"\";\r\n                // Also hide select2\r\n                $(\"#pitchPresetSelect\").parent().hide();\r\n                $(\"#drumPresetSelect\").parent().show();\r\n\r\n                setSelectedValue(this._drumPresetSelect, instrument.preset, true);\r\n            } else {\r\n                this._pitchedPresetSelect.style.display = \"\";\r\n                this._drumPresetSelect.style.display = \"none\";\r\n\r\n                // Also hide select2\r\n                $(\"#pitchPresetSelect\").parent().show();\r\n                $(\"#drumPresetSelect\").parent().hide();\r\n\r\n                setSelectedValue(this._pitchedPresetSelect, instrument.preset, true);\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.noise) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                this._chipNoiseSelectRow.style.display = \"\";\r\n                setSelectedValue(this._chipNoiseSelect, instrument.chipNoise, true);\r\n            } else {\r\n                this._chipNoiseSelectRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.spectrum) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                this._spectrumRow.style.display = \"\";\r\n                this._spectrumEditor.render();\r\n            } else {\r\n                this._spectrumRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                this._harmonicsRow.style.display = \"\";\r\n                this._harmonicsEditor.render();\r\n            } else {\r\n                this._harmonicsRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                this._stringSustainRow.style.display = \"\";\r\n                this._stringSustainSlider.updateValue(instrument.stringSustain);\r\n                this._stringSustainLabel.textContent = Config.enableAcousticSustain ? \"Sustain (\" + Config.sustainTypeNames[instrument.stringSustainType].substring(0,1).toUpperCase() + \"):\" : \"Sustain:\";\r\n            } else {\r\n                this._stringSustainRow.style.display = \"none\";\r\n            }\r\n            if (instrument.type == InstrumentType.drumset) {\r\n                this._drumsetGroup.style.display = \"\";\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                this._fadeInOutRow.style.display = \"none\";\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    setSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n                    this._drumsetSpectrumEditors[i].render();\r\n                }\r\n            } else {\r\n                this._drumsetGroup.style.display = \"none\";\r\n                this._fadeInOutRow.style.display = \"\";\r\n                this._fadeInOutEditor.render();\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.chip) {\r\n                this._chipWaveSelectRow.style.display = \"\";\r\n                setSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.customChipWave) {\r\n                this._customWaveDraw.style.display = \"\";\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._customWaveDraw.style.display = \"none\";\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\tthis._supersawDynamismRow.style.display = \"\";\r\n\t\t\t\tthis._supersawSpreadRow.style.display = \"\";\r\n\t\t\t\tthis._supersawShapeRow.style.display = \"\";\r\n\t\t\t\tthis._supersawDynamismSlider.updateValue(instrument.supersawDynamism);\r\n\t\t\t\tthis._supersawSpreadSlider.updateValue(instrument.supersawSpread);\r\n\t\t\t\tthis._supersawShapeSlider.updateValue(instrument.supersawShape);\r\n\t\t\t} else {\r\n\t\t\t\tthis._supersawDynamismRow.style.display = \"none\";\r\n\t\t\t\tthis._supersawSpreadRow.style.display = \"none\";\r\n\t\t\t\tthis._supersawShapeRow.style.display = \"none\";\r\n\t\t\t}\r\n            if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.supersaw) {\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                this._pulseWidthRow.style.display = \"\";\r\n                this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n                this._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n            } else {\r\n                this._pulseWidthRow.style.display = \"none\";\r\n            }\r\n\r\n\r\n            if (instrument.type == InstrumentType.fm) {\r\n                this._algorithmSelectRow.style.display = \"\";\r\n                this._phaseModGroup.style.display = \"\";\r\n                this._feedbackRow1.style.display = \"\";\r\n                this._feedbackRow2.style.display = \"\";\r\n                this._chipWaveSelectRow.style.display = \"none\";\r\n                setSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n                setSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n                this._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n                for (let i: number = 0; i < Config.operatorCount; i++) {\r\n                    const isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n                    this._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n                    this._operatorFrequencyInputs[i].value = instrument.operators[i].frequency.toString();\r\n                    this._operatorHzOffsetInputs[i].value = instrument.operators[i].hzOffset.toString();\r\n                    this._operatorInvertCheckboxes[i].checked = instrument.operators[i].invert;\r\n                    this._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n                    setSelectedValue(this._operatorWaveformSelects[i], instrument.operators[i].waveform);\r\n                    this._operatorWaveformPulsewidthSliders[i].updateValue(instrument.operators[i].pulseWidth);\r\n                    this._operatorWaveformPulsewidthSliders[i].input.title = \"\" + Config.pwmOperatorWaves[instrument.operators[i].pulseWidth].name;\r\n                    this._operatorDropdownGroups[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n                    const operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n                    this._operatorFrequencyInputs[i].title = operatorName + \" Frequency\";\r\n                    this._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n                    this._operatorDropdownGroups[i].style.display = (this._openOperatorDropdowns[i] ? \"\" : \"none\");\r\n                    if (instrument.operators[i].waveform == 3) {\r\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"\";\r\n                        this._operatorWaveformHints[i].style.display = \"none\";\r\n                    } else {\r\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"none\";\r\n                        this._operatorWaveformHints[i].style.display = \"\";\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._algorithmSelectRow.style.display = \"none\";\r\n                this._phaseModGroup.style.display = \"none\";\r\n                this._feedbackRow1.style.display = \"none\";\r\n                this._feedbackRow2.style.display = \"none\";\r\n            }\r\n            this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\r\n\r\n            if (effectsIncludeTransition(instrument.effects)) {\r\n                this._transitionRow.style.display = \"\";\r\n                if (this._openTransitionDropdown)\r\n                    this._transitionDropdownGroup.style.display = \"\";\r\n                setSelectedValue(this._transitionSelect, instrument.transition);\r\n            } else {\r\n                this._transitionDropdownGroup.style.display = \"none\";\r\n                this._transitionRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeChord(instrument.effects)) {\r\n                this._chordSelectRow.style.display = \"\";\r\n                this._chordDropdown.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) ? \"\" : \"none\";\r\n                this._chordDropdownGroup.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && this._openChordDropdown) ? \"\" : \"none\";\r\n                setSelectedValue(this._chordSelect, instrument.chord);\r\n            } else {\r\n                this._chordSelectRow.style.display = \"none\";\r\n                this._chordDropdown.style.display = \"none\";\r\n                this._chordDropdownGroup.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludePitchShift(instrument.effects)) {\r\n                this._pitchShiftRow.style.display = \"\";\r\n                this._pitchShiftSlider.updateValue(instrument.pitchShift);\r\n                this._pitchShiftSlider.input.title = (instrument.pitchShift - Config.pitchShiftCenter) + \" semitone(s)\";\r\n                for (const marker of this._pitchShiftFifthMarkers) {\r\n                    marker.style.display = prefs.showFifth ? \"\" : \"none\";\r\n                }\r\n                for (const marker of this._pitchShiftThirdMarkers) {\r\n                    marker.style.display = prefs.showThird ? \"\" : \"none\";\r\n                }\r\n            } else {\r\n                this._pitchShiftRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeDetune(instrument.effects)) {\r\n                this._detuneSliderRow.style.display = \"\";\r\n                this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\r\n                this._detuneSlider.input.title = (Synth.detuneToCents(instrument.detune)) + \" cent(s)\";\r\n            } else {\r\n                this._detuneSliderRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeVibrato(instrument.effects)) {\r\n                this._vibratoSelectRow.style.display = \"\";\r\n                if (this._openVibratoDropdown)\r\n                    this._vibratoDropdownGroup.style.display = \"\";\r\n                setSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n            } else {\r\n                this._vibratoDropdownGroup.style.display = \"none\";\r\n                this._vibratoSelectRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeNoteFilter(instrument.effects)) {\r\n\r\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n                this._noteFilterTypeRow.style.display = \"\";\r\n\r\n                if (this._doc.synth.isFilterModActive(true, this._doc.channel, this._doc.getCurrentInstrument())) {\r\n                    this._noteFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\r\n                }\r\n                else {\r\n                    this._noteFilterEditor.render();\r\n                }\r\n\r\n                if (instrument.noteFilterType) {\r\n                    this._noteFilterSimpleButton.classList.remove(\"deactivated\");\r\n                    this._noteFilterAdvancedButton.classList.add(\"deactivated\");\r\n                    this._noteFilterRow.style.display = \"none\";\r\n                    this._noteFilterSimpleCutRow.style.display = \"\";\r\n                    this._noteFilterSimplePeakRow.style.display = \"\";\r\n                } else {\r\n                    this._noteFilterSimpleButton.classList.add(\"deactivated\");\r\n                    this._noteFilterAdvancedButton.classList.remove(\"deactivated\");\r\n                    this._noteFilterRow.style.display = \"\";\r\n                    this._noteFilterSimpleCutRow.style.display = \"none\";\r\n                    this._noteFilterSimplePeakRow.style.display = \"none\";\r\n                }\r\n            } else {\r\n                this._noteFilterRow.style.display = \"none\";\r\n                this._noteFilterSimpleCutRow.style.display = \"none\";\r\n                this._noteFilterSimplePeakRow.style.display = \"none\";\r\n                this._noteFilterTypeRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeDistortion(instrument.effects)) {\r\n                this._distortionRow.style.display = \"\";\r\n                if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.supersaw)\r\n                    this._aliasingRow.style.display = \"\";\r\n                else\r\n                    this._aliasingRow.style.display = \"none\";\r\n                this._distortionSlider.updateValue(instrument.distortion);\r\n            } else {\r\n                this._distortionRow.style.display = \"none\";\r\n                this._aliasingRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                this._bitcrusherQuantizationRow.style.display = \"\";\r\n                this._bitcrusherFreqRow.style.display = \"\";\r\n                this._bitcrusherQuantizationSlider.updateValue(instrument.bitcrusherQuantization);\r\n                this._bitcrusherFreqSlider.updateValue(instrument.bitcrusherFreq);\r\n            } else {\r\n                this._bitcrusherQuantizationRow.style.display = \"none\";\r\n                this._bitcrusherFreqRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludePanning(instrument.effects)) {\r\n                this._panSliderRow.style.display = \"\";\r\n                if (this._openPanDropdown)\r\n                    this._panDropdownGroup.style.display = \"\";\r\n                this._panSlider.updateValue(instrument.pan);\r\n            } else {\r\n                this._panSliderRow.style.display = \"none\";\r\n                this._panDropdownGroup.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeChorus(instrument.effects)) {\r\n                this._chorusRow.style.display = \"\";\r\n                this._chorusSlider.updateValue(instrument.chorus);\r\n            } else {\r\n                this._chorusRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeEcho(instrument.effects)) {\r\n                this._echoSustainRow.style.display = \"\";\r\n                this._echoSustainSlider.updateValue(instrument.echoSustain);\r\n                this._echoDelayRow.style.display = \"\";\r\n                this._echoDelaySlider.updateValue(instrument.echoDelay);\r\n                this._echoDelaySlider.input.title = (Math.round((instrument.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat) * 1000) / 1000) + \" beat(s)\";\r\n            } else {\r\n                this._echoSustainRow.style.display = \"none\";\r\n                this._echoDelayRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeReverb(instrument.effects)) {\r\n                this._reverbRow.style.display = \"\";\r\n                this._reverbSlider.updateValue(instrument.reverb);\r\n            } else {\r\n                this._reverbRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeNoteRange(instrument.effects)) {\r\n                this._upperNoteLimitRow.style.display = \"\";\r\n                this._lowerNoteLimitRow.style.display = \"\";\r\n                this._upperNoteLimitInputBox.value = String(instrument.upperNoteLimit);\r\n                this._lowerNoteLimitInputBox.value = String(instrument.lowerNoteLimit);\r\n            } else {\r\n                this._upperNoteLimitRow.style.display = \"none\";\r\n                this._lowerNoteLimitRow.style.display = \"none\";\r\n            }\r\n\r\n            if (effectsIncludeInvertWave(instrument.effects)) {\r\n                this._invertWaveRow.style.display = \"\";\r\n                this._invertWaveBox.checked = instrument.invertWave ? true : false;\r\n            } else {\r\n                this._invertWaveRow.style.display = \"none\";\r\n            }\r\n\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                this._unisonSelectRow.style.display = \"\";\r\n                setSelectedValue(this._unisonSelect, instrument.unison);\r\n            } else {\r\n                this._unisonSelectRow.style.display = \"none\";\r\n            }\r\n\r\n            if (this._openEnvelopeDropdown)\r\n                this._envelopeDropdownGroup.style.display = \"\";\r\n            else\r\n                this._envelopeDropdownGroup.style.display = \"none\";\r\n\r\n            this._envelopeEditor.render();\r\n\r\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n                let hidden: boolean = (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[chordIndex].customInterval);\r\n                const option: Element = this._chordSelect.children[chordIndex];\r\n                if (hidden) {\r\n                    if (!option.hasAttribute(\"hidden\")) {\r\n                        option.setAttribute(\"hidden\", \"\");\r\n                    }\r\n                } else {\r\n                    option.removeAttribute(\"hidden\");\r\n                }\r\n            }\r\n\r\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n            setSelectedValue(this._transitionSelect, instrument.transition);\r\n            setSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n            setSelectedValue(this._chordSelect, instrument.chord);\r\n            this._panSliderInputBox.value = instrument.pan + \"\";\r\n            this._pwmSliderInputBox.value = instrument.pulseWidth + \"\";\r\n            this._detuneSliderInputBox.value = (instrument.detune - Config.detuneCenter) + \"\";\r\n            this._instrumentVolumeSlider.updateValue(instrument.volume);\r\n            this._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n            this._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n            this._vibratoDelaySlider.updateValue(Math.round(instrument.vibratoDelay));\r\n            this._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n            this._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n            this._panDelaySlider.updateValue(instrument.panDelay);\r\n            this._vibratoDelaySlider.input.title = \"\" + Math.round(instrument.vibratoDelay);\r\n            this._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n            this._vibratoSpeedSlider.input.title = \"x\" + instrument.vibratoSpeed / 10;\r\n            this._vibratoSpeedDisplay.textContent = \"x\" + instrument.vibratoSpeed / 10;\r\n            this._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n            this._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n            this._arpeggioSpeedDisplay.textContent = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n            this._eqFilterSimpleCutSlider.updateValue(instrument.eqFilterSimpleCut);\r\n            this._eqFilterSimplePeakSlider.updateValue(instrument.eqFilterSimplePeak);\r\n            this._noteFilterSimpleCutSlider.updateValue(instrument.noteFilterSimpleCut);\r\n            this._noteFilterSimplePeakSlider.updateValue(instrument.noteFilterSimplePeak);\r\n            this._envelopeSpeedSlider.updateValue(instrument.envelopeSpeed);\r\n            this._envelopeSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.envelopeSpeed]);\r\n            this._envelopeSpeedDisplay.textContent = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.envelopeSpeed]);\r\n\r\n\r\n            this._upperNoteLimitRow.firstChild!.textContent = \"Upper Note Limit [\" + Piano.getPitchNameAlwaysOctave(\r\n                (instrument.upperNoteLimit + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave,\r\n                instrument.upperNoteLimit,\r\n                0)\r\n                + \"]:\"\r\n            this._lowerNoteLimitRow.firstChild!.textContent = \"Lower Note Limit [\" + Piano.getPitchNameAlwaysOctave(\r\n                (instrument.lowerNoteLimit + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave,\r\n                instrument.lowerNoteLimit,\r\n                0)\r\n                 + \"]:\"\r\n\r\n\r\n            if (instrument.type == InstrumentType.customChipWave) {\r\n                this._customWaveDrawCanvas.redrawCanvas();\r\n                if (this.prompt instanceof CustomChipPrompt) {\r\n                    this.prompt.customChipCanvas.render();\r\n                }\r\n            }\r\n\r\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\r\n        }\r\n        // Options for mod channel\r\n        else {\r\n            this._usageCheck(this._doc.channel, instrumentIndex);\r\n\r\n            this._pitchedPresetSelect.style.display = \"none\";\r\n            this._drumPresetSelect.style.display = \"none\";\r\n            $(\"#pitchPresetSelect\").parent().hide();\r\n            $(\"#drumPresetSelect\").parent().hide();\r\n            this._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n            this._modulatorGroup.appendChild(this._instrumentExportGroup);\r\n\r\n            this._modulatorGroup.insertBefore(this._instrumentsButtonRow, this._modulatorGroup.firstChild);\r\n            this._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n                this._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n            }\r\n            else {\r\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n            }\r\n\r\n            this._chipNoiseSelectRow.style.display = \"none\";\r\n            this._chipWaveSelectRow.style.display = \"none\";\r\n            this._spectrumRow.style.display = \"none\";\r\n            this._harmonicsRow.style.display = \"none\";\r\n            this._transitionRow.style.display = \"none\";\r\n            this._chordSelectRow.style.display = \"none\";\r\n            this._chordDropdownGroup.style.display = \"none\";\r\n            //this._filterCutoffRow.style.display = \"none\";\r\n            //this._filterResonanceRow.style.display = \"none\";\r\n            //this._filterEnvelopeRow.style.display = \"none\";\r\n            this._drumsetGroup.style.display = \"none\";\r\n            this._customWaveDraw.style.display = \"none\";\r\n            this._supersawDynamismRow.style.display = \"none\";\r\n\t\t\tthis._supersawSpreadRow.style.display = \"none\";\r\n\t\t\tthis._supersawShapeRow.style.display = \"none\";\r\n            this._algorithmSelectRow.style.display = \"none\";\r\n            this._phaseModGroup.style.display = \"none\";\r\n            this._feedbackRow1.style.display = \"none\";\r\n            this._feedbackRow2.style.display = \"none\";\r\n            //this._pulseEnvelopeRow.style.display = \"none\";\r\n            this._pulseWidthRow.style.display = \"none\";\r\n            this._vibratoSelectRow.style.display = \"none\";\r\n            this._vibratoDropdownGroup.style.display = \"none\";\r\n            this._envelopeDropdownGroup.style.display = \"none\";\r\n            //this._intervalSelectRow.style.display = \"none\";\r\n            this._detuneSliderRow.style.display = \"none\";\r\n            this._panSliderRow.style.display = \"none\";\r\n            this._panDropdownGroup.style.display = \"none\";\r\n\r\n            this._modulatorGroup.style.display = \"\";\r\n            this._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\r\n\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n                let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                let modChannel: number = Math.max(0, instrument.modChannels[mod]);\r\n                let modInstrument: number = instrument.modInstruments[mod];\r\n\r\n                // Boundary checking\r\n                if (modInstrument >= this._doc.song.channels[modChannel].instruments.length + 2 || (modInstrument > 0 && this._doc.song.channels[modChannel].instruments.length <= 1)) {\r\n                    modInstrument = 0;\r\n                    instrument.modInstruments[mod] = 0;\r\n                }\r\n                if (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                    instrument.modInstruments[mod] = 0;\r\n                    instrument.modulators[mod] = 0;\r\n                }\r\n\r\n                // Build options for modulator channels (make sure it has the right number).\r\n                if (this._doc.recalcChannelNames || (this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                    while (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n                    const channelList: string[] = [];\r\n                    channelList.push(\"none\");\r\n                    channelList.push(\"song\");\r\n                    for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n                        if (this._doc.song.channels[i].name == \"\") {\r\n                            channelList.push(\"pitch \" + (i + 1));\r\n                        }\r\n                        else {\r\n                            channelList.push(this._doc.song.channels[i].name);\r\n                        }\r\n                    }\r\n                    for (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n                        if (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n                            channelList.push(\"noise \" + (i + 1));\r\n                        }\r\n                        else {\r\n                            channelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n                        }\r\n                    }\r\n                    buildOptions(this._modChannelBoxes[mod], channelList);\r\n                }\r\n\r\n                // Set selected index based on channel info.\r\n\r\n                this._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\r\n                let channel: Channel = this._doc.song.channels[modChannel];\r\n\r\n                // Build options for modulator instruments (make sure it has the right number).\r\n                if (this._modInstrumentBoxes[mod].children.length != channel.instruments.length + 2) {\r\n                    while (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n                    const instrumentList: string[] = [];\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                        instrumentList.push(\"\" + i + 1);\r\n                    }\r\n                    instrumentList.push(\"all\");\r\n                    instrumentList.push(\"active\");\r\n                    buildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n                }\r\n\r\n                // If non-zero pattern, point to which instrument(s) is/are the current\r\n                if (channel.bars[this._doc.bar] > 0) {\r\n\r\n                    let usedInstruments: number[] = channel.patterns[channel.bars[this._doc.bar] - 1].instruments;\r\n\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n\r\n                        if (usedInstruments.includes(i)) {\r\n                            this._modInstrumentBoxes[mod].options[i].label = \"🢒\" + (i + 1);\r\n                        }\r\n                        else {\r\n                            this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                        this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\r\n                    }\r\n                }\r\n\r\n                // Set selected index based on instrument info.\r\n                this._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n                // Build options for modulator settings (based on channel settings)\r\n\r\n                if (instrument.modChannels[mod] != -2) {\r\n                    while (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n                    const settingList: string[] = [];\r\n                    const unusedSettingList: string[] = [];\r\n\r\n                    // Make sure these names match the names declared for modulators in SynthConfig.ts.\r\n\r\n                    settingList.push(\"none\");\r\n\r\n                    // Populate mod setting options for the song scope.\r\n                    if (instrument.modChannels[mod] == -1) {\r\n                        settingList.push(\"song volume\");\r\n                        settingList.push(\"tempo\");\r\n                        settingList.push(\"song reverb\");\r\n                        settingList.push(\"next bar\");\r\n                        settingList.push(\"song detune\");\r\n                    }\r\n                    // Populate mod setting options for instrument scope.\r\n                    else {\r\n\r\n                        settingList.push(\"note volume\");\r\n                        settingList.push(\"mix volume\");\r\n\r\n                        // Build a list of target instrument indices, types and other info. It will be a single type for a single instrument, but with \"all\" and \"active\" it could be more.\r\n                        // All or active are included together. Active allows any to be set, just in case the user fiddles with which are active later.\r\n                        let tgtInstrumentTypes: InstrumentType[] = [];\r\n                        let anyInstrumentAdvancedEQ:     boolean = false,\r\n                            anyInstrumentSimpleEQ:       boolean = false,\r\n                            anyInstrumentAdvancedNote:   boolean = false,\r\n                            anyInstrumentSimpleNote:     boolean = false,\r\n                            anyInstrumentArps:           boolean = false,\r\n                            anyInstrumentPitchShifts:    boolean = false,\r\n                            anyInstrumentDetunes:        boolean = false,\r\n                            anyInstrumentVibratos:       boolean = false,\r\n                            anyInstrumentNoteFilters:    boolean = false,\r\n                            anyInstrumentDistorts:       boolean = false,\r\n                            anyInstrumentBitcrushes:     boolean = false,\r\n                            anyInstrumentPans:           boolean = false,\r\n                            anyInstrumentChorus:         boolean = false,\r\n                            anyInstrumentEchoes:         boolean = false,\r\n                            anyInstrumentReverbs:        boolean = false,\r\n                            anyInstrumentHasEnvelopes:   boolean = false,\r\n                            anyInstrumentNoteRanges:     boolean = false,\r\n                            anyInstrumentInvertWaves:    boolean = false;\r\n                        let allInstrumentPitchShifts:    boolean = true,\r\n                            allInstrumentNoteFilters:    boolean = true,\r\n                            allInstrumentDetunes:        boolean = true,\r\n                            allInstrumentVibratos:       boolean = true,\r\n                            allInstrumentDistorts:       boolean = true,\r\n                            allInstrumentBitcrushes:     boolean = true,\r\n                            allInstrumentPans:           boolean = true,\r\n                            allInstrumentChorus:         boolean = true,\r\n                            allInstrumentEchoes:         boolean = true,\r\n                            allInstrumentReverbs:        boolean = true,\r\n                            allInstrumentNoteRanges:     boolean = true,\r\n                            allInstrumentInvertWaves:    boolean = true;\r\n                        let instrumentCandidates: number[] = [];\r\n                        if (modInstrument >= channel.instruments.length) {\r\n                            for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                                instrumentCandidates.push(i);\r\n                            }\r\n                        } else {\r\n                            instrumentCandidates.push(modInstrument);\r\n                        }\r\n                        for (let i: number = 0; i < instrumentCandidates.length; i++) {\r\n                            let instrumentIndex = instrumentCandidates[i];\r\n\r\n                            if (!tgtInstrumentTypes.includes(channel.instruments[instrumentIndex].type))\r\n                                tgtInstrumentTypes.push(channel.instruments[instrumentIndex].type);\r\n                            if (channel.instruments[instrumentIndex].eqFilterType)\r\n                                anyInstrumentSimpleEQ = true;\r\n                            else\r\n                                anyInstrumentAdvancedEQ = true;\r\n                            if (effectsIncludeChord(channel.instruments[instrumentIndex].effects) && channel.instruments[instrumentIndex].getChord().arpeggiates) {\r\n                                anyInstrumentArps = true;\r\n                            }\r\n                            if (effectsIncludePitchShift(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentPitchShifts = true;\r\n                            }\r\n                            if (effectsIncludeDetune(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentDetunes = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentDetunes = false;\r\n                            }\r\n                            if (effectsIncludeVibrato(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentVibratos = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentVibratos = false;\r\n                            }\r\n                            if (effectsIncludeNoteFilter(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentNoteFilters = true;\r\n                                if (channel.instruments[instrumentIndex].noteFilterType)\r\n                                    anyInstrumentSimpleNote = true;\r\n                                else\r\n                                    anyInstrumentAdvancedNote = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentNoteFilters = false;\r\n                            }\r\n                            if (effectsIncludeDistortion(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentDistorts = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentDistorts = false;\r\n                            }\r\n                            if (effectsIncludeBitcrusher(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentBitcrushes = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentBitcrushes = false;\r\n                            }\r\n                            if (effectsIncludePanning(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentPans = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentPans = false;\r\n                            }\r\n                            if (effectsIncludeChorus(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentChorus = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentChorus = false;\r\n                            }\r\n                            if (effectsIncludeEcho(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentEchoes = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentEchoes = false;\r\n                            }\r\n                            if (effectsIncludeReverb(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentReverbs = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentReverbs = false;\r\n                            }\r\n                            if (channel.instruments[instrumentIndex].envelopes.length > 0) {\r\n                                anyInstrumentHasEnvelopes = true;\r\n                            }\r\n                            if (effectsIncludeNoteRange(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentNoteRanges = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentNoteRanges = false;\r\n                            }\r\n                            if (effectsIncludeNoteRange(channel.instruments[instrumentIndex].effects)) {\r\n                                anyInstrumentInvertWaves = true;\r\n                            }\r\n                            else {\r\n                                allInstrumentInvertWaves = false;\r\n                            }\r\n\r\n                        }\r\n                        if (anyInstrumentAdvancedEQ) {\r\n                            settingList.push(\"eq filter\");\r\n                        }\r\n                        if (anyInstrumentSimpleEQ) {\r\n                            settingList.push(\"eq filt cut\");\r\n                            settingList.push(\"eq filt peak\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.fm)) {\r\n                            settingList.push(\"fm slider 1\");\r\n                            settingList.push(\"fm slider 2\");\r\n                            settingList.push(\"fm slider 3\");\r\n                            settingList.push(\"fm slider 4\");\r\n                            settingList.push(\"fm feedback\");\r\n                            //settingList.push(\"fm hz frequency 1\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz frequency 2\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz frequency 3\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz frequency 4\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz offset 1\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz offset 2\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz offset 3\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm hz offset 4\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm invert 1\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm invert 2\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm invert 3\"); // FOR 1.4.1\r\n                            //settingList.push(\"fm invert 4\"); // FOR 1.4.1\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.pwm) || tgtInstrumentTypes.includes(InstrumentType.supersaw)) {\r\n                            settingList.push(\"pulse width\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.supersaw)) {\r\n                            settingList.push(\"dynamism\");\r\n                            settingList.push(\"spread\");\r\n                            settingList.push(\"saw shape\");\r\n                        }\r\n                        if (tgtInstrumentTypes.includes(InstrumentType.pickedString)) {\r\n                            settingList.push(\"sustain\");\r\n                        }\r\n                        if (anyInstrumentArps) {\r\n                            settingList.push(\"arp speed\");\r\n                            settingList.push(\"reset arp\");\r\n                        }\r\n                        if (anyInstrumentPitchShifts) {\r\n                            settingList.push(\"pitch shift\");\r\n                        }\r\n                        if (!allInstrumentPitchShifts) {\r\n                            unusedSettingList.push(\"+ pitch shift\");\r\n                        }\r\n                        if (anyInstrumentDetunes) {\r\n                            settingList.push(\"detune\");\r\n                        }\r\n                        if (!allInstrumentDetunes) {\r\n                            unusedSettingList.push(\"+ detune\");\r\n                        }\r\n                        if (anyInstrumentVibratos) {\r\n                            settingList.push(\"vibrato depth\");\r\n                            settingList.push(\"vibrato speed\");\r\n                            settingList.push(\"vibrato delay\");\r\n                        }\r\n                        if (!allInstrumentVibratos) {\r\n                            unusedSettingList.push(\"+ vibrato depth\");\r\n                            unusedSettingList.push(\"+ vibrato speed\");\r\n                            unusedSettingList.push(\"+ vibrato delay\");\r\n                        }\r\n                        if (anyInstrumentNoteFilters) {\r\n                            if (anyInstrumentAdvancedNote) {\r\n                                settingList.push(\"note filter\");\r\n                            }\r\n                            if (anyInstrumentSimpleNote) {\r\n                                settingList.push(\"note filt cut\");\r\n                                settingList.push(\"note filt peak\");\r\n                            }\r\n                        }\r\n                        if (!allInstrumentNoteFilters) {\r\n                            unusedSettingList.push(\"+ note filter\");\r\n                        }\r\n                        if (anyInstrumentDistorts) {\r\n                            settingList.push(\"distortion\");\r\n                        }\r\n                        if (!allInstrumentDistorts) {\r\n                            unusedSettingList.push(\"+ distortion\");\r\n                        }\r\n                        if (anyInstrumentBitcrushes) {\r\n                            settingList.push(\"bit crush\");\r\n                            settingList.push(\"freq crush\");\r\n                        }\r\n                        if (!allInstrumentBitcrushes) {\r\n                            unusedSettingList.push(\"+ bit crush\");\r\n                            unusedSettingList.push(\"+ freq crush\");\r\n                        }\r\n                        if (anyInstrumentPans) {\r\n                            settingList.push(\"pan\");\r\n                            settingList.push(\"pan delay\");\r\n                        }\r\n                        if (!allInstrumentPans) {\r\n                            unusedSettingList.push(\"+ pan\");\r\n                            unusedSettingList.push(\"+ pan delay\");\r\n                        }\r\n                        if (anyInstrumentChorus) {\r\n                            settingList.push(\"chorus\");\r\n                        }\r\n                        if (!allInstrumentChorus) {\r\n                            unusedSettingList.push(\"+ chorus\");\r\n                        }\r\n                        if (anyInstrumentEchoes) {\r\n                            settingList.push(\"echo\");\r\n                            // Disabled currently!\r\n                            //settingList.push(\"echo delay\");\r\n                        }\r\n                        if (!allInstrumentEchoes) {\r\n                            unusedSettingList.push(\"+ echo\");\r\n                            //unusedSettingList.push(\"echo delay\");\r\n                        }\r\n                        if (anyInstrumentReverbs) {\r\n                            settingList.push(\"reverb\");\r\n                        }\r\n                        if (!allInstrumentReverbs) {\r\n                            unusedSettingList.push(\"+ reverb\");\r\n                        }\r\n\r\n                        if (anyInstrumentHasEnvelopes) {\r\n                            settingList.push(\"envelope speed\");\r\n                        }\r\n\r\n                        if (anyInstrumentNoteRanges) {\r\n                            settingList.push(\"note range\");\r\n                        }\r\n                        if (!allInstrumentNoteRanges) {\r\n                            unusedSettingList.push(\"+ note range\");\r\n                        }\r\n\r\n                        if (anyInstrumentInvertWaves) {\r\n                            settingList.push(\"invert wave\");\r\n                        }\r\n                        if (!allInstrumentInvertWaves) {\r\n                            unusedSettingList.push(\"+ invert wave\");\r\n                        }\r\n\r\n                    }\r\n\r\n                    buildOptions(this._modSetBoxes[mod], settingList);\r\n                    if (unusedSettingList.length > 0) {\r\n                        this._modSetBoxes[mod].appendChild(option({ selected: false, disabled: true, value: \"Add Effect\" }, \"Add Effect\"));\r\n                        buildOptions(this._modSetBoxes[mod], unusedSettingList);\r\n                    }\r\n\r\n                    let setIndex: number = settingList.indexOf(Config.modulators[instrument.modulators[mod]].name);\r\n\r\n                    // Catch instances where invalid set forced setting to \"none\"\r\n                    if (setIndex == -1) {\r\n                        this._modSetBoxes[mod].insertBefore(option({ value: Config.modulators[instrument.modulators[mod]].name, style: \"color: red;\" }, Config.modulators[instrument.modulators[mod]].name), this._modSetBoxes[mod].children[0]);\r\n                        this._modSetBoxes[mod].selectedIndex = 0;\r\n                        this._whenSetModSetting(mod, true);\r\n                    }\r\n                    else {\r\n                        this._modSetBoxes[mod].selectedIndex = setIndex;\r\n                        this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\r\n                        instrument.invalidModulators[mod] = false;\r\n                    }\r\n\r\n                } else if (this._modSetBoxes[mod].selectedIndex > 0) {\r\n                    this._modSetBoxes[mod].selectedIndex = 0;\r\n                    this._whenSetModSetting(mod);\r\n                }\r\n\r\n                //Hide instrument select if channel is \"none\" or \"song\"\r\n                if (instrument.modChannels[mod] < 0) {\r\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n                    $(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n                    //Hide setting select if channel is \"none\"\r\n                    if (instrument.modChannels[mod] == -2) {\r\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n                    }\r\n                    else {\r\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n                    }\r\n\r\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.uiWidgetFocus);\r\n                    this._modTargetIndicators[mod].classList.remove(\"modTarget\");\r\n\r\n                }\r\n                else {\r\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\r\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\r\n                    $(\"#modChannelText\" + mod).get(0).innerText = (channel.instruments.length > 1) ? \"Ch:\" : \"Channel:\";\r\n                    $(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n                    ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n                    this._modTargetIndicators[mod].classList.add(\"modTarget\");\r\n                }\r\n\r\n                let filterType: string = Config.modulators[instrument.modulators[mod]].name;\r\n                if (filterType == \"eq filter\" || filterType == \"note filter\") {\r\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"\";\r\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"2px\");\r\n\r\n                    let useInstrument: number = instrument.modInstruments[mod];\r\n                    let modChannel: Channel = this._doc.song.channels[Math.max(0, instrument.modChannels[mod])];\r\n                    let tmpCount: number = -1;\r\n                    if (useInstrument >= modChannel.instruments.length) {\r\n                        // Use greatest number of dots among all instruments if setting is 'all' or 'active'. If it won't have an effect on one, no worry.\r\n                        for (let i: number = 0; i < modChannel.instruments.length; i++) {\r\n                            if (filterType == \"eq filter\") {\r\n                                if (modChannel.instruments[i].eqFilter.controlPointCount > tmpCount) {\r\n                                    tmpCount = modChannel.instruments[i].eqFilter.controlPointCount;\r\n                                    useInstrument = i;\r\n                                }\r\n                            } else {\r\n                                if (modChannel.instruments[i].noteFilter.controlPointCount > tmpCount) {\r\n                                    tmpCount = modChannel.instruments[i].noteFilter.controlPointCount;\r\n                                    useInstrument = i;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Build options for modulator filters (make sure it has the right number of filter dots).\r\n                    let dotCount: number = (filterType == \"eq filter\")\r\n                        ? channel.instruments[useInstrument].getLargestControlPointCount(false)\r\n                        : channel.instruments[useInstrument].getLargestControlPointCount(true);\r\n\r\n                    const isSimple: boolean = (filterType == \"eq filter\" ? channel.instruments[useInstrument].eqFilterType : channel.instruments[useInstrument].noteFilterType);\r\n                    if (isSimple)\r\n                        dotCount = 0;\r\n\r\n                    if (isSimple || this._modFilterBoxes[mod].children.length != 1 + dotCount * 2) {\r\n                        while (this._modFilterBoxes[mod].firstChild) this._modFilterBoxes[mod].remove(0);\r\n                        const dotList: string[] = [];\r\n                        if (!isSimple)\r\n                            dotList.push(\"morph\");\r\n                        for (let i: number = 0; i < dotCount; i++) {\r\n                            dotList.push(\"dot \" + (i + 1) + \" x\");\r\n                            dotList.push(\"dot \" + (i + 1) + \" y\");\r\n                        }\r\n                        buildOptions(this._modFilterBoxes[mod], dotList);\r\n                    }\r\n\r\n                    if (isSimple || instrument.modFilterTypes[mod] >= this._modFilterBoxes[mod].length) {\r\n                        this._modFilterBoxes[mod].classList.add(\"invalidSetting\");\r\n                        instrument.invalidModulators[mod] = true;\r\n                        let useName: string = ((instrument.modFilterTypes[mod] - 1) % 2 == 1) ?\r\n                            \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" y\"\r\n                            : \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" x\";\r\n                        if (instrument.modFilterTypes[mod] == 0)\r\n                            useName = \"morph\";\r\n                        this._modFilterBoxes[mod].insertBefore(option({ value: useName, style: \"color: red;\" }, useName), this._modFilterBoxes[mod].children[0]);\r\n                        this._modFilterBoxes[mod].selectedIndex = 0;\r\n\r\n                    }\r\n                    else {\r\n                        this._modFilterBoxes[mod].classList.remove(\"invalidSetting\");\r\n                        instrument.invalidModulators[mod] = false;\r\n                        this._modFilterBoxes[mod].selectedIndex = instrument.modFilterTypes[mod];\r\n                    }\r\n\r\n\r\n\r\n                } else {\r\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"none\";\r\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"0.9em\");\r\n\r\n                }\r\n            }\r\n\r\n            this._doc.recalcChannelNames = false;\r\n\r\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n                const option: Element = this._chordSelect.children[chordIndex];\r\n                if (!option.hasAttribute(\"hidden\")) {\r\n                    option.setAttribute(\"hidden\", \"\");\r\n                }\r\n\r\n            }\r\n\r\n            //this._instrumentSelectRow.style.display = \"none\";\r\n\r\n            this._customInstrumentSettingsGroup.style.display = \"none\";\r\n            this._panSliderRow.style.display = \"none\";\r\n            this._panDropdownGroup.style.display = \"none\";\r\n            this._instrumentVolumeSliderRow.style.display = \"none\";\r\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"none\");\r\n\r\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n            // Force piano to re-show, if channel is modulator\r\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                this._piano.forceRender();\r\n            }\r\n\r\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\r\n\r\n        }\r\n\r\n        this._instrumentSettingsGroup.style.color = colors.primaryNote;\r\n\r\n        if (this._doc.synth.isFilterModActive(false, this._doc.channel, this._doc.getCurrentInstrument())) {\r\n            this._eqFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\r\n        }\r\n        else {\r\n            this._eqFilterEditor.render();\r\n        }\r\n        this._instrumentVolumeSlider.updateValue(instrument.volume);\r\n        this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\r\n        this._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n        this._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n        this._aliasingBox.checked = instrument.aliases ? true : false;\r\n        this._addEnvelopeButton.disabled = (instrument.envelopeCount >= Config.maxEnvelopeCount);\r\n        this._discreteEnvelopeBox.checked = instrument.discreteEnvelope ? true : false;\r\n\r\n        this._invertWaveBox.checked = instrument.invertWave ? true : false;\r\n\r\n        this._volumeSlider.updateValue(prefs.volume);\r\n\r\n        // If an interface element was selected, but becomes invisible (e.g. an instrument\r\n        // select menu) just select the editor container so keyboard commands still work.\r\n        if (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n            this.refocusStage();\r\n        }\r\n\r\n        this._setPrompt(this._doc.prompt);\r\n\r\n        if (prefs.autoFollow && !this._doc.synth.playing) {\r\n            this._doc.synth.goToBar(this._doc.bar);\r\n        }\r\n\r\n        // When adding effects or envelopes to an instrument in fullscreen modes,\r\n        // auto-scroll the settings areas to ensure the new settings are visible.\r\n        if (this._doc.addedEffect) {\r\n            const envButtonRect: DOMRect = this._addEnvelopeButton.getBoundingClientRect();\r\n            const instSettingsRect: DOMRect = this._instrumentSettingsArea.getBoundingClientRect();\r\n            const settingsRect: DOMRect = this._settingsArea.getBoundingClientRect();\r\n            this._instrumentSettingsArea.scrollTop += Math.max(0, envButtonRect.top - (instSettingsRect.top + instSettingsRect.height));\r\n            this._settingsArea.scrollTop += Math.max(0, envButtonRect.top - (settingsRect.top + settingsRect.height));\r\n            this._doc.addedEffect = false;\r\n        }\r\n        if (this._doc.addedEnvelope) {\r\n            this._instrumentSettingsArea.scrollTop = this._instrumentSettingsArea.scrollHeight;\r\n            this._settingsArea.scrollTop = this._settingsArea.scrollHeight;\r\n            this._doc.addedEnvelope = false;\r\n        }\r\n\r\n        // Writeback to mods if control key is held while moving a slider.\r\n        this.handleModRecording();\r\n\r\n    }\r\n\r\n    public handleModRecording(): void {\r\n        window.clearTimeout(this._modRecTimeout);\r\n        const lastChange: Change | null = this._doc.checkLastChange();\r\n        if ((this._ctrlHeld || this._shiftHeld) && lastChange != null && this._doc.synth.playing) {\r\n            const changedPatterns = this._patternEditor.setModSettingsForChange(lastChange, this);\r\n            if (this._doc.continuingModRecordingChange != null) {\r\n                this._modRecTimeout = window.setTimeout(() => { this.handleModRecording(); }, 10);\r\n                this._doc.recordingModulators = true;\r\n\r\n                if (changedPatterns)\r\n                    this._trackEditor.render();\r\n            }\r\n        }\r\n        else if (this._doc.recordingModulators) {\r\n            this._doc.recordingModulators = false;\r\n            // A dummy change that pushes history state.\r\n            this._doc.record(new ChangeHoldingModRecording(this._doc, null, null, null));\r\n        }\r\n    }\r\n\r\n    private _renderInstrumentBar(channel: Channel, instrumentIndex: number, colors: ChannelColors) {\r\n        if (this._doc.song.layeredInstruments || this._doc.song.patternInstruments) {\r\n            this._instrumentsButtonRow.style.display = \"\";\r\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-lit\", colors.primaryNote);\r\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\r\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\r\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\r\n\r\n            const maxInstrumentsPerChannel = this._doc.song.getMaxInstrumentsPerChannel();\r\n            while (this._instrumentButtons.length < channel.instruments.length) {\r\n                const instrumentButton: HTMLButtonElement = button(String(this._instrumentButtons.length + 1));\r\n                this._instrumentButtons.push(instrumentButton);\r\n                this._instrumentsButtonBar.insertBefore(instrumentButton, this._instrumentRemoveButton);\r\n            }\r\n            for (let i: number = this._renderedInstrumentCount; i < channel.instruments.length; i++) {\r\n                this._instrumentButtons[i].style.display = \"\";\r\n            }\r\n            for (let i: number = channel.instruments.length; i < this._renderedInstrumentCount; i++) {\r\n                this._instrumentButtons[i].style.display = \"none\";\r\n            }\r\n            this._renderedInstrumentCount = channel.instruments.length;\r\n            while (this._instrumentButtons.length > maxInstrumentsPerChannel) {\r\n                this._instrumentsButtonBar.removeChild(this._instrumentButtons.pop()!);\r\n            }\r\n\r\n            this._instrumentRemoveButton.style.display = (channel.instruments.length > Config.instrumentCountMin) ? \"\" : \"none\";\r\n            this._instrumentAddButton.style.display = (channel.instruments.length < maxInstrumentsPerChannel) ? \"\" : \"none\";\r\n            if (channel.instruments.length < maxInstrumentsPerChannel) {\r\n                this._instrumentRemoveButton.classList.remove(\"last-button\");\r\n            } else {\r\n                this._instrumentRemoveButton.classList.add(\"last-button\");\r\n            }\r\n            if (channel.instruments.length > 1) {\r\n                if (this._highlightedInstrumentIndex != instrumentIndex) {\r\n                    const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\r\n                    if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\r\n                    const newButton: HTMLButtonElement = this._instrumentButtons[instrumentIndex];\r\n                    newButton.classList.add(\"selected-instrument\");\r\n                    this._highlightedInstrumentIndex = instrumentIndex;\r\n                }\r\n            } else {\r\n                const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\r\n                if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\r\n                this._highlightedInstrumentIndex = -1;\r\n            }\r\n\r\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                //const pattern: Pattern | null = this._doc.getCurrentPattern();\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                    if (this._doc.recentPatternInstruments[this._doc.channel].indexOf(i) != -1) {\r\n                        this._instrumentButtons[i].classList.remove(\"deactivated\");\r\n                    } else {\r\n                        this._instrumentButtons[i].classList.add(\"deactivated\");\r\n                    }\r\n                }\r\n                this._deactivatedInstruments = true;\r\n            } else if (this._deactivatedInstruments || (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n\r\n                    this._instrumentButtons[i].classList.remove(\"deactivated\");\r\n                }\r\n                this._deactivatedInstruments = false;\r\n            }\r\n\r\n            if ((this._doc.song.layeredInstruments && this._doc.song.patternInstruments) && channel.instruments.length > 1 && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                    this._instrumentButtons[i].classList.remove(\"no-underline\");\r\n                }\r\n            }\r\n            else {\r\n                for (let i: number = 0; i < channel.instruments.length; i++) {\r\n                    this._instrumentButtons[i].classList.add(\"no-underline\");\r\n                }\r\n            }\r\n        } else {\r\n            this._instrumentsButtonRow.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    public updatePlayButton = (): void => {\r\n        if (this._renderedIsPlaying != this._doc.synth.playing || this._renderedIsRecording != this._doc.synth.recording || this._renderedShowRecordButton != this._doc.prefs.showRecordButton || this._renderedCtrlHeld != this._ctrlHeld) {\r\n            this._renderedIsPlaying = this._doc.synth.playing;\r\n            this._renderedIsRecording = this._doc.synth.recording;\r\n            this._renderedShowRecordButton = this._doc.prefs.showRecordButton;\r\n            this._renderedCtrlHeld = this._ctrlHeld;\r\n\r\n            if (document.activeElement == this._playButton || document.activeElement == this._pauseButton || document.activeElement == this._recordButton || document.activeElement == this._stopButton) {\r\n                // When a focused element is hidden, focus is transferred to the document, so let's refocus the editor instead to make sure we can still capture keyboard input.\r\n                this.refocusStage();\r\n            }\r\n\r\n            this._playButton.style.display = \"none\";\r\n            this._pauseButton.style.display = \"none\";\r\n            this._recordButton.style.display = \"none\";\r\n            this._stopButton.style.display = \"none\";\r\n            this._prevBarButton.style.display = \"\";\r\n            this._nextBarButton.style.display = \"\";\r\n            this._playButton.classList.remove(\"shrunk\");\r\n            this._recordButton.classList.remove(\"shrunk\");\r\n            this._patternEditorRow.style.pointerEvents = \"\";\r\n            this._octaveScrollBar.container.style.pointerEvents = \"\";\r\n            this._octaveScrollBar.container.style.opacity = \"\";\r\n            this._trackContainer.style.pointerEvents = \"\";\r\n            this._loopEditor.container.style.opacity = \"\";\r\n            this._instrumentSettingsArea.style.pointerEvents = \"\";\r\n            this._instrumentSettingsArea.style.opacity = \"\";\r\n            this._menuArea.style.pointerEvents = \"\";\r\n            this._menuArea.style.opacity = \"\";\r\n            this._songSettingsArea.style.pointerEvents = \"\";\r\n            this._songSettingsArea.style.opacity = \"\";\r\n\r\n            if (this._doc.synth.recording) {\r\n                this._stopButton.style.display = \"\";\r\n                this._prevBarButton.style.display = \"none\";\r\n                this._nextBarButton.style.display = \"none\";\r\n                this._patternEditorRow.style.pointerEvents = \"none\";\r\n                this._octaveScrollBar.container.style.pointerEvents = \"none\";\r\n                this._octaveScrollBar.container.style.opacity = \"0.5\";\r\n                this._trackContainer.style.pointerEvents = \"none\";\r\n                this._loopEditor.container.style.opacity = \"0.5\";\r\n                this._instrumentSettingsArea.style.pointerEvents = \"none\";\r\n                this._instrumentSettingsArea.style.opacity = \"0.5\";\r\n                this._menuArea.style.pointerEvents = \"none\";\r\n                this._menuArea.style.opacity = \"0.5\";\r\n                this._songSettingsArea.style.pointerEvents = \"none\";\r\n                this._songSettingsArea.style.opacity = \"0.5\";\r\n            } else if (this._doc.synth.playing) {\r\n                this._pauseButton.style.display = \"\";\r\n            } else if (this._doc.prefs.showRecordButton) {\r\n                this._playButton.style.display = \"\";\r\n                this._recordButton.style.display = \"\";\r\n                this._playButton.classList.add(\"shrunk\");\r\n                this._recordButton.classList.add(\"shrunk\");\r\n            } else if (this._ctrlHeld) {\r\n                this._recordButton.style.display = \"\";\r\n            } else {\r\n                this._playButton.style.display = \"\";\r\n            }\r\n        }\r\n        window.requestAnimationFrame(this.updatePlayButton);\r\n    }\r\n\r\n    private _onTrackAreaScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackAndMuteContainer.scrollLeft / this._doc.getBarWidth());\r\n\t\t//this._doc.notifier.changed();\r\n\t}\r\n\r\n    private _disableCtrlContextMenu = (event: MouseEvent): boolean => {\r\n        // On a Mac, clicking while holding control opens the right-click context menu.\r\n        // But in the pattern and track editors I'd rather prevent that and instead allow\r\n        // custom behaviors such as setting the volume of a note.\r\n        if (event.ctrlKey) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _usageCheck(channelIndex: number, instrumentIndex: number): void {\r\n        var instrumentUsed = false;\r\n        var patternUsed = false;\r\n        var modUsed = false;\r\n        const channel: Channel = this._doc.song.channels[channelIndex];\r\n\r\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\r\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\r\n                const patternIdx = modChannel.bars[this._doc.bar];\r\n                if (patternIdx > 0) {\r\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\r\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= channel.instruments.length)) {\r\n                            modUsed = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n        let highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n        let lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n        let highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n        if (channel.bars[this._doc.bar] != 0) {\r\n            for (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n                // Check for this exact bar in another place, but only count it if it's not within the selection\r\n                if (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n                    (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n                    patternUsed = true;\r\n                    i = this._doc.song.barCount;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n            // Check for this exact instrument in another place, but only count it if it's not within the selection\r\n            if (channel.bars[i] != 0 && channel.bars[i] != channel.bars[this._doc.bar] &&\r\n                channel.patterns[channel.bars[i] - 1].instruments.includes(instrumentIndex) && i != this._doc.bar &&\r\n                (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n                instrumentUsed = true;\r\n                i = this._doc.song.barCount;\r\n            }\r\n        }\r\n\r\n        if (patternUsed) {\r\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n            this.patternUsed = true;\r\n        }\r\n        else {\r\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n            this.patternUsed = false;\r\n        }\r\n        if (instrumentUsed) {\r\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n        }\r\n        else {\r\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n        }\r\n        if (modUsed) {\r\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\r\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n            this._jumpToModIndicator.classList.add(\"modTarget\");\r\n        }\r\n        else if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\r\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n            this._jumpToModIndicator.classList.remove(\"modTarget\");\r\n        } else {\r\n            this._jumpToModIndicator.style.setProperty(\"display\", \"none\");\r\n        }\r\n\r\n    }\r\n\r\n    private _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n        // When the number input is in focus, allow some keyboard events to\r\n        // edit the input without accidentally editing the song otherwise.\r\n        switch (event.keyCode) {\r\n            case 8: // backspace/delete\r\n            case 13: // enter/return\r\n            case 38: // up\r\n            case 40: // down\r\n            case 37: // left\r\n            case 39: // right\r\n            case 48: // 0\r\n            case 49: // 1\r\n            case 50: // 2\r\n            case 51: // 3\r\n            case 52: // 4\r\n            case 53: // 5\r\n            case 54: // 6\r\n            case 55: // 7\r\n            case 56: // 8\r\n            case 57: // 9\r\n                event.stopPropagation();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\r\n        this._ctrlHeld = event.ctrlKey;\r\n        this._shiftHeld = event.shiftKey;\r\n\r\n        if (this.prompt) {\r\n            if (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomFilterPrompt) {\r\n                this.prompt.whenKeyPressed(event);\r\n            }\r\n            if (event.keyCode == 27) { // ESC key\r\n                // close prompt.\r\n                this._doc.undo();\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Defer to actively editing song title, channel name, or mod label\r\n        if (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n            // Enter/esc returns focus to form\r\n            if (event.keyCode == 13 || event.keyCode == 27) {\r\n                this.mainLayer.focus();\r\n                this._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Defer to actively editing volume/pan rows\r\n        if (document.activeElement == this._panSliderInputBox || document.activeElement == this._pwmSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n            // Enter/esc returns focus to form\r\n            if (event.keyCode == 13 || event.keyCode == 27) {\r\n                this.mainLayer.focus();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Defer to actively editing upper and lower note limit\r\n        if (document.activeElement == this._upperNoteLimitInputBox || document.activeElement == this._lowerNoteLimitInputBox) {\r\n            // Enter/esc returns focus to form\r\n            if (event.keyCode == 13 || event.keyCode == 27) {\r\n                this.mainLayer.focus();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Defer to actively editing any of the existing FM frequencies\r\n        for (const numbox of this._operatorFrequencyInputs) {\r\n            if (document.activeElement == numbox) {\r\n                // Enter/esc returns focus to form\r\n                if (event.keyCode == 13 || event.keyCode == 27) {\r\n                    this.mainLayer.focus();\r\n                }\r\n    \r\n                return;\r\n            }\r\n        }\r\n\r\n        // Do I really need to say this every time?\r\n        for (const numbox of this._operatorHzOffsetInputs) {\r\n            if (document.activeElement == numbox) {\r\n                // Enter/esc returns focus to form\r\n                if (event.keyCode == 13 || event.keyCode == 27) {\r\n                    this.mainLayer.focus();\r\n                }\r\n    \r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        if (this._doc.synth.recording) {\r\n            // The only valid keyboard interactions when recording are playing notes or pressing space OR P to stop.\r\n            if (!event.ctrlKey && !event.metaKey) {\r\n                this._keyboardLayout.handleKeyEvent(event, true);\r\n            }\r\n            if (event.keyCode == 32) { // space\r\n                this._toggleRecord();\r\n                event.preventDefault();\r\n                this.refocusStage();\r\n            } else if (event.keyCode == 80 && (event.ctrlKey || event.metaKey)) { // p\r\n                this._toggleRecord();\r\n                event.preventDefault();\r\n                this.refocusStage();\r\n            }\r\n            return;\r\n        }\r\n\r\n        const needControlForShortcuts: boolean = (this._doc.prefs.pressControlForShortcuts != event.getModifierState(\"CapsLock\"));\r\n        const canPlayNotes: boolean = (!event.ctrlKey && !event.metaKey && needControlForShortcuts);\r\n        if (canPlayNotes) this._keyboardLayout.handleKeyEvent(event, true);\r\n\r\n        //this._trackEditor.onKeyPressed(event);\r\n        switch (event.keyCode) {\r\n            case 27: // ESC key\r\n                if (!event.ctrlKey && !event.metaKey) {\r\n                    new ChangePatternSelection(this._doc, 0, 0);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                break;\r\n            case 16: // Shift\r\n                this._patternEditor.shiftMode = true;\r\n                break;\r\n            case 17: // Ctrl\r\n                this._patternEditor.controlMode = true;\r\n                break;\r\n            case 32: // space\r\n                if (event.ctrlKey) {\r\n                    this._toggleRecord();\r\n                } else if (event.shiftKey) {\r\n                    // Jump to mouse\r\n                    if (this._trackEditor.movePlayheadToMouse() || this._patternEditor.movePlayheadToMouse()) {\r\n                        if (!this._doc.synth.playing) this._doc.performance.play();\r\n                    }\r\n                    this._doc.synth.loopBar = -1;\r\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n                } else {\r\n                    this.togglePlay();\r\n                }\r\n                event.preventDefault();\r\n                this.refocusStage();\r\n                break;\r\n            case 80: // p\r\n                if (canPlayNotes) break;\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._toggleRecord();\r\n                    this._doc.synth.loopBar = -1;\r\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n                    event.preventDefault();\r\n                    this.refocusStage();\r\n                }\r\n                break;\r\n            case 90: // z\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._doc.redo();\r\n                } else {\r\n                    this._doc.undo();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 89: // y\r\n                if (canPlayNotes) break;\r\n                this._doc.redo();\r\n                event.preventDefault();\r\n                break;\r\n            case 66: // b\r\n                if (canPlayNotes) break;\r\n\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    if (this._doc.synth.loopBar != this._doc.bar) {\r\n                        this._doc.synth.loopBar = this._doc.bar;\r\n\r\n                        if (!this._doc.synth.playing) {\r\n                            this._doc.synth.snapToBar();\r\n                            this._doc.performance.play();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._doc.synth.loopBar = -1;\r\n                    }\r\n\r\n                    // Pressed while viewing a different bar than the current synth playhead.\r\n                    if (this._doc.bar != Math.floor(this._doc.synth.playhead) && this._doc.synth.loopBar != -1) {\r\n\r\n                        this._doc.synth.goToBar(this._doc.bar);\r\n                        this._doc.synth.snapToBar();\r\n                        this._doc.synth.initModFilters(this._doc.song);\r\n                        this._doc.synth.computeLatestModValues();\r\n                        if (this._doc.prefs.autoFollow) {\r\n                            this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                        }\r\n\r\n                    }\r\n\r\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 67: // c\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._copyInstrument();\r\n                } else {\r\n                    this._doc.selection.copy();\r\n                }\r\n                this._doc.selection.resetBoxSelection();\r\n                this._doc.selection.selectionUpdated();\r\n                event.preventDefault();\r\n                break;\r\n            case 13: // enter/return\r\n                this._doc.synth.loopBar = -1;\r\n                this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.insertChannel();\r\n                } else {\r\n                    this._doc.selection.insertBars();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 8: // backspace/delete\r\n                this._doc.synth.loopBar = -1;\r\n                this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.deleteChannel();\r\n                } else {\r\n                    this._doc.selection.deleteBars();\r\n                }\r\n                this._barScrollBar.animatePlayhead();\r\n                event.preventDefault();\r\n                break;\r\n            case 65: // a\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._doc.selection.selectChannel();\r\n                } else {\r\n                    this._doc.selection.selectAll();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 68: // d\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.selection.duplicatePatterns();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 69: // e (+shift: eq filter settings)\r\n                if (event.shiftKey) {\r\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                    if (!instrument.eqFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                        this._openPrompt(\"customEQFilterSettings\");\r\n                }\r\n                break;\r\n            case 70: // f\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n\r\n                    this._doc.synth.loopBar = -1;\r\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n                    this._doc.synth.snapToStart();\r\n                    this._doc.synth.initModFilters(this._doc.song);\r\n                    this._doc.synth.computeLatestModValues();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 72: // h\r\n                if (canPlayNotes) break;\r\n\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n\r\n                    if (this._doc.synth.loopBar != this._doc.bar) {\r\n                        this._doc.synth.loopBar = -1;\r\n                        this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n                    }\r\n\r\n                    this._doc.synth.goToBar(this._doc.bar);\r\n                    this._doc.synth.snapToBar();\r\n                    this._doc.synth.initModFilters(this._doc.song);\r\n                    this._doc.synth.computeLatestModValues();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 74: // j\r\n                if (canPlayNotes) break;\r\n                // Ctrl Alt Shift J: Jummbify - set all prefs to my preferred ones lol\r\n                // WHY DOES THIS EXIST\r\n                // more of a reson to add settings import/export...\r\n                if (event.shiftKey && event.ctrlKey && event.altKey) {\r\n                    this._doc.prefs.autoPlay = false;\r\n                    this._doc.prefs.autoFollow = false;\r\n                    this._doc.prefs.enableNotePreview = true;\r\n                    this._doc.prefs.showFifth = true;\r\n                    this._doc.prefs.notesOutsideScale = false;\r\n                    this._doc.prefs.defaultScale = 0;\r\n                    this._doc.prefs.showLetters = true;\r\n                    this._doc.prefs.showChannels = true;\r\n                    this._doc.prefs.showScrollBar = true;\r\n                    this._doc.prefs.alwaysFineNoteVol = false;\r\n                    this._doc.prefs.enableChannelMuting = true;\r\n                    this._doc.prefs.displayBrowserUrl = true;\r\n                    this._doc.prefs.displayVolumeBar = true;\r\n                    this._doc.prefs.layout = \"wide\";\r\n                    this._doc.prefs.visibleOctaves = 5;\r\n                    this._doc.prefs.save();\r\n                    event.preventDefault();\r\n                    location.reload();\r\n                }\r\n                break;\r\n            case 76: // l\r\n                if (canPlayNotes) break;\r\n                if (event.shiftKey) {\r\n                    this._openPrompt(\"limiterSettings\");\r\n                }\r\n                else {\r\n                    this._openPrompt(\"barCount\");\r\n                }\r\n                break;\r\n            case 77: // m\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    if (this._doc.prefs.enableChannelMuting) {\r\n                        this._doc.selection.muteChannels(event.shiftKey);\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n                break;\r\n            case 78: // n\r\n                if (canPlayNotes) break;\r\n                // Find lowest-index unused pattern for current channel\r\n                // Ctrl+n - lowest-index completely empty pattern\r\n                // Shift+n - note filter settings\r\n\r\n                const group: ChangeGroup = new ChangeGroup();\r\n\r\n                if (event.shiftKey) {\r\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                    if (effectsIncludeNoteFilter(instrument.effects) && !instrument.noteFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                        this._openPrompt(\"customNoteFilterSettings\");\r\n                    break;\r\n                }\r\n                else if (event.ctrlKey) {\r\n                    let nextEmpty: number = 0;\r\n                    while (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n                        nextEmpty++;\r\n\r\n                    nextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n                    // Can't set anything if we're at the absolute limit.\r\n                    if (nextEmpty <= Config.barCountMax) {\r\n\r\n                        if (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n                            // Add extra empty pattern, if all the rest have something in them.\r\n                            group.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n                        }\r\n\r\n                        // Change pattern number to lowest-index unused\r\n                        group.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n                        // Auto set the used instruments to the ones you were most recently viewing.\r\n                        if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                        {\r\n\r\n                                this._doc.viewedInstrument[this._doc.channel] = this._doc.recentPatternInstruments[this._doc.channel][0];\r\n                        }\r\n                        group.append(new ChangeSetPatternInstruments(this._doc, this._doc.channel, this._doc.recentPatternInstruments[this._doc.channel],  this._doc.song.channels[this._doc.channel].patterns[nextEmpty-1]));\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    let nextUnused: number = 1;\r\n                    while (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n                        && nextUnused <= this._doc.song.patternsPerChannel)\r\n                        nextUnused++;\r\n\r\n                    // Can't set anything if we're at the absolute limit.\r\n                    if (nextUnused <= Config.barCountMax) {\r\n\r\n                        if (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n                            // Add extra empty pattern, if all the rest are used.\r\n                            group.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n                        }\r\n\r\n                        // Change pattern number to lowest-index unused\r\n                        group.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n                        // Auto set the used instruments to the ones you were most recently viewing.\r\n                        if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                        {\r\n                                this._doc.viewedInstrument[this._doc.channel] = this._doc.recentPatternInstruments[this._doc.channel][0];\r\n                        }\r\n                        group.append(new ChangeSetPatternInstruments(this._doc, this._doc.channel, this._doc.recentPatternInstruments[this._doc.channel],  this._doc.song.channels[this._doc.channel].patterns[nextUnused-1]));\r\n\r\n                    }\r\n                }\r\n\r\n                this._doc.record(group);\r\n\r\n                event.preventDefault();\r\n                break;\r\n            case 81: // q\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._openPrompt(\"channelSettings\");\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 83: // s\r\n                if (canPlayNotes) break;\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._openPrompt(\"export\");\r\n                    event.preventDefault();\r\n                } else {\r\n                    if (this._doc.prefs.enableChannelMuting) {\r\n                        // JummBox deviation: I like shift+s as just another mute toggle personally.\r\n                        // Easier to reach than M and the shift+s invert functionality I am overwriting could be\r\n                        // obtained with M anyway. Useability-wise you very often want to 'add' channels on to a solo as you work.\r\n                        if (event.shiftKey) {\r\n                            this._doc.selection.muteChannels(false);\r\n                        } else {\r\n                            this._doc.selection.soloChannels(false);\r\n                        }\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n                break;\r\n            case 79: // o\r\n                if (canPlayNotes) break;\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._openPrompt(\"import\");\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 86: // v\r\n                if (canPlayNotes) break;\r\n                if ((event.ctrlKey || event.metaKey) && event.shiftKey && !needControlForShortcuts) {\r\n                    this._doc.selection.pasteNumbers();\r\n                } else if (event.shiftKey) {\r\n                    this._pasteInstrument();\r\n                } else {\r\n                    this._doc.selection.pasteNotes();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 87: // w\r\n                if (canPlayNotes) break;\r\n                this._openPrompt(\"moveNotesSideways\");\r\n                break;\r\n            case 73: // i\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey) && event.shiftKey) {\r\n                    // Copy the current instrument as a preset to the clipboard.\r\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n                    const instrumentObject: any = instrument.toJsonObject();\r\n                    delete instrumentObject[\"preset\"];\r\n                    // Volume and the panning effect are not included in presets.\r\n                    delete instrumentObject[\"volume\"];\r\n                    delete instrumentObject[\"pan\"];\r\n                    const panningEffectIndex: number = instrumentObject[\"effects\"].indexOf(Config.effectNames[EffectType.panning]);\r\n                    if (panningEffectIndex != -1) instrumentObject[\"effects\"].splice(panningEffectIndex, 1);\r\n                    for (let i: number = 0; i < instrumentObject[\"envelopes\"].length; i++) {\r\n                        const envelope: any = instrumentObject[\"envelopes\"][i];\r\n                        // If there are any envelopes targeting panning or none, remove those too.\r\n                        if (envelope[\"target\"] == \"panning\" || envelope[\"target\"] == \"none\" || envelope[\"envelope\"] == \"none\") {\r\n                            instrumentObject[\"envelopes\"].splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                    this._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 82: // r\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    if (event.shiftKey) {\r\n                        this._randomGenerated();\r\n                    } else {\r\n                        this._randomPreset();\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 219: // left brace\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.synth.loopBar = -1;\r\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n                    this._doc.synth.goToPrevBar();\r\n                    this._doc.synth.initModFilters(this._doc.song);\r\n                    this._doc.synth.computeLatestModValues();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 221: // right brace\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.synth.loopBar = -1;\r\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n\r\n                    this._doc.synth.goToNextBar();\r\n                    this._doc.synth.initModFilters(this._doc.song);\r\n                    this._doc.synth.computeLatestModValues();\r\n                    if (this._doc.prefs.autoFollow) {\r\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 189: // -\r\n            case 173: // Firefox -\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.selection.transpose(false, event.shiftKey);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 187: // +\r\n            case 61: // Firefox +\r\n            case 171: // Some users have this as +? Hmm.\r\n                if (canPlayNotes) break;\r\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\r\n                    this._doc.selection.transpose(true, event.shiftKey);\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            case 38: // up\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.swapChannels(-1);\r\n                } else if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 40: // down\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    this._doc.selection.swapChannels(1);\r\n                } else if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 37: // left\r\n                if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 39: // right\r\n                if (event.shiftKey) {\r\n                    this._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n                    this._doc.selection.scrollToEndOfSelection();\r\n                    this._doc.selection.selectionUpdated();\r\n                } else {\r\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n                    this._doc.selection.resetBoxSelection();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n            case 46: // Delete\r\n                this._doc.selection.digits = \"\";\r\n                this._doc.selection.nextDigit(\"0\", false, false);\r\n                break;\r\n            case 48: // 0\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"0\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 49: // 1\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"1\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 50: // 2\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"2\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 51: // 3\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"3\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 52: // 4\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"4\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 53: // 5\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"5\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 54: // 6\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"6\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 55: // 7\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"7\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 56: // 8\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"8\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            case 57: // 9\r\n                if (canPlayNotes) break;\r\n                this._doc.selection.nextDigit(\"9\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\r\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n                event.preventDefault();\r\n                break;\r\n            default:\r\n                this._doc.selection.digits = \"\";\r\n                this._doc.selection.instrumentDigits = \"\";\r\n                break;\r\n        }\r\n\r\n        if (canPlayNotes) {\r\n            this._doc.selection.digits = \"\";\r\n            this._doc.selection.instrumentDigits = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    private _whenKeyReleased = (event: KeyboardEvent): void => {\r\n        this._muteEditor.onKeyUp(event);\r\n        if (!event.ctrlKey) { // Ctrl\r\n            this._patternEditor.controlMode = false;\r\n        }\r\n        if (!event.shiftKey) { // Shift\r\n            this._patternEditor.shiftMode = false;\r\n        }\r\n\r\n        this._ctrlHeld = event.ctrlKey;\r\n        this._shiftHeld = event.shiftKey;\r\n        // Release live pitches regardless of control or caps lock so that any pitches played before will get released even if the modifier keys changed.\r\n        this._keyboardLayout.handleKeyEvent(event, false);\r\n    }\r\n\r\n    private _copyTextToClipboard(text: string): void {\r\n        // Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n        let nav: any;\r\n        nav = navigator;\r\n\r\n        if (nav.clipboard && nav.clipboard.writeText) {\r\n            nav.clipboard.writeText(text).catch(() => {\r\n                window.prompt(\"Copy to clipboard:\", text);\r\n            });\r\n            return;\r\n        }\r\n        const textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n        textField.textContent = text;\r\n        document.body.appendChild(textField);\r\n        textField.select();\r\n        const succeeded: boolean = document.execCommand(\"copy\");\r\n        textField.remove();\r\n        this.refocusStage();\r\n        if (!succeeded) window.prompt(\"Copy this:\", text);\r\n    }\r\n\r\n    private _whenPrevBarPressed = (): void => {\r\n        this._doc.synth.loopBar = -1;\r\n        this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n        this._doc.synth.goToPrevBar();\r\n        this._barScrollBar.animatePlayhead();\r\n    }\r\n\r\n    private _whenNextBarPressed = (): void => {\r\n        this._doc.synth.loopBar = -1;\r\n        this._loopEditor.setLoopAt(this._doc.synth.loopBar);\r\n        this._doc.synth.goToNextBar();\r\n        this._barScrollBar.animatePlayhead();\r\n    }\r\n\r\n    public togglePlay = (): void => {\r\n        if (this._doc.synth.playing) {\r\n            this._doc.performance.pause();\r\n            this.outVolumeHistoricCap = 0;\r\n        } else {\r\n            this._doc.synth.snapToBar();\r\n            this._doc.performance.play();\r\n        }\r\n    }\r\n\r\n    private _toggleRecord = (): void => {\r\n        if (this._doc.synth.playing) {\r\n            this._doc.performance.pause();\r\n        } else {\r\n            this._doc.performance.record();\r\n        }\r\n    }\r\n\r\n    public _animate = (): void => {\r\n        // Need to update mods once more to clear the slider display\r\n        this._modSliderUpdate();\r\n        // Same for volume display\r\n        if (this._doc.prefs.displayVolumeBar) {\r\n            this._volumeUpdate();\r\n        }\r\n        // ...and barscrollbar playhead\r\n        this._barScrollBar.animatePlayhead();\r\n        // ...and filters\r\n        if (this._doc.synth.isFilterModActive(false, this._doc.channel, this._doc.getCurrentInstrument())) {\r\n            this._eqFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\r\n        }\r\n        if (this._doc.synth.isFilterModActive(true, this._doc.channel, this._doc.getCurrentInstrument())) {\r\n            this._noteFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\r\n        }\r\n\r\n\r\n        window.requestAnimationFrame(this._animate);\r\n    }\r\n\r\n    public _volumeUpdate = (): void => {\r\n        this.outVolumeHistoricTimer--;\r\n        if (this.outVolumeHistoricTimer <= 0) {\r\n            this.outVolumeHistoricCap -= 0.03;\r\n        }\r\n        if (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n            this.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n            this.outVolumeHistoricTimer = 50;\r\n        }\r\n\r\n        if (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n            this.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n            this._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n        }\r\n    }\r\n\r\n    private _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n        this._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n        this._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n    }\r\n\r\n    private _setVolumeSlider = (): void => {\r\n        // Song volume slider doesn't use a change, but it can still be modulated.\r\n        if ((this._ctrlHeld || this._shiftHeld) && this._doc.synth.playing) {\r\n            const prevVol = this._doc.prefs.volume;\r\n            // The slider only goes to 75, but the mod is 0-100 and in this instance we're using the value for a mod set.\r\n            this._doc.prefs.volume = Math.round(Number(this._volumeSlider.input.value) * 4 / 3);\r\n            const changedPatterns = this._patternEditor.setModSettingsForChange(null, this);\r\n            const useVol: number = this._doc.prefs.volume;\r\n            window.clearTimeout(this._modRecTimeout);\r\n            this._modRecTimeout = window.setTimeout(() => { this._recordVolumeSlider(useVol); }, 10);\r\n            this._doc.recordingModulators = true;\r\n\r\n            this._doc.prefs.volume = prevVol;\r\n            this._volumeSlider.updateValue(this._doc.prefs.volume);\r\n\r\n            if (changedPatterns)\r\n                this._trackEditor.render();\r\n            }\r\n        else {\r\n            this._doc.setVolume(Number(this._volumeSlider.input.value));\r\n            if (this._doc.recordingModulators) {\r\n                this._doc.recordingModulators = false;\r\n                // A dummy change that pushes history state.\r\n                this._doc.record(new ChangeHoldingModRecording(this._doc, null, null, null));\r\n            }\r\n        }\r\n    }\r\n\r\n    private _recordVolumeSlider(useVol: number): void {\r\n        // Song volume slider doesn't use a change, but it can still be modulated.\r\n        if ((this._ctrlHeld || this._shiftHeld) && this._doc.synth.playing) {\r\n            const prevVol = this._doc.prefs.volume;\r\n            // The slider only goes to 75, but the mod is 0-100 and in this instance we're using the value for a mod set.\r\n            this._doc.prefs.volume = useVol;\r\n            this._patternEditor.setModSettingsForChange(null, this);\r\n            window.clearTimeout(this._modRecTimeout);\r\n            this._modRecTimeout = window.setTimeout(() => { this._recordVolumeSlider(useVol); }, 10);\r\n            this._doc.recordingModulators = true;\r\n\r\n            this._doc.prefs.volume = prevVol;\r\n            this._volumeSlider.updateValue(this._doc.prefs.volume);\r\n        }\r\n        else {\r\n            this._doc.setVolume(Number(this._volumeSlider.input.value));\r\n            if (this._doc.recordingModulators) {\r\n                this._doc.recordingModulators = false;\r\n                // A dummy change that pushes history state.\r\n                this._doc.record(new ChangeHoldingModRecording(this._doc, null, null, null));\r\n            }\r\n        }\r\n    }\r\n\r\n    private _copyInstrument = (): void => {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        const instrumentCopy: any = instrument.toJsonObject();\r\n        instrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n        window.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _pasteInstrument = (): void => {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        const instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n        if (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n            this._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n        }\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _exportInstruments = (): void => {\r\n        this._openPrompt(\"exportInstrument\");\r\n    }\r\n\r\n    private _importInstruments = (): void => {\r\n        this._openPrompt(\"importInstrument\");\r\n    };\r\n\r\n\r\n    private _switchEQFilterType(toSimple: boolean) {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        if (instrument.eqFilterType != toSimple) {\r\n            this._doc.record(new ChangeEQFilterType(this._doc, instrument, toSimple));\r\n        }\r\n    }\r\n\r\n    private _switchNoteFilterType(toSimple: boolean) {\r\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\r\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n        if (instrument.noteFilterType != toSimple) {\r\n            this._doc.record(new ChangeNoteFilterType(this._doc, instrument, toSimple));\r\n        }\r\n    }\r\n\r\n    private _randomPreset(): void {\r\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n        this._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n    }\r\n\r\n    private _randomGenerated(): void {\r\n        this._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n    }\r\n\r\n\r\n    private _whenSetTempo = (): void => {\r\n        this._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n    }\r\n\r\n    private _whenSetScale = (): void => {\r\n        if (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n            switch (this._scaleSelect.value) {\r\n                case \"forceScale\":\r\n                    this._doc.selection.forceScale();\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n        }\r\n    }\r\n\r\n    private _whenSetKey = (): void => {\r\n        if (isNaN(<number><unknown>this._keySelect.value)) {\r\n            switch (this._keySelect.value) {\r\n                case \"detectKey\":\r\n                    this._doc.record(new ChangeDetectKey(this._doc));\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n        }\r\n    }\r\n\r\n    private _whenSetRhythm = (): void => {\r\n        if (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n            switch (this._rhythmSelect.value) {\r\n                case \"forceRhythm\":\r\n                    this._doc.selection.forceRhythm();\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n        }\r\n    }\r\n\r\n    public _refocus = (): void => {\r\n        // Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n        var selfRef = this;\r\n        setTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n    }\r\n\r\n    public _whenSetPitchedPreset = (): void => {\r\n        this._setPreset($('#pitchPresetSelect').val() + \"\");\r\n    }\r\n\r\n    public _whenSetDrumPreset = (): void => {\r\n        this._setPreset($('#drumPresetSelect').val() + \"\");\r\n    }\r\n\r\n    private _setPreset(preset: string): void {\r\n        if (isNaN(<number><unknown>preset)) {\r\n            switch (preset) {\r\n                case \"copyInstrument\":\r\n                    this._copyInstrument();\r\n                    break;\r\n                case \"pasteInstrument\":\r\n                    this._pasteInstrument();\r\n                    break;\r\n                case \"randomPreset\":\r\n                    this._randomPreset();\r\n                    break;\r\n                case \"randomGenerated\":\r\n                    this._randomGenerated();\r\n                    break;\r\n            }\r\n            this._doc.notifier.changed();\r\n        } else {\r\n            this._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n        }\r\n    }\r\n\r\n    private _whenSetFeedbackType = (): void => {\r\n        this._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n    }\r\n\r\n\r\n    private _whenSetAlgorithm = (): void => {\r\n        this._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSelectInstrument = (event: MouseEvent): void => {\r\n        if (event.target == this._instrumentAddButton) {\r\n            this._doc.record(new ChangeAddChannelInstrument(this._doc));\r\n        } else if (event.target == this._instrumentRemoveButton) {\r\n            this._doc.record(new ChangeRemoveChannelInstrument(this._doc));\r\n        } else {\r\n            const index: number = this._instrumentButtons.indexOf(<any>event.target);\r\n            if (index != -1) {\r\n                this._doc.selection.selectInstrument(index);\r\n            }\r\n            // Force piano to re-show, if channel is modulator\r\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                this._piano.forceRender();\r\n            }\r\n            this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], index, ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\r\n        }\r\n\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _whenSetModChannel = (mod: number): void => {\r\n\r\n        let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        let previouslyUnset: boolean = (instrument.modulators[mod] == 0 || Config.modulators[instrument.modulators[mod]].forSong);\r\n\r\n        this._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n        const modChannel: number = Math.max(0, instrument.modChannels[mod]);\r\n\r\n        // Check if setting was 'song' or 'none' and is changing to a channel number, in which case suggested instrument to mod will auto-set to the current one.\r\n        if (this._doc.song.channels[modChannel].instruments.length > 1 && previouslyUnset && this._modChannelBoxes[mod].selectedIndex >= 2) {\r\n            if (this._doc.song.channels[modChannel].bars[this._doc.bar] > 0) {\r\n                this._doc.selection.setModInstrument(mod, this._doc.song.channels[modChannel].patterns[this._doc.song.channels[modChannel].bars[this._doc.bar] - 1].instruments[0]);\r\n            }\r\n        }\r\n\r\n        // Force piano to re-show\r\n        this._piano.forceRender();\r\n    }\r\n\r\n    private _whenSetModInstrument = (mod: number): void => {\r\n        this._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n        // Force piano to re-show\r\n        this._piano.forceRender();\r\n    }\r\n\r\n    private _whenSetModSetting = (mod: number, invalidIndex: boolean = false): void => {\r\n        let text: string = \"none\";\r\n        if (this._modSetBoxes[mod].selectedIndex != -1) {\r\n            text = this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string;\r\n\r\n            if (invalidIndex) {\r\n                // A setting is invalid (not in instrument's effects). It will be the first index. Allow it, but mark it as red.\r\n                this._modSetBoxes[mod].selectedOptions.item(0)!.style.setProperty(\"color\", \"red\");\r\n                this._modSetBoxes[mod].classList.add(\"invalidSetting\");\r\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = true;\r\n            } else {\r\n                this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\r\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = false;\r\n            }\r\n        }\r\n        if (!invalidIndex) // Invalid index means a set is actually not occurring, just the same index and a warning.\r\n            this._doc.selection.setModSetting(mod, text);\r\n\r\n        // Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n        this._piano.forceRender();\r\n\r\n    }\r\n\r\n    private _whenClickModTarget = (mod: number): void => {\r\n        if (this._modChannelBoxes[mod].selectedIndex >= 2) {\r\n            this._doc.selection.setChannelBar(this._modChannelBoxes[mod].selectedIndex - 2, this._doc.bar);\r\n        }\r\n    }\r\n\r\n    private _whenClickJumpToModTarget = (): void => {\r\n        const channelIndex: number = this._doc.channel;\r\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\r\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\r\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\r\n                const patternIdx = modChannel.bars[this._doc.bar];\r\n                if (patternIdx > 0) {\r\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\r\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= this._doc.song.channels[channelIndex].instruments.length)) {\r\n                            this._doc.selection.setChannelBar(modChannelIdx, this._doc.bar);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _whenSetModFilter = (mod: number): void => {\r\n        this._doc.selection.setModFilter(mod, this._modFilterBoxes[mod].selectedIndex);\r\n    }\r\n\r\n    private _whenSetChipWave = (): void => {\r\n        this._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetNoiseWave = (): void => {\r\n        this._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n    }\r\n\r\n\r\n\r\n    private _whenSetTransition = (): void => {\r\n        this._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetEffects = (): void => {\r\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n        const oldValue: number = instrument.effects;\r\n        const toggleFlag: number = Config.effectOrder[this._effectsSelect.selectedIndex - 1];\r\n        this._doc.record(new ChangeToggleEffects(this._doc, toggleFlag, null));\r\n        this._effectsSelect.selectedIndex = 0;\r\n        if (instrument.effects > oldValue) {\r\n            this._doc.addedEffect = true;\r\n        }\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    private _whenSetVibrato = (): void => {\r\n        this._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetVibratoType = (): void => {\r\n        this._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetUnison = (): void => {\r\n        this._doc.record(new ChangeUnison(this._doc, this._unisonSelect.selectedIndex));\r\n    }\r\n\r\n    private _whenSetChord = (): void => {\r\n        this._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n    }\r\n\r\n    private _addNewEnvelope = (): void => {\r\n        this._doc.record(new ChangeAddEnvelope(this._doc));\r\n        this.refocusStage();\r\n        this._doc.addedEnvelope = true;\r\n    }\r\n\r\n    private _zoomIn = (): void => {\r\n        this._doc.prefs.visibleOctaves = Math.max(1, this._doc.prefs.visibleOctaves - 1);\r\n        this._doc.prefs.save();\r\n        this._doc.notifier.changed();\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _zoomOut = (): void => {\r\n        this._doc.prefs.visibleOctaves = Math.min(Config.pitchOctaves, this._doc.prefs.visibleOctaves + 1);\r\n        this._doc.prefs.save();\r\n        this._doc.notifier.changed();\r\n        this.refocusStage();\r\n    }\r\n\r\n    private _fileMenuHandler = (event: Event): void => {\r\n        switch (this._fileMenu.value) {\r\n            case \"new\":\r\n                this._doc.goBackToStart();\r\n                this._doc.song.restoreLimiterDefaults();\r\n                for (const channel of this._doc.song.channels) {\r\n                    channel.muted = false;\r\n                    channel.name = \"\";\r\n                }\r\n                this._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n                break;\r\n            case \"export\":\r\n                this._openPrompt(\"export\");\r\n                break;\r\n            case \"import\":\r\n                this._openPrompt(\"import\");\r\n                break;\r\n            case \"copyUrl\":\r\n                this._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n                break;\r\n            case \"shareUrl\":\r\n                (<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n                break;\r\n            case \"shortenUrl\":\r\n                window.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n                break;\r\n            case \"viewPlayer\":\r\n                location.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n                break;\r\n            case \"copyEmbed\":\r\n                this._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n                break;\r\n            case \"songRecovery\":\r\n                this._openPrompt(\"songRecovery\");\r\n                break;\r\n        }\r\n        this._fileMenu.selectedIndex = 0;\r\n    }\r\n\r\n    private _editMenuHandler = (event: Event): void => {\r\n        switch (this._editMenu.value) {\r\n            case \"undo\":\r\n                this._doc.undo();\r\n                break;\r\n            case \"redo\":\r\n                this._doc.redo();\r\n                break;\r\n            case \"copy\":\r\n                this._doc.selection.copy();\r\n                break;\r\n            case \"insertBars\":\r\n                this._doc.selection.insertBars();\r\n                break;\r\n            case \"deleteBars\":\r\n                this._doc.selection.deleteBars();\r\n                break;\r\n            case \"insertChannel\":\r\n                this._doc.selection.insertChannel();\r\n                break;\r\n            case \"deleteChannel\":\r\n                this._doc.selection.deleteChannel();\r\n                break;\r\n            case \"pasteNotes\":\r\n                this._doc.selection.pasteNotes();\r\n                break;\r\n            case \"pasteNumbers\":\r\n                this._doc.selection.pasteNumbers();\r\n                break;\r\n            case \"transposeUp\":\r\n                this._doc.selection.transpose(true, false);\r\n                break;\r\n            case \"transposeDown\":\r\n                this._doc.selection.transpose(false, false);\r\n                break;\r\n            case \"selectAll\":\r\n                this._doc.selection.selectAll();\r\n                break;\r\n            case \"selectChannel\":\r\n                this._doc.selection.selectChannel();\r\n                break;\r\n            case \"duplicatePatterns\":\r\n                this._doc.selection.duplicatePatterns();\r\n                break;\r\n            case \"barCount\":\r\n                this._openPrompt(\"barCount\");\r\n                break;\r\n            case \"beatsPerBar\":\r\n                this._openPrompt(\"beatsPerBar\");\r\n                break;\r\n            case \"moveNotesSideways\":\r\n                this._openPrompt(\"moveNotesSideways\");\r\n                break;\r\n            case \"channelSettings\":\r\n                this._openPrompt(\"channelSettings\");\r\n                break;\r\n            case \"limiterSettings\":\r\n                this._openPrompt(\"limiterSettings\");\r\n                break;\r\n        }\r\n        this._editMenu.selectedIndex = 0;\r\n    }\r\n\r\n    private _optionsMenuHandler = (event: Event): void => {\r\n        switch (this._optionsMenu.value) {\r\n            case \"autoPlay\":\r\n                this._doc.prefs.autoPlay = !this._doc.prefs.autoPlay;\r\n                break;\r\n            case \"autoFollow\":\r\n                this._doc.prefs.autoFollow = !this._doc.prefs.autoFollow;\r\n                break;\r\n            case \"enableNotePreview\":\r\n                this._doc.prefs.enableNotePreview = !this._doc.prefs.enableNotePreview;\r\n                break;\r\n            case \"showLetters\":\r\n                this._doc.prefs.showLetters = !this._doc.prefs.showLetters;\r\n                break;\r\n            case \"showFifth\":\r\n                this._doc.prefs.showFifth = !this._doc.prefs.showFifth;\r\n                break;\r\n            case \"showThird\":\r\n                this._doc.prefs.showThird = !this._doc.prefs.showThird;\r\n                break;\r\n            case \"notesOutsideScale\":\r\n                this._doc.prefs.notesOutsideScale = !this._doc.prefs.notesOutsideScale;\r\n                break;\r\n            case \"setDefaultScale\":\r\n                this._doc.prefs.defaultScale = this._doc.song.scale;\r\n                break;\r\n            case \"showChannels\":\r\n                this._doc.prefs.showChannels = !this._doc.prefs.showChannels;\r\n                break;\r\n            case \"showScrollBar\":\r\n                this._doc.prefs.showScrollBar = !this._doc.prefs.showScrollBar;\r\n                break;\r\n            case \"alwaysFineNoteVol\":\r\n                this._doc.prefs.alwaysFineNoteVol = !this._doc.prefs.alwaysFineNoteVol;\r\n                break;\r\n            case \"enableChannelMuting\":\r\n                this._doc.prefs.enableChannelMuting = !this._doc.prefs.enableChannelMuting;\r\n                for (const channel of this._doc.song.channels) channel.muted = false;\r\n                break;\r\n            case \"displayBrowserUrl\":\r\n                this._doc.toggleDisplayBrowserUrl();\r\n                break;\r\n            case \"displayVolumeBar\":\r\n                this._doc.prefs.displayVolumeBar = !this._doc.prefs.displayVolumeBar;\r\n                break;\r\n            case \"notesFlashWhenPlayed\":\r\n                this._doc.prefs.notesFlashWhenPlayed = !this._doc.prefs.notesFlashWhenPlayed;\r\n                break;\r\n            case \"layout\":\r\n                this._openPrompt(\"layout\");\r\n                break;\r\n            case \"colorTheme\":\r\n                this._openPrompt(\"theme\");\r\n                break;\r\n            case \"recordingSetup\":\r\n                this._openPrompt(\"recordingSetup\");\r\n                break;\r\n        }\r\n        this._optionsMenu.selectedIndex = 0;\r\n        this._doc.notifier.changed();\r\n        this._doc.prefs.save();\r\n    }\r\n\r\n    private _customWavePresetHandler = (event: Event): void => {\r\n\r\n        // Update custom wave value\r\n        let customWaveArray: Float32Array = new Float32Array(64);\r\n        let index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n        let maxValue: number = Number.MIN_VALUE;\r\n        let minValue: number = Number.MAX_VALUE;\r\n        let arrayPoint: number = 0;\r\n        let arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n        for (let i: number = 0; i < 64; i++) {\r\n            // Compute derivative to get original wave.\r\n            customWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n            if (customWaveArray[i] < minValue)\r\n                minValue = customWaveArray[i];\r\n\r\n            if (customWaveArray[i] > maxValue)\r\n                maxValue = customWaveArray[i];\r\n\r\n            // Scale an any-size array to 64 elements\r\n            arrayPoint += arrayStep;\r\n        }\r\n\r\n        for (let i: number = 0; i < 64; i++) {\r\n            // Change array range from Min~Max to 0~(Max-Min)\r\n            customWaveArray[i] -= minValue;\r\n            // Divide by (Max-Min) to get a range of 0~1,\r\n            customWaveArray[i] /= (maxValue - minValue);\r\n            //then multiply by 48 to get 0~48,\r\n            customWaveArray[i] *= 48.0;\r\n            //then subtract 24 to get - 24~24\r\n            customWaveArray[i] -= 24.0;\r\n            //need to force integers\r\n            customWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n            // Copy back data to canvas\r\n            this._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n        }\r\n\r\n        //this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n        this._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n        this._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].expression) * Config.volumeRange / 2)));\r\n\r\n        this._customWavePresetDrop.selectedIndex = 0;\r\n        this._doc.notifier.changed();\r\n        this._doc.prefs.save();\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {Note, Pattern} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {ChangeGroup} from \"./Change\";\r\nimport {ChangeChannelBar, ChangePinTime, ChangeEnsurePatternExists, ChangeNoteAdded, ChangeInsertBars, ChangeDeleteBars, ChangeNoteLength} from \"./changes\";\r\nimport {Piano} from \"./Piano\";\r\n\r\nexport class SongPerformance {\r\n\tprivate _channelIsDrum: boolean = false;\r\n\tprivate _channelOctave: number = -1;\r\n\tprivate _songKey: number = -1;\r\n\tprivate _pitchesAreTemporary: boolean = false;\r\n\tprivate _bassPitchesAreTemporary: boolean = false;\r\n\tprivate readonly _recentlyAddedPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\r\n\tprivate readonly _recentlyAddedBassPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\r\n\r\n\tprivate _songLengthWhenRecordingStarted: number = -1;\r\n\tprivate _playheadPart: number = -1;\r\n\tprivate _bassPlayheadPart: number = -1;\r\n\tprivate _playheadPattern: Pattern | null = null;\r\n\tprivate _bassPlayheadPattern: Pattern | null = null;\r\n\tprivate _pitchesChanged: boolean = false;\r\n\tprivate _bassPitchesChanged: boolean = false;\r\n\tprivate _lastNote: Note | null = null;\r\n\tprivate _lastBassNote: Note | null = null;\r\n\tprivate _recordingChange: ChangeGroup | null = null;\r\n\t\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t}\r\n\t\r\n\tpublic play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis._doc.synth.enableMetronome = false;\r\n\t\tthis._doc.synth.countInMetronome = false\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t}\r\n\t\r\n\tpublic pause(): void {\r\n\t\tthis.clearAllPitches();\r\n\t\tthis.clearAllBassPitches();\r\n\t\tif (this._recordingChange != null) {\r\n\t\t\tif (this._doc.song.barCount > this._songLengthWhenRecordingStarted && !this._lastBarHasPatterns()) {\r\n\t\t\t\t// If an extra empty bar was added in case it was needed for recording, but it didn't end up getting used, delete it now.\r\n\t\t\t\tnew ChangeDeleteBars(this._doc, this._doc.song.barCount - 1, 1);\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, this._doc.song.barCount - 1);\r\n\t\t\t}\r\n\t\t\tif (!this._recordingChange.isNoop()) {\r\n\t\t\t\tthis._doc.record(this._recordingChange);\r\n\t\t\t\tthis._recordingChange = null;\r\n\t\t\t}\r\n\t\t\tthis._lastNote = null;\r\n\t\t}\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tthis._doc.synth.enableMetronome = false;\r\n\t\tthis._doc.synth.countInMetronome = false\r\n\t\tif (this._doc.prefs.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t}\r\n\t\r\n\tpublic record(): void {\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\t\tif (playheadBar != this._doc.bar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t}\r\n\t\tif (this._pitchesAreTemporary) {\r\n\t\t\tthis.clearAllPitches();\r\n\t\t\tthis._pitchesAreTemporary = false;\r\n\t\t}\r\n\t\tif (this._bassPitchesAreTemporary) {\r\n\t\t\tthis.clearAllBassPitches();\r\n\t\t\tthis._bassPitchesAreTemporary = false;\r\n\t\t}\r\n\t\tthis._doc.synth.enableMetronome = this._doc.prefs.metronomeWhileRecording;\r\n\t\tthis._doc.synth.countInMetronome = this._doc.prefs.metronomeCountIn;\r\n\t\tthis._doc.synth.startRecording();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._songLengthWhenRecordingStarted = this._doc.song.barCount;\r\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\r\n\t\tthis._bassPlayheadPart = this._getCurrentPlayheadPart();\r\n\t\tthis._playheadPattern = null;\r\n\t\tthis._bassPlayheadPattern = null;\r\n\t\tthis._pitchesChanged = false;\r\n\t\tthis._bassPitchesChanged = false;\r\n\t\tthis._lastNote = null;\r\n\t\tthis._lastBassNote = null;\r\n\t\tthis._recentlyAddedPitches.length = 0;\r\n\t\tthis._recentlyAddedBassPitches.length = 0;\r\n\t\tthis._recordingChange = new ChangeGroup();\r\n\t\tthis._doc.setProspectiveChange(this._recordingChange);\r\n\t}\r\n\t\r\n\tpublic abortRecording(): void {\r\n\t\tthis._recordingChange = null;\r\n\t\tthis.pause();\r\n\t}\r\n\t\r\n\tpublic pitchesAreTemporary(): boolean {\r\n\t\treturn this._pitchesAreTemporary;\r\n\t}\r\n\r\n\tpublic bassPitchesAreTemporary(): boolean {\r\n\t\treturn this._bassPitchesAreTemporary;\r\n\t}\r\n\r\n\tprivate _getBassOffsetChannel(): number {\r\n\t\tif ( this._doc.channel >= this._doc.song.pitchChannelCount )\r\n\t\t\treturn this._doc.channel;\r\n\t\treturn Math.max( 0, Math.min( this._doc.song.pitchChannelCount - 1, this._doc.channel + this._doc.prefs.bassOffset ));\r\n\t}\r\n\t\r\n\tprivate _getMinDivision(): number {\r\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\r\n\t\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate _getCurrentPlayheadPart(): number {\r\n\t\tconst currentPart: number = this._doc.synth.playhead * this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\treturn Math.round(currentPart / minDivision) * minDivision;\r\n\t\t}\r\n\t\treturn Math.round(currentPart);\r\n\t}\r\n\t\r\n\tprivate _lastBarHasPatterns(): boolean {\r\n\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tif (this._doc.song.channels[channelIndex].bars[this._doc.song.barCount - 1] != 0) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate _onAnimationFrame = (): void => {\r\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\r\n\t\tif (this._doc.synth.recording) {\r\n\t\t\tlet dirty: boolean = this._updateRecordedNotes();\r\n\t\t\tdirty = this._updateRecordedBassNotes() ? true : dirty;\r\n\t\t\tif (dirty) {\r\n\t\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\r\n\t\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Returns true if the full interface needs to be rerendered.\r\n\tprivate _updateRecordedNotes(): boolean {\r\n\t\tif (this._recordingChange == null) return false;\r\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\r\n\t\t\tthis.abortRecording();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this._doc.synth.countInMetronome) {\r\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\r\n\t\t\tthis._recentlyAddedPitches.length = 0;\r\n\t\t\tthis._pitchesChanged = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tconst oldPart: number = this._playheadPart % partsPerBar;\r\n\t\tconst oldBar: number = Math.floor(this._playheadPart / partsPerBar);\r\n\t\tconst oldPlayheadPart: number = this._playheadPart;\r\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\r\n\t\tconst newPart: number = this._playheadPart % partsPerBar;\r\n\t\tconst newBar: number = Math.floor(this._playheadPart / partsPerBar);\r\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\r\n\t\tif (this._playheadPart < oldPlayheadPart) {\r\n\t\t\tthis._lastNote = null;\r\n\t\t\tthis._playheadPattern = null;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tlet dirty = false;\r\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\r\n\t\t\tif (bar != oldBar) {\r\n\t\t\t\tthis._playheadPattern = null;\r\n\t\t\t}\r\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\r\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\r\n\t\t\tif (startPart == endPart) break;\r\n\t\t\tif (this._lastNote != null && !this._pitchesChanged && startPart > 0 && this._doc.synth.liveInputPitches.length > 0) {\r\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastNote, 1, endPart, this._lastNote.continuesLastPattern));\r\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\r\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (this._lastNote != null) {\r\n\t\t\t\t\t// End the last note.\r\n\t\t\t\t\tthis._lastNote = null;\r\n\t\t\t\t}\r\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\r\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\r\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\r\n\t\t\t\t// haven't been released yet.\r\n\t\t\t\tlet noteStartPart: number = startPart;\r\n\t\t\t\tlet noteEndPart: number = endPart;\r\n\t\t\t\twhile (noteStartPart < endPart) {\r\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\r\n\t\t\t\t\tif (this._recentlyAddedPitches.length > 0 || this._doc.synth.liveInputPitches.length > 0) {\r\n\t\t\t\t\t\tif (this._playheadPattern == null) {\r\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveInputChannel, bar);\r\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveInputChannel, bar));\r\n\t\t\t\t\t\t\tthis._playheadPattern = this._doc.song.getPattern(this._doc.synth.liveInputChannel, bar);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._playheadPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis._lastNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveInputChannel));\r\n\t\t\t\t\t\tthis._lastNote.continuesLastPattern = (noteStartPart == 0 && !this._pitchesChanged);\r\n\t\t\t\t\t\tthis._lastNote.pitches.length = 0;\r\n\t\t\t\t\t\twhile (this._recentlyAddedPitches.length > 0) {\r\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedPitches.shift()!;\r\n\t\t\t\t\t\t\tif (this._doc.synth.liveInputPitches.indexOf(recentPitch) == -1) {\r\n\t\t\t\t\t\t\t\tthis._lastNote.pitches.push(recentPitch);\r\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\r\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\tthis._lastNote.pitches.push(this._doc.synth.liveInputPitches[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._playheadPattern, this._lastNote, this._playheadPattern.notes.length));\r\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\r\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\r\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\r\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastNote, this._lastNote.start, noteEndPart);\r\n\t\t\t\t\t\t\tthis._lastNote = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdirty = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._pitchesChanged = addedAlreadyReleasedPitch;\r\n\t\t\t\t\tnoteStartPart = noteEndPart;\r\n\t\t\t\t\tnoteEndPart = endPart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bar == this._doc.song.barCount - 1) {\r\n\t\t\t\tif (this._lastBarHasPatterns()) {\r\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\r\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\r\n\t\t\t\t\tdirty = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dirty;\r\n\t}\r\n\r\n\t// Returns true if the full interface needs to be rerendered.\r\n\tprivate _updateRecordedBassNotes(): boolean {\r\n\t\tif (this._recordingChange == null) return false;\r\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\r\n\t\t\tthis.abortRecording();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this._doc.synth.countInMetronome) {\r\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\r\n\t\t\tthis._recentlyAddedBassPitches.length = 0;\r\n\t\t\tthis._bassPitchesChanged = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tconst oldPart: number = this._bassPlayheadPart % partsPerBar;\r\n\t\tconst oldBar: number = Math.floor(this._bassPlayheadPart / partsPerBar);\r\n\t\tconst oldPlayheadPart: number = this._bassPlayheadPart;\r\n\t\tthis._bassPlayheadPart = this._getCurrentPlayheadPart();\r\n\t\tconst newPart: number = this._bassPlayheadPart % partsPerBar;\r\n\t\tconst newBar: number = Math.floor(this._bassPlayheadPart / partsPerBar);\r\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\r\n\t\tif (this._bassPlayheadPart < oldPlayheadPart) {\r\n\t\t\tthis._lastBassNote = null;\r\n\t\t\tthis._bassPlayheadPattern = null;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tlet dirty = false;\r\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\r\n\t\t\tif (bar != oldBar) {\r\n\t\t\t\tthis._bassPlayheadPattern = null;\r\n\t\t\t}\r\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\r\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\r\n\t\t\tif (startPart == endPart) break;\r\n\t\t\tif (this._lastBassNote != null && !this._bassPitchesChanged && startPart > 0 && this._doc.synth.liveBassInputPitches.length > 0) {\r\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastBassNote, 1, endPart, this._lastBassNote.continuesLastPattern));\r\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\r\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (this._lastBassNote != null) {\r\n\t\t\t\t\t// End the last note.\r\n\t\t\t\t\tthis._lastBassNote = null;\r\n\t\t\t\t}\r\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\r\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\r\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\r\n\t\t\t\t// haven't been released yet.\r\n\t\t\t\tlet noteStartPart: number = startPart;\r\n\t\t\t\tlet noteEndPart: number = endPart;\r\n\t\t\t\twhile (noteStartPart < endPart) {\r\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\r\n\t\t\t\t\tif (this._recentlyAddedBassPitches.length > 0 || this._doc.synth.liveBassInputPitches.length > 0) {\r\n\t\t\t\t\t\tif (this._bassPlayheadPattern == null) {\r\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveBassInputChannel, bar);\r\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveBassInputChannel, bar));\r\n\t\t\t\t\t\t\tthis._bassPlayheadPattern = this._doc.song.getPattern(this._doc.synth.liveBassInputChannel, bar);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._bassPlayheadPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis._lastBassNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveBassInputChannel));\r\n\t\t\t\t\t\tthis._lastBassNote.continuesLastPattern = (noteStartPart == 0 && !this._bassPitchesChanged);\r\n\t\t\t\t\t\tthis._lastBassNote.pitches.length = 0;\r\n\t\t\t\t\t\twhile (this._recentlyAddedBassPitches.length > 0) {\r\n\t\t\t\t\t\t\tif (this._lastBassNote.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedBassPitches.shift()!;\r\n\t\t\t\t\t\t\tif (this._doc.synth.liveBassInputPitches.indexOf(recentPitch) == -1) {\r\n\t\t\t\t\t\t\t\tthis._lastBassNote.pitches.push(recentPitch);\r\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveBassInputPitches.length; i++) {\r\n\t\t\t\t\t\t\tif (this._lastBassNote.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\tthis._lastBassNote.pitches.push(this._doc.synth.liveBassInputPitches[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._bassPlayheadPattern, this._lastBassNote, this._bassPlayheadPattern.notes.length));\r\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\r\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\r\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\r\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastBassNote, this._lastBassNote.start, noteEndPart);\r\n\t\t\t\t\t\t\tthis._lastBassNote = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdirty = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._bassPitchesChanged = addedAlreadyReleasedPitch;\r\n\t\t\t\t\tnoteStartPart = noteEndPart;\r\n\t\t\t\t\tnoteEndPart = endPart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bar == this._doc.song.barCount - 1) {\r\n\t\t\t\tif (this._lastBarHasPatterns()) {\r\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\r\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\r\n\t\t\t\t\tdirty = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dirty;\r\n\t}\r\n\t\r\n\tpublic setTemporaryPitches(pitches: number[], duration: number): void {\r\n\t\tthis._updateRecordedNotes();\r\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\tthis._doc.synth.liveInputPitches[i] = pitches[i];\r\n\t\t}\r\n\t\tthis._doc.synth.liveInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\r\n\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\tthis._pitchesAreTemporary = true;\r\n\t\tthis._pitchesChanged = true;\r\n\t}\r\n\r\n\tpublic setTemporaryBassPitches(pitches: number[], duration: number): void {\r\n\t\tthis._updateRecordedBassNotes();\r\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\tthis._doc.synth.liveBassInputPitches[i] = pitches[i];\r\n\t\t}\r\n\t\tthis._doc.synth.liveBassInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\r\n\t\tthis._doc.synth.liveBassInputDuration = duration;\r\n\t\tthis._doc.synth.liveBassInputStarted = true;\r\n\t\tthis._bassPitchesAreTemporary = true;\r\n\t\tthis._bassPitchesChanged = true;\r\n\t}\r\n\t\r\n\tpublic addPerformedPitch(pitch: number): void {\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\r\n\t\tif (pitch > Piano.getBassCutoffPitch(this._doc) || this._getBassOffsetChannel() == this._doc.channel) {\r\n\t\t\tthis._updateRecordedNotes();\r\n\t\t\tif (this._pitchesAreTemporary) {\r\n\t\t\t\tthis.clearAllPitches();\r\n\t\t\t\tthis._pitchesAreTemporary = false;\r\n\t\t\t}\r\n\t\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this._doc.synth.liveInputPitches.indexOf(pitch) == -1) {\r\n\t\t\t\tthis._doc.synth.liveInputPitches.push(pitch);\r\n\t\t\t\tthis._pitchesChanged = true;\r\n\t\t\t\twhile (this._doc.synth.liveInputPitches.length > Config.maxChordSize) {\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches.shift();\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\t\t\r\n\t\t\t\tif (this._recordingChange != null) {\r\n\t\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\r\n\t\t\t\t\tif (recentIndex != -1) {\r\n\t\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\r\n\t\t\t\t\t\tthis._recentlyAddedPitches.splice(recentIndex, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._recentlyAddedPitches.push(pitch);\r\n\t\t\t\t\twhile (this._recentlyAddedPitches.length > Config.maxChordSize * 4) {\r\n\t\t\t\t\t\tthis._recentlyAddedPitches.shift();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._updateRecordedBassNotes();\r\n\t\t\tif (this._bassPitchesAreTemporary) {\r\n\t\t\t\tthis.clearAllBassPitches();\r\n\t\t\t\tthis._bassPitchesAreTemporary = false;\r\n\t\t\t}\r\n\t\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this._doc.synth.liveBassInputPitches.indexOf(pitch) == -1) {\r\n\t\t\t\tthis._doc.synth.liveBassInputPitches.push(pitch);\r\n\t\t\t\tthis._bassPitchesChanged = true;\r\n\t\t\t\twhile (this._doc.synth.liveBassInputPitches.length > Config.maxChordSize) {\r\n\t\t\t\t\tthis._doc.synth.liveBassInputPitches.shift();\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.synth.liveBassInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\t\t\r\n\t\t\t\tif (this._recordingChange != null) {\r\n\t\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\r\n\t\t\t\t\tif (recentIndex != -1) {\r\n\t\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\r\n\t\t\t\t\t\tthis._recentlyAddedBassPitches.splice(recentIndex, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._recentlyAddedBassPitches.push(pitch);\r\n\t\t\t\t\twhile (this._recentlyAddedBassPitches.length > Config.maxChordSize * 4) {\r\n\t\t\t\t\t\tthis._recentlyAddedBassPitches.shift();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic removePerformedPitch(pitch: number): void {\r\n\t\tif (pitch > Piano.getBassCutoffPitch(this._doc) || this._getBassOffsetChannel() == this._doc.channel) {\r\n\t\t\tthis._updateRecordedNotes();\r\n\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\r\n\t\t\t\tif (this._doc.synth.liveInputPitches[i] == pitch) {\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches.splice(i, 1);\r\n\t\t\t\t\tthis._pitchesChanged = true;\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._updateRecordedBassNotes();\r\n\t\t\tfor (let i: number = 0; i < this._doc.synth.liveBassInputPitches.length; i++) {\r\n\t\t\t\tif (this._doc.synth.liveBassInputPitches[i] == pitch) {\r\n\t\t\t\t\tthis._doc.synth.liveBassInputPitches.splice(i, 1);\r\n\t\t\t\t\tthis._bassPitchesChanged = true;\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic clearAllPitches(): void {\r\n\t\tthis._updateRecordedNotes();\r\n\t\tthis._doc.synth.liveInputPitches.length = 0;\r\n\t\tthis._pitchesChanged = true;\r\n\t}\r\n\r\n\tpublic clearAllBassPitches(): void {\r\n\t\tthis._updateRecordedBassNotes();\r\n\t\tthis._doc.synth.liveBassInputPitches.length = 0;\r\n\t\tthis._bassPitchesChanged = true;\r\n\t}\r\n\t\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst octave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\tif (this._doc.synth.liveInputChannel != this._doc.channel || this._doc.synth.liveBassInputChannel != this._getBassOffsetChannel() || this._channelIsDrum != isDrum || this._channelOctave != octave || this._songKey != this._doc.song.key) {\r\n\t\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\t\tthis._doc.synth.liveBassInputChannel = this._getBassOffsetChannel();\r\n\t\t\tthis._channelIsDrum = isDrum;\r\n\t\t\tthis._channelOctave = octave;\r\n\t\t\tthis._songKey = this._doc.song.key;\r\n\t\t\tthis.clearAllPitches();\r\n\t\t\tthis.clearAllBassPitches();\r\n\t\t}\r\n\t\tthis._doc.synth.liveInputInstruments = this._doc.recentPatternInstruments[this._doc.channel];\r\n\t\tthis._doc.synth.liveBassInputInstruments = this._doc.recentPatternInstruments[this._doc.synth.liveBassInputChannel];\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeTrackSelection, ChangeChannelBar, ChangeAddChannel, ChangeRemoveChannel, ChangeChannelOrder, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangeSetPatternInstruments, ChangeViewInstrument, ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeModFilter, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, ChangeRhythm, comparePatternNotes, unionOfUsedNotes, generateScaleMap, discardInvalidPatternInstruments, patternsContainSameInstruments } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n    instruments: number[];\r\n    notes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n    isNoise: boolean;\r\n    isMod: boolean;\r\n    patterns: Dictionary<PatternCopy>;\r\n    bars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n    partDuration: number;\r\n    channels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n    public boxSelectionX0: number = 0;\r\n    public boxSelectionY0: number = 0;\r\n    public boxSelectionX1: number = 0;\r\n    public boxSelectionY1: number = 0;\r\n    public digits: string = \"\";\r\n    public instrumentDigits: string = \"\";\r\n    public patternSelectionStart: number = 0;\r\n    public patternSelectionEnd: number = 0;\r\n    public patternSelectionActive: boolean = false;\r\n\r\n    private _changeTranspose: ChangeGroup | null = null;\r\n    private _changeTrack: ChangeGroup | null = null;\r\n    private _changeInstrument: ChangeGroup | null = null;\r\n    private _changeReorder: ChangeGroup | null = null;\r\n\r\n    constructor(private _doc: SongDocument) { }\r\n\r\n    public toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n        return {\r\n            \"x0\": this.boxSelectionX0,\r\n            \"x1\": this.boxSelectionX1,\r\n            \"y0\": this.boxSelectionY0,\r\n            \"y1\": this.boxSelectionY1,\r\n            \"start\": this.patternSelectionStart,\r\n            \"end\": this.patternSelectionEnd,\r\n        };\r\n    }\r\n\r\n    public fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n        if (json == null) return;\r\n        this.boxSelectionX0 = +json[\"x0\"];\r\n        this.boxSelectionX1 = +json[\"x1\"];\r\n        this.boxSelectionY0 = +json[\"y0\"];\r\n        this.boxSelectionY1 = +json[\"y1\"];\r\n        this.patternSelectionStart = +json[\"start\"];\r\n        this.patternSelectionEnd = +json[\"end\"];\r\n        this.digits = \"\";\r\n        this.instrumentDigits = \"\";\r\n        this.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n    }\r\n\r\n    public selectionUpdated(): void {\r\n        this._doc.notifier.changed();\r\n        this.digits = \"\";\r\n        this.instrumentDigits = \"\";\r\n    }\r\n\r\n    public get boxSelectionBar(): number {\r\n        return Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n    }\r\n    public get boxSelectionChannel(): number {\r\n        return Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n    }\r\n    public get boxSelectionWidth(): number {\r\n        return Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n    }\r\n    public get boxSelectionHeight(): number {\r\n        return Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n    }\r\n    public get boxSelectionActive(): boolean {\r\n        return this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1;\r\n    }\r\n    public scrollToSelectedPattern(): void {\r\n        this._doc.barScrollPos = Math.min(this._doc.bar, Math.max(this._doc.bar - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\r\n        this._doc.channelScrollPos = Math.min(this._doc.channel, Math.max(this._doc.channel - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\r\n    }\r\n    public scrollToEndOfSelection(): void {\r\n        this._doc.barScrollPos = Math.min(this.boxSelectionX1, Math.max(this.boxSelectionX1 - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\r\n        this._doc.channelScrollPos = Math.min(this.boxSelectionY1, Math.max(this.boxSelectionY1 - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\r\n    }\r\n\r\n    public setChannelBar(channelIndex: number, bar: number): void {\r\n        if (channelIndex == this._doc.channel && bar == this._doc.bar) return;\r\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTrack);\r\n        this._changeTrack = new ChangeGroup();\r\n        this._changeTrack.append(new ChangeChannelBar(this._doc, channelIndex, bar));\r\n        // @jummbus - changing current viewed instrument to the first for the current pattern if the viewedInstrument is not in the pattern\r\n        const pattern: Pattern | null = this._doc.getCurrentPattern(0);\r\n        if (pattern != null) {\r\n            if (pattern.instruments.indexOf(this._doc.viewedInstrument[this._doc.channel]) < 0) {\r\n                this._doc.viewedInstrument[this._doc.channel] = pattern.instruments[0];\r\n            }\r\n        }\r\n        // Don't erase existing redo history just to look at highlighted pattern.\r\n        if (!this._doc.hasRedoHistory()) {\r\n            this._doc.record(this._changeTrack, canReplaceLastChange);\r\n        }\r\n        this.selectionUpdated();\r\n\r\n    }\r\n\r\n    public setPattern(pattern: number): void {\r\n        this._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n    }\r\n\r\n    public nextDigit(digit: string, forInstrument: boolean, forRhythms: boolean): void {\r\n        if (forRhythms) {\r\n            if (digit == \"3\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 0));\r\n            }\r\n            else if (digit == \"4\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 1));\r\n            }\r\n            else if (digit == \"6\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 2));\r\n            }\r\n            else if (digit == \"8\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 3));\r\n            }\r\n            else if (digit == \"0\" || digit == \"1\") {\r\n                this._doc.record(new ChangeRhythm(this._doc, 4));\r\n            }\r\n        } else if (forInstrument) {\r\n            // Treat \"0\" as meaning instrument 10\r\n            if (digit == \"0\") digit = \"10\";\r\n            this.instrumentDigits += digit;\r\n            var parsed = parseInt(this.instrumentDigits);\r\n            //var pattern: Pattern | null = this._doc.getCurrentPattern();\r\n            if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\r\n                this.selectInstrument(parsed - 1);\r\n                return;\r\n            }\r\n            this.instrumentDigits = digit;\r\n            parsed = parseInt(this.instrumentDigits);\r\n            if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\r\n                this.selectInstrument(parsed - 1);\r\n                return;\r\n            }\r\n            this.instrumentDigits = \"\";\r\n        }\r\n        else {\r\n            this.digits += digit;\r\n            let parsed: number = parseInt(this.digits);\r\n            if (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n                this.setPattern(parsed);\r\n\r\n                return;\r\n            }\r\n\r\n            this.digits = digit;\r\n            parsed = parseInt(this.digits);\r\n            if (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n                this.setPattern(parsed);\r\n\r\n                return;\r\n            }\r\n\r\n            this.digits = \"\";\r\n        }\r\n    }\r\n\r\n    public setModChannel(mod: number, index: number): void {\r\n        this._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n    }\r\n\r\n    public setModInstrument(mod: number, instrument: number): void {\r\n        this._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n    }\r\n\r\n    public setModSetting(mod: number, text: string): void {\r\n        this._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n    }\r\n\r\n    public setModFilter(mod: number, type: number): void {\r\n        this._doc.record(new ChangeModFilter(this._doc, mod, type));\r\n    }\r\n\r\n    public insertBars(): void {\r\n        this._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n        const width: number = this.boxSelectionWidth;\r\n        this.boxSelectionX0 += width;\r\n        this.boxSelectionX1 += width;\r\n    }\r\n\r\n    public insertChannel(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        const insertIndex: number = this.boxSelectionChannel + this.boxSelectionHeight;\r\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(insertIndex - 1);\r\n        const isMod: boolean = this._doc.song.getChannelIsMod(insertIndex - 1)\r\n        group.append(new ChangeAddChannel(this._doc, insertIndex, isNoise, isMod));\r\n        if (!group.isNoop()) {\r\n            this.boxSelectionY0 = this.boxSelectionY1 = insertIndex;\r\n            group.append(new ChangeChannelBar(this._doc, insertIndex, this._doc.bar));\r\n            this._doc.record(group);\r\n        }\r\n    }\r\n\r\n    public deleteBars(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        if (this._doc.selection.patternSelectionActive) {\r\n\r\n            if (this.boxSelectionActive) {\r\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n            }\r\n\r\n            for (const channelIndex of this._eachSelectedChannel()) {\r\n                for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                    group.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n                }\r\n            }\r\n            group.append(new ChangePatternSelection(this._doc, 0, 0));\r\n        } else {\r\n            group.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n            const width: number = this.boxSelectionWidth;\r\n            this.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n            this.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n        }\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public deleteChannel(): void {\r\n        this._doc.record(new ChangeRemoveChannel(this._doc, this.boxSelectionChannel, this.boxSelectionChannel + this.boxSelectionHeight - 1));\r\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n        ColorConfig.resetColors();\r\n    }\r\n\r\n    private * _eachSelectedChannel(): IterableIterator<number> {\r\n        for (let channelIndex: number = this.boxSelectionChannel; channelIndex < this.boxSelectionChannel + this.boxSelectionHeight; channelIndex++) {\r\n            yield channelIndex;\r\n        }\r\n    }\r\n\r\n    private * _eachSelectedBar(): IterableIterator<number> {\r\n        for (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n            yield bar;\r\n        }\r\n    }\r\n\r\n    private *_eachSelectedPattern(channelIndex: number): IterableIterator<Pattern> {\r\n        const handledPatterns: Dictionary<boolean> = {};\r\n        for (const bar of this._eachSelectedBar()) {\r\n            const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\r\n            if (currentPatternIndex == 0) continue;\r\n            if (handledPatterns[String(currentPatternIndex)]) continue;\r\n            handledPatterns[String(currentPatternIndex)] = true;\r\n            const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n            if (pattern == null) throw new Error();\r\n            yield pattern;\r\n        }\r\n    }\r\n\r\n    private _parseCopiedInstrumentArray(patternCopy: any, channelIndex: number): number[] {\r\n        const instruments: number[] = Array.from(patternCopy[\"instruments\"]).map(i => (<any>i) >>> 0);\r\n        discardInvalidPatternInstruments(instruments, this._doc.song, channelIndex);\r\n        return instruments;\r\n    }\r\n\r\n    private _patternIndexIsUnused(channelIndex: number, patternIndex: number): boolean {\r\n        for (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n            if (this._doc.song.channels[channelIndex].bars[i] == patternIndex) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public copy(): void {\r\n        const channels: ChannelCopy[] = [];\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            const patterns: Dictionary<PatternCopy> = {};\r\n            const bars: number[] = [];\r\n\r\n            for (const bar of this._eachSelectedBar()) {\r\n                const patternNumber: number = this._doc.song.channels[channelIndex].bars[bar];\r\n                bars.push(patternNumber);\r\n                if (patterns[String(patternNumber)] == undefined) {\r\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                    let instruments: number[] = this._doc.recentPatternInstruments[channelIndex];\r\n                    let notes: Note[] = [];\r\n                    if (pattern != null) {\r\n                        instruments = pattern.instruments.concat();\r\n\r\n                        if (this.patternSelectionActive) {\r\n                            for (const note of pattern.cloneNotes()) {\r\n                                if (note.end <= this.patternSelectionStart) continue;\r\n                                if (note.start >= this.patternSelectionEnd) continue;\r\n                                note.start -= this.patternSelectionStart;\r\n                                note.end -= this.patternSelectionStart;\r\n                                if (note.start < 0 || note.end > this.patternSelectionEnd - this.patternSelectionStart) {\r\n                                    new ChangeNoteLength(null, note, Math.max(note.start, 0), Math.min(this.patternSelectionEnd - this.patternSelectionStart, note.end));\r\n                                }\r\n                                notes.push(note);\r\n                            }\r\n                        } else {\r\n                            notes = pattern.notes;\r\n                        }\r\n                    }\r\n                    patterns[String(patternNumber)] = { \"instruments\": instruments, \"notes\": notes };\r\n                }\r\n            }\r\n\r\n            const channelCopy: ChannelCopy = {\r\n                \"isNoise\": this._doc.song.getChannelIsNoise(channelIndex),\r\n                \"isMod\": this._doc.song.getChannelIsMod(channelIndex),\r\n                \"patterns\": patterns,\r\n                \"bars\": bars,\r\n            };\r\n            channels.push(channelCopy);\r\n        }\r\n\r\n        const selectionCopy: SelectionCopy = {\r\n            \"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n            \"channels\": channels,\r\n        };\r\n        window.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n        // Clear selection after copy\r\n        new ChangePatternSelection(this._doc, 0, 0);\r\n    }\r\n\r\n    // I'm sorry this function is so complicated!\r\n    // Basically I'm trying to avoid accidentally modifying patterns that are used\r\n    // elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n    // also trying to reuse patterns where it makes sense to do so, especially \r\n    // in the same channel it was copied from.\r\n    public pasteNotes(): void {\r\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n        if (selectionCopy == null) return;\r\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n        const copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        const fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n            const isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n            const isMod: boolean = !!channelCopy[\"isMod\"];\r\n            const patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n            if (copiedBars.length == 0) continue;\r\n            if (isNoise != this._doc.song.getChannelIsNoise(channelIndex)) continue;\r\n            if (isMod != this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n\r\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n            if (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n                // Special case: if there's just one pattern being copied, try to insert it\r\n                // into whatever pattern is already selected.\r\n                const copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n                const bar: number = this.boxSelectionBar;\r\n                const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\r\n                if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n                const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n                const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\r\n\r\n                if (currentPatternIndex == 0) {\r\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\r\n                    if (existingPattern != undefined &&\r\n                        !this.patternSelectionActive &&\r\n                        ((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) ||\r\n                            this._patternIndexIsUnused(channelIndex, copiedPatternIndex))) {\r\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n                    } else {\r\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                    }\r\n                }\r\n\r\n                const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                if (pattern == null) throw new Error();\r\n                group.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n                // @jummbus - I actually like it better if instruments copy over, unless it's not a mod and there are notes in the pattern.\r\n                if (currentPatternIndex == 0 || patternCopy.notes.length == 0 || channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                    this.selectInstrument(instrumentsCopy[0]);\r\n                    group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\r\n                }\r\n            } else if (this.patternSelectionActive) {\r\n                const reusablePatterns: Dictionary<number> = {};\r\n                const usedPatterns: Dictionary<boolean> = {};\r\n\r\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                    const bar: number = this.boxSelectionBar + pasteBar;\r\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n                    const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\r\n                    const reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n                    if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n                    if (reusablePatterns[reusedIndex] != undefined) {\r\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\r\n                        continue;\r\n                    }\r\n\r\n                    if (currentPatternIndex == 0) {\r\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n                        const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\r\n                        const pattern: Pattern = this._doc.song.getPattern(channelIndex, bar)!;\r\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\r\n                    } else {\r\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                        if (pattern == null) throw new Error();\r\n\r\n                        if (!usedPatterns[String(currentPatternIndex)]) {\r\n                            usedPatterns[String(currentPatternIndex)] = true;\r\n                        } else {\r\n                            // If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n                            // make a duplicate of it and modify that instead.\r\n                            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\r\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                            const newPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                            if (newPattern == null) throw new Error();\r\n                            for (const note of pattern.cloneNotes()) {\r\n                                group.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n                            }\r\n                            // Don't overwrite the existing pattern's instruments if only part of the pattern content is being replaced.\r\n                            //group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, pattern.instruments, newPattern));\r\n                        }\r\n                    }\r\n\r\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                    if (pattern == null) throw new Error();\r\n                    if (copiedPatternIndex == 0) {\r\n                        group.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n                    } else {\r\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n                        group.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n                    }\r\n\r\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\r\n                }\r\n            } else {\r\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                    // When a pattern becomes unused when replaced by rectangular selection pasting,\r\n                    // remove all the notes from the pattern so that it may be reused.\r\n                    this.erasePatternInBar(group, channelIndex, this.boxSelectionBar + pasteBar);\r\n                }\r\n\r\n                const reusablePatterns: Dictionary<number> = {};\r\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                    const bar: number = this.boxSelectionBar + pasteBar;\r\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n                    const reusedIndex: string = String(copiedPatternIndex);\r\n                    if (copiedPatternIndex == 0) continue;\r\n                    if (reusablePatterns[reusedIndex] != undefined) {\r\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\r\n                        continue;\r\n                    }\r\n                    const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n                    const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\r\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\r\n\r\n                    if (existingPattern != undefined &&\r\n                        copiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n                        comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n                        patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) {\r\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n                    } else {\r\n                        if (existingPattern != undefined && this._patternIndexIsUnused(channelIndex, copiedPatternIndex)) {\r\n                            group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n                        } else {\r\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\r\n                        }\r\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\r\n                        if (pattern == null) throw new Error();\r\n                        group.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\r\n                    }\r\n\r\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    // Set a bar's pattern number to zero, and if that pattern was not used\r\n    // elsewhere in the channel, erase all notes in it as well.\r\n    public erasePatternInBar(group: ChangeGroup, channelIndex: number, bar: number): void {\r\n        const removedPattern: number = this._doc.song.channels[channelIndex].bars[bar];\r\n        if (removedPattern != 0) {\r\n            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\r\n            if (this._patternIndexIsUnused(channelIndex, removedPattern)) {\r\n                // When a pattern becomes unused when replaced by rectangular selection pasting,\r\n                // remove all the notes from the pattern so that it may be reused.\r\n                this._doc.song.channels[channelIndex].patterns[removedPattern - 1].notes.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public pasteNumbers(): void {\r\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n        if (selectionCopy == null) return;\r\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n        const group: ChangeGroup = new ChangeGroup();\r\n        const fillSelection: boolean = this.boxSelectionActive;\r\n\r\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n            if (copiedBars.length == 0) continue;\r\n\r\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n            for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n                const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n                const bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n                if (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n                    group.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n                }\r\n\r\n                group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public selectAll(): void {\r\n        new ChangePatternSelection(this._doc, 0, 0);\r\n        if (this.boxSelectionBar == 0 &&\r\n            this.boxSelectionChannel == 0 &&\r\n            this.boxSelectionWidth == this._doc.song.barCount &&\r\n            this.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n        } else {\r\n            this.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n        }\r\n        this.selectionUpdated();\r\n    }\r\n\r\n    public selectChannel(): void {\r\n        new ChangePatternSelection(this._doc, 0, 0);\r\n        if (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n        } else {\r\n            this.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n        }\r\n        this.selectionUpdated();\r\n    }\r\n\r\n    public duplicatePatterns(): void {\r\n        this._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n    }\r\n\r\n    public muteChannels(allChannels: boolean): void {\r\n        if (allChannels) {\r\n            let anyMuted: boolean = false;\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\r\n                if (this._doc.song.channels[channelIndex].muted) {\r\n                    anyMuted = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\r\n                this._doc.song.channels[channelIndex].muted = !anyMuted;\r\n            }\r\n        } else {\r\n            let anyUnmuted: boolean = false;\r\n            for (const channelIndex of this._eachSelectedChannel()) {\r\n                if (!this._doc.song.channels[channelIndex].muted) {\r\n                    anyUnmuted = true;\r\n                    break;\r\n                }\r\n            }\r\n            for (const channelIndex of this._eachSelectedChannel()) {\r\n                this._doc.song.channels[channelIndex].muted = anyUnmuted;\r\n            }\r\n        }\r\n\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    public soloChannels(invert: boolean): void {\r\n        let alreadySoloed: boolean = true;\r\n\r\n        // Soloing mod channels - solo all channels affected by the mod, instead\r\n        if (this.boxSelectionChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\r\n            const currentChannel = this._doc.song.channels[this.boxSelectionChannel];\r\n            const bar: number = currentChannel.bars[this._doc.bar] - 1;\r\n            const modInstrument = (bar >= 0) ? currentChannel.instruments[currentChannel.patterns[bar].instruments[0]] : currentChannel.instruments[this._doc.viewedInstrument[this.boxSelectionChannel]];\r\n            const soloPattern: boolean[] = [];\r\n            let matchesSoloPattern: boolean = !invert;\r\n\r\n            // First pass: determine solo pattern\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                soloPattern[channelIndex] = false;\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (modInstrument.modChannels[mod] == channelIndex) {\r\n                        soloPattern[channelIndex] = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Second pass: determine if channels match solo pattern, overall\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                if (this._doc.song.channels[channelIndex].muted == soloPattern[channelIndex]) {\r\n                    matchesSoloPattern = invert;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Third pass: Actually apply solo pattern or unmute all\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                if (matchesSoloPattern) {\r\n                    this._doc.song.channels[channelIndex].muted = false;\r\n                }\r\n                else {\r\n                    this._doc.song.channels[channelIndex].muted = !soloPattern[channelIndex];\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                const shouldBeMuted: boolean = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\r\n                if (this._doc.song.channels[channelIndex].muted != shouldBeMuted) {\r\n                    alreadySoloed = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadySoloed) {\r\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\r\n                    this._doc.song.channels[channelIndex].muted = false;\r\n                }\r\n            } else {\r\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\r\n                    this._doc.song.channels[channelIndex].muted = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this._doc.notifier.changed();\r\n    }\r\n\r\n    public forceRhythm(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n\r\n        if (this.boxSelectionActive) {\r\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n        }\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                group.append(new ChangePatternRhythm(this._doc, pattern));\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public forceScale(): void {\r\n        const group: ChangeGroup = new ChangeGroup();\r\n\r\n        if (this.boxSelectionActive) {\r\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n        }\r\n\r\n        const scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                unionOfUsedNotes(pattern, scaleFlags);\r\n            }\r\n        }\r\n\r\n        const scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                group.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n            }\r\n        }\r\n\r\n        this._doc.record(group);\r\n    }\r\n\r\n    public setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n        const canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n        this._changeTrack = new ChangeGroup();\r\n        this._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n        this._doc.record(this._changeTrack, canReplaceLastChange);\r\n    }\r\n\r\n    public transpose(upward: boolean, octave: boolean): void {\r\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n        this._changeTranspose = new ChangeGroup();\r\n\r\n        if (this.boxSelectionActive) {\r\n\t\t    this._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n        }\r\n\r\n        for (const channelIndex of this._eachSelectedChannel()) {\r\n            // Can't transpose mod channels.\r\n            if (channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n                continue;\r\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                this._changeTranspose.append(new ChangeTranspose(this._doc, channelIndex, pattern, upward, this._doc.prefs.notesOutsideScale, octave));\r\n\t\t\t}\r\n        }\r\n\r\n        this._doc.record(this._changeTranspose, canReplaceLastChange);\r\n    }\r\n\r\n    public swapChannels(offset: number): void {\r\n        const possibleSectionBoundaries: number[] = [\r\n            this._doc.song.pitchChannelCount,\r\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount,\r\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount + this._doc.song.modChannelCount,\r\n            this._doc.song.getChannelCount(),\r\n        ];\r\n        let channelSectionMin: number = 0;\r\n        let channelSectionMax: number = 0;\r\n        for (const nextBoundary of possibleSectionBoundaries) {\r\n            if ((this.boxSelectionChannel < nextBoundary && offset < 0) || (this.boxSelectionChannel + this.boxSelectionHeight <= nextBoundary)) {\r\n                channelSectionMax = nextBoundary - 1;\r\n                break;\r\n            }\r\n            channelSectionMin = nextBoundary;\r\n        }\r\n        const newSelectionMin: number = Math.max(this.boxSelectionChannel, channelSectionMin);\r\n        const newSelectionMax: number = Math.min(this.boxSelectionChannel + this.boxSelectionHeight - 1, channelSectionMax);\r\n        offset = Math.max(offset, channelSectionMin - newSelectionMin);\r\n        offset = Math.min(offset, channelSectionMax - newSelectionMax);\r\n\r\n        if (offset != 0) {\r\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeReorder);\r\n            this._changeReorder = new ChangeGroup();\r\n            this.boxSelectionY0 = newSelectionMin + offset;\r\n            this.boxSelectionY1 = newSelectionMax + offset;\r\n            this._changeReorder.append(new ChangeChannelOrder(this._doc, newSelectionMin, newSelectionMax, offset));\r\n            this._changeReorder.append(new ChangeChannelBar(this._doc, Math.max(this.boxSelectionY0, Math.min(this.boxSelectionY1, this._doc.channel + offset)), this._doc.bar));\r\n            this.selectionUpdated();\r\n            this._doc.record(this._changeReorder, canReplaceLastChange);\r\n        }\r\n    }\r\n\r\n    public selectInstrument(instrument: number): void {\r\n        if (this._doc.viewedInstrument[this._doc.channel] == instrument) {\r\n            // Multi-selection is not possible for mods... that would not make much sense.\r\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n                const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\r\n                this._changeInstrument = new ChangeGroup();\r\n                const instruments: number[] = this._doc.recentPatternInstruments[this._doc.channel];\r\n                this._doc.notifier.changed(); // doc.recentPatternInstruments changes even if a 0 pattern is selected.\r\n                if (instruments.indexOf(instrument) == -1) {\r\n                    instruments.push(instrument);\r\n                    const maxLayers: number = this._doc.song.getMaxInstrumentsPerPattern(this._doc.channel);\r\n                    if (instruments.length > maxLayers) {\r\n                        instruments.splice(0, instruments.length - maxLayers);\r\n                    }\r\n                } else {\r\n                    instruments.splice(instruments.indexOf(instrument), 1);\r\n                    if (instruments.length == 0) instruments[0] = 0;\r\n                }\r\n\r\n                if (this.boxSelectionActive) {\r\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n                }\r\n                for (const channelIndex of this._eachSelectedChannel()) {\r\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\r\n                    }\r\n                }\r\n                if (!this._changeInstrument.isNoop())\r\n                    this._doc.record(this._changeInstrument, canReplaceLastChange);\r\n            }\r\n        } else {\r\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\r\n            this._changeInstrument = new ChangeGroup();\r\n            this._changeInstrument.append(new ChangeViewInstrument(this._doc, instrument));\r\n\r\n            if (!(this._doc.song.layeredInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) && this._doc.song.patternInstruments) {\r\n                if (this.boxSelectionActive) {\r\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n                }\r\n                const instruments: number[] = [instrument];\r\n                for (const channelIndex of this._eachSelectedChannel()) {\r\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\r\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\r\n                    }\r\n                }\r\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\r\n            } else if (!this._doc.hasRedoHistory()) {\r\n                // Don't erase existing redo history just to look at highlighted pattern.\r\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\r\n            }\r\n        }\r\n    }\r\n\r\n    public resetBoxSelection(): void {\r\n        this.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Scale, Config} from \"../synth/SynthConfig\";\r\n\r\nexport class Preferences {\r\n\tpublic static readonly defaultVisibleOctaves: number = 3;\r\n\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showThird: boolean;\r\n\tpublic notesOutsideScale: boolean;\r\n\tpublic defaultScale: number;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean;\r\n\tpublic displayVolumeBar: boolean;\r\n\tpublic instrumentCopyPaste: boolean;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic layout: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic volume: number = 75;\r\n\tpublic visibleOctaves: number = Preferences.defaultVisibleOctaves;\r\n\tpublic pressControlForShortcuts: boolean;\r\n\tpublic keyboardLayout: string;\r\n\tpublic bassOffset: number;\r\n\tpublic enableMidi: boolean;\r\n\tpublic showRecordButton: boolean;\r\n\tpublic snapRecordedNotesToRhythm: boolean;\r\n\tpublic ignorePerformedNotesNotInScale: boolean;\r\n\tpublic metronomeCountIn: boolean;\r\n\tpublic metronomeWhileRecording: boolean;\r\n\tpublic notesFlashWhenPlayed: boolean;\r\n\r\n\tconstructor() {\r\n\t\tthis.reload();\r\n\t}\r\n\r\n\tpublic reload(): void {\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") != \"false\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") != \"false\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showThird = window.localStorage.getItem(\"showThird\") == \"true\";\r\n\t\tthis.notesOutsideScale = window.localStorage.getItem(\"notesOutsideScale\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") == \"true\";\r\n\t\tthis.instrumentCopyPaste = window.localStorage.getItem(\"instrumentCopyPaste\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.pressControlForShortcuts = window.localStorage.getItem(\"pressControlForShortcuts\") == \"true\";\r\n\t\tthis.enableMidi = window.localStorage.getItem(\"enableMidi\") != \"false\";\r\n\t\tthis.showRecordButton = window.localStorage.getItem(\"showRecordButton\") == \"true\";\r\n\t\tthis.snapRecordedNotesToRhythm = window.localStorage.getItem(\"snapRecordedNotesToRhythm\") == \"true\";\r\n\t\tthis.ignorePerformedNotesNotInScale = window.localStorage.getItem(\"ignorePerformedNotesNotInScale\") == \"true\";\r\n\t\tthis.metronomeCountIn = window.localStorage.getItem(\"metronomeCountIn\") != \"false\";\r\n\t\tthis.metronomeWhileRecording = window.localStorage.getItem(\"metronomeWhileRecording\") != \"false\";\r\n\t\tthis.notesFlashWhenPlayed = window.localStorage.getItem(\"notesFlashWhenPlayed\") != \"false\";\r\n\t\tthis.keyboardLayout = window.localStorage.getItem(\"keyboardLayout\") || \"wickiHayden\";\r\n\t\tthis.bassOffset = (+(<any>window.localStorage.getItem(\"bassOffset\"))) || 0;\r\n\t\tthis.layout = window.localStorage.getItem(\"layout\") || \"small\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"dogebox2\";\r\n\t\tthis.visibleOctaves = ((<any>window.localStorage.getItem(\"visibleOctaves\")) >>> 0) || Preferences.defaultVisibleOctaves;\r\n\r\n\t\tconst defaultScale: Scale | undefined = Config.scales.dictionary[window.localStorage.getItem(\"defaultScale\")!];\r\n\t\tthis.defaultScale = (defaultScale != undefined) ? defaultScale.index : 0;\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.localStorage.getItem(\"fullScreen\") != null) {\r\n\t\t\tif (window.localStorage.getItem(\"fullScreen\") == \"true\") this.layout = \"long\";\r\n\t\t\twindow.localStorage.removeItem(\"fullScreen\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic save(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showThird\", this.showThird ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"notesOutsideScale\", this.notesOutsideScale ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"defaultScale\", Config.scales[this.defaultScale].name);\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"instrumentCopyPaste\", this.instrumentCopyPaste ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"pressControlForShortcuts\", this.pressControlForShortcuts ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableMidi\", this.enableMidi ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showRecordButton\", this.showRecordButton ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"snapRecordedNotesToRhythm\", this.snapRecordedNotesToRhythm ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"ignorePerformedNotesNotInScale\", this.ignorePerformedNotesNotInScale ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"metronomeCountIn\", this.metronomeCountIn ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"metronomeWhileRecording\", this.metronomeWhileRecording ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"notesFlashWhenPlayed\", this.notesFlashWhenPlayed ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"keyboardLayout\", this.keyboardLayout);\r\n\t\twindow.localStorage.setItem(\"bassOffset\", String(this.bassOffset));\r\n\t\twindow.localStorage.setItem(\"layout\", this.layout);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t\twindow.localStorage.setItem(\"visibleOctaves\", String(this.visibleOctaves));\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport {Config} from \"../synth/SynthConfig\";\r\nimport {isMobile} from \"./EditorConfig\";\r\nimport {Pattern, Channel, Song, Synth} from \"../synth/synth\";\r\nimport { SongRecovery, generateUid, errorAlert } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { SongPerformance } from \"./SongPerformance\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Preferences } from \"./Preferences\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments, discardInvalidPatternInstruments, ChangeHoldingModRecording} from \"./changes\";\r\n\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\tinstrument: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\t\tselection: {x0: number, x1: number, y0: number, y1: number, start: number, end: number};\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic performance: SongPerformance;\r\n\tpublic readonly notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic readonly selection: Selection = new Selection(this);\r\n\tpublic readonly prefs: Preferences = new Preferences();\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic recentPatternInstruments: number[][] = [];\r\n\tpublic viewedInstrument: number[] = [];\r\n\tpublic recordingModulators: boolean = false;\r\n\tpublic continuingModRecordingChange: ChangeHoldingModRecording | null = null;\r\n\t\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic trackVisibleChannels: number = 4;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic channelScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\t\r\n\tpublic addedEffect: boolean = false;\r\n\tpublic addedEnvelope: boolean = false;\r\n\tpublic currentPatternIsDirty: boolean = false;\r\n\tpublic modRecordingHandler: () => void;\r\n\t\r\n\tprivate static readonly _maximumUndoHistory: number = 300;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _lastSequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\t\t\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._validateDocState);\r\n\t\t\r\n\t\tColorConfig.setTheme(this.prefs.colorTheme);\r\n\t\tLayout.setLayout(this.prefs.layout);\r\n\t\t\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\t\t\t\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tthis.song = new Song(songString);\r\n\t\t\tif (songString == \"\" || songString == undefined) {\r\n\t\t\t\tsetDefaultInstruments(this.song);\r\n\t\t\t\tthis.song.scale = this.prefs.defaultScale;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\terrorAlert(error);\r\n\t\t}\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t\tthis.synth.anticipatePoorPerformance = isMobile;\r\n\t\t\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = {canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, instrument: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON()};\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\t\t\t\r\n\t\tthis.bar = state.bar | 0;\r\n\t\tthis.channel = state.channel | 0;\r\n\t\tfor (let i: number = 0; i <= this.channel; i++) this.viewedInstrument[i] = 0;\r\n\t\tthis.viewedInstrument[this.channel] = state.instrument | 0;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\t//this.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\t\tthis.selection.scrollToSelectedPattern();\r\n\t\t\t\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"change\", \"click\", \"keyup\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t\tfor (const eventName of [\"keydown\", \"input\", \"mousemove\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocumentIfNotRecordingMods);\r\n\t\t}\r\n\t\t\r\n\t\tthis._validateDocState();\r\n\t\tthis.performance = new SongPerformance(this);\r\n\t}\r\n\t\t\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\t\tthis.prefs.displayBrowserUrl = !this.prefs.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\t\t\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _getHash(): string {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({state, hash}));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({state, hash}));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t\tthis._lastSequenceNumber = state.sequenceNumber;\r\n\t}\r\n\r\n\tpublic hasRedoHistory(): boolean {\r\n\t\treturn this._lastSequenceNumber > this._sequenceNumber;\r\n\t}\t\r\n\t\t\r\n\tprivate _forward(): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _back(): void {\r\n\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (this.synth.recording) {\r\n\t\t\t// Changes to the song while it's recording to could mess up the recording so just abort the recording.\r\n\t\t\tthis.performance.abortRecording();\r\n\t\t}\r\n\t\t\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON()};\r\n\t\t\ttry {\r\n\t\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\t} catch (error) {\r\n\t\t\t\terrorAlert(error);\r\n\t\t\t}\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.prefs.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\t// Stop playing, and go to start when pasting new song in.\r\n\t\t\tthis.synth.pause();\r\n\t\t\tthis.synth.goToBar(0);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\t\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\t\t\t\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\t\t\t\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis.viewedInstrument[this.channel] = state.instrument;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\ttry {\r\n\t\t\tnew ChangeSong(this, this._getHash());\r\n\t\t} catch (error) {\r\n\t\t\terrorAlert(error);\r\n\t\t}\r\n\t\t\t\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\t\t\t\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\t\t\t\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\t\t\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocumentIfNotRecordingMods = (): void => {\r\n\t\tif (!this.recordingModulators)\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\telse {\r\n\t\t\tthis.modRecordingHandler();\r\n        }\r\n\r\n    }\r\n\t\r\n\tprivate _validateDocState = (): void => {\r\n\t\tconst channelCount: number = this.song.getChannelCount();\r\n\t\tfor (let i: number = this.recentPatternInstruments.length; i < channelCount; i++) {\r\n\t\t\tthis.recentPatternInstruments[i] = [0];\r\n\t}\r\n\t\tthis.recentPatternInstruments.length = channelCount;\r\n\t\tfor (let i: number = 0; i < channelCount; i++) {\r\n\t\t\tif (i == this.channel) {\r\n\t\t\t\tif (this.song.patternInstruments) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tthis.recentPatternInstruments[i] = pattern.instruments.concat();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst channel: Channel = this.song.channels[this.channel];\r\n\t\t\t\t\tfor (let j: number = 0; j < channel.instruments.length; j++) {\r\n\t\t\t\t\t\tthis.recentPatternInstruments[i][j] = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.recentPatternInstruments[i].length = channel.instruments.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdiscardInvalidPatternInstruments(this.recentPatternInstruments[i], this.song, i);\r\n\t\t}\r\n\r\n\t\tfor (let i: number = this.viewedInstrument.length; i < channelCount; i++) {\r\n\t\t\tthis.viewedInstrument[i] = 0;\r\n\t\t}\r\n\t\tthis.viewedInstrument.length = channelCount;\r\n\t\tfor (let i: number = 0; i < channelCount; i++) {\r\n\t\t\tif (this.song.patternInstruments && !this.song.layeredInstruments && i == this.channel) {\r\n\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tthis.viewedInstrument[i] = pattern.instruments[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.viewedInstrument[i] = Math.min(this.viewedInstrument[i] | 0, this.song.channels[i].instruments.length - 1);\r\n\t\t}\r\n\t\t\r\n\t\tconst highlightedPattern: Pattern | null = this.getCurrentPattern();\r\n\t\tif (highlightedPattern != null && this.song.patternInstruments) {\r\n\t\t\tthis.recentPatternInstruments[this.channel] = highlightedPattern.instruments.concat();\r\n\t\t}\r\n\t\t\r\n\t\t// Normalize selection.\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tchannelCount < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\r\n\t\tthis.barScrollPos     = Math.max(0, Math.min(this.song.barCount          - this.trackVisibleBars,     this.barScrollPos));\r\n\t\tthis.channelScrollPos = Math.max(0, Math.min(this.song.getChannelCount() - this.trackVisibleChannels, this.channelScrollPos));\r\n\r\n\t}\r\n\t\t\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tlet hash: string;\r\n\t\ttry {\r\n\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\thash = this.song.toBase64String();\r\n\t\t} catch (error) {\r\n\t\t\terrorAlert(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\t\t\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\t\t\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\t\t\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null || state.canUndo) this._back();\r\n\t}\r\n\t\t\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\t\t\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\t\t\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic checkLastChange(): Change | null {\r\n\t\treturn this._recentChange;\r\n\t}\r\n\t\t\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\t\t\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.bar = 0;\r\n\t\tthis.channel = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.channelScrollPos = 0;\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\t\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.prefs.volume = val;\r\n\t\tthis.prefs.save();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\t\t\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.prefs.volume / 50.0, 0.5)) * Math.pow(2.0, (this.prefs.volume - 75.0) / 25.0);\r\n\t}\r\n\t\t\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\t\t\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tif (barOffset == 0) {\r\n\t\t\treturn this.viewedInstrument[this.channel];\r\n\t\t} else {\r\n\t\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\t\treturn pattern == null ? 0 : pattern.instruments[0];\r\n        }\r\n\t}\r\n\t\t\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.prefs.layout == \"wide\") ? window.innerWidth <= 1000 : window.innerWidth <= 710;\r\n\t}\r\n\t\t\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.prefs.enableChannelMuting && (!this.getFullScreen() || this.prefs.layout == \"wide\")) ? 30 : 32;\r\n\t}\r\n\t\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.prefs.layout != \"wide\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\t\t\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.prefs.layout != \"small\");\r\n\t}\r\n\t\r\n\tpublic getVisibleOctaveCount(): number {\r\n\t\treturn this.getFullScreen() ? this.prefs.visibleOctaves : Preferences.defaultVisibleOctaves;\r\n}\r\n\t\r\n\tpublic getVisiblePitchCount(): number {\r\n\t\t return this.getVisibleOctaveCount() * Config.pitchesPerOctave + 1;\r\n\t}\r\n\t\r\n\tpublic getBaseVisibleOctave(channel: number): number {\r\n\t\tconst visibleOctaveCount: number = this.getVisibleOctaveCount();\r\n\t\treturn Math.max(0, Math.min(Config.pitchOctaves - visibleOctaveCount, Math.ceil(this.song.channels[channel].octave - visibleOctaveCount * 0.5)));\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport {SongEditor} from \"./SongEditor\";\r\nimport {NotePin, Note, Pattern, Instrument, Channel, Song, Synth} from \"../synth/synth\";\r\nimport {SongDocument} from \"./SongDocument\";\r\nimport {ExportPrompt} from \"./ExportPrompt\";\r\nimport {ChangePreset} from \"./changes\";\r\n\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.prefs.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\t// Can't call this immediately, as main.ts needs to finish executing for the beepbox namespace to finish being declared.\r\n\t\twindow.setTimeout(autoplay);\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.register(\"/service_worker.js\", {updateViaCache: \"all\", scope: \"/\"}).catch(() => {});\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\n\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Song, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset};\r\n"],"names":["__values","button","div","br","h2","input","label","select","option","span","p"],"mappings":"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AE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GA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AE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA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AC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EAAE,SAAS,EAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7C,EAAE,EAAE,EA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"}